"use strict";(self.webpackChunk_luxdocs_network=self.webpackChunk_luxdocs_network||[]).push([[3688],{56803:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>d,metadata:()=>r,toc:()=>l});var s=t(49214),i=t(43540);const d={tags:["Nodes"],description:"This section provides documents on how to build and maintain a Luxd node, and then validate the Lux network using a Luxd node.",sidebar_label:"Node \u27a1\ufe0f Validator",pagination_label:"Add a Node to the Validator Set",sidebar_position:3},a="Add a Node to the Validator Set",r={id:"nodes/validate/add-a-validator",title:"Add a Node to the Validator Set",description:"This section provides documents on how to build and maintain a Luxd node, and then validate the Lux network using a Luxd node.",source:"@site/docs/nodes/validate/add-a-validator.md",sourceDirName:"nodes/validate",slug:"/nodes/validate/add-a-validator",permalink:"/docs/nodes/validate/add-a-validator",draft:!1,unlisted:!1,editUrl:"https://github.com/luxfi/docs/edit/main/docs/nodes/validate/add-a-validator.md",tags:[{label:"Nodes",permalink:"/docs/tags/nodes"}],version:"current",sidebarPosition:3,frontMatter:{tags:["Nodes"],description:"This section provides documents on how to build and maintain a Luxd node, and then validate the Lux network using a Luxd node.",sidebar_label:"Node \u27a1\ufe0f Validator",pagination_label:"Add a Node to the Validator Set",sidebar_position:3},sidebar:"nodes",previous:{title:"How to Stake LUX",permalink:"/docs/nodes/validate/how-to-stake"},next:{title:"What to Expect While Bootstrapping",permalink:"/docs/nodes/maintain/node-bootstrap"}},o={},l=[{value:"Introduction",id:"introduction",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Add a Validator with Core extension",id:"add-a-validator-with-core-extension",level:2},{value:"Retrieve the Node ID",id:"retrieve-the-node-id",level:3},{value:"Add as a Validator",id:"add-as-a-validator",level:3},{value:"Add a Validator with LuxJS",id:"add-a-validator-with-luxjs",level:2},{value:"Install LuxJS",id:"install-luxjs",level:3},{value:"Testnet Workflow",id:"testnet-workflow",level:3},{value:"Private Key",id:"private-key",level:4},{value:"Network Setting",id:"network-setting",level:4},{value:"Settings for Validation",id:"settings-for-validation",level:4},{value:"Node ID",id:"node-id",level:4},{value:"Staking Period",id:"staking-period",level:4},{value:"Delegation Fee Rate",id:"delegation-fee-rate",level:4},{value:"Stake Amount",id:"stake-amount",level:4},{value:"Addresses",id:"addresses",level:4},{value:"Execute the Code",id:"execute-the-code",level:4},{value:"Customizing Addresses",id:"customizing-addresses",level:4},{value:"Mainnet Workflow",id:"mainnet-workflow",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"add-a-node-to-the-validator-set",children:"Add a Node to the Validator Set"}),"\n",(0,s.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"/docs/learn/lux/lux-platform",children:"Primary Network"}),"\nis inherent to the Lux platform and validates Lux\u2019s built-in\nblockchains. In this\ntutorial, we\u2019ll add a node to the Primary Network on Lux."]}),"\n",(0,s.jsxs)(n.p,{children:["The P-Chain manages metadata on Lux. This includes tracking which nodes\nare in which Subnets, which blockchains exist, and which Subnets are validating\nwhich blockchains. To add a validator, we\u2019ll issue\n",(0,s.jsx)(n.a,{href:"http://support.lux.network/en/articles/4587384-what-is-a-transaction",children:"transactions"}),"\nto the P-Chain."]}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsxs)(n.p,{children:["Note that once you issue the transaction to add a node as a validator, there is\nno way to change the parameters. ",(0,s.jsx)(n.strong,{children:"You can\u2019t remove your stake early or change\nthe stake amount, node ID, or reward address."})," Please make sure you\u2019re using\nthe correct values in the API calls below. If you\u2019re not sure, feel free to join\nour ",(0,s.jsx)(n.a,{href:"https://chat.lux.network/",children:"Discord"})," to ask questions."]})}),"\n",(0,s.jsx)(n.h2,{id:"requirements",children:"Requirements"}),"\n",(0,s.jsxs)(n.p,{children:["You've completed ",(0,s.jsx)(n.a,{href:"/docs/nodes/run/node-manually",children:"Run a Lux Node"})," and are familiar with\n",(0,s.jsx)(n.a,{href:"/docs/learn/lux/lux-platform",children:"Lux's architecture"}),". In this\ntutorial, we use ",(0,s.jsx)(n.a,{href:"/docs/tooling/luxjs-overview",children:"LuxJS"})," and\n",(0,s.jsx)(n.a,{href:"/docs/tooling/luxd-postman-collection/setup",children:"Lux\u2019s Postman collection"}),"\nto help us make API calls."]}),"\n",(0,s.jsxs)(n.p,{children:["In order to ensure your node is well-connected, make sure that your node can\nreceive and send TCP traffic on the staking port (",(0,s.jsx)(n.code,{children:"9651"})," by default) and your node\nhas a public IP address(it's optional to set --public-ip=[YOUR NODE'S PUBLIC IP HERE]\nwhen executing the Luxd binary, as by default, the node will attempt to perform\nNAT traversal to get the node's IP according to its router). Failing to do either of\nthese may jeopardize your staking reward."]}),"\n",(0,s.jsx)(n.h2,{id:"add-a-validator-with-core-extension",children:"Add a Validator with Core extension"}),"\n",(0,s.jsxs)(n.p,{children:["First, we show you how to add your node as a validator by using ",(0,s.jsx)(n.a,{href:"https://core.app",children:"Core web"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"retrieve-the-node-id",children:"Retrieve the Node ID"}),"\n",(0,s.jsxs)(n.p,{children:["Get your node\u2019s ID by calling ",(0,s.jsx)(n.a,{href:"/docs/reference/luxd/info-api#infogetnodeid",children:(0,s.jsx)(n.code,{children:"info.getNodeID"})}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc":"2.0",\n    "id"     :1,\n    "method" :"info.getNodeID"\n}\' -H \'content-type:application/json\' 127.0.0.1:9650/ext/info\n'})}),"\n",(0,s.jsx)(n.p,{children:"The response has your node\u2019s ID:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "nodeID": "NodeID-5mb46qkSBj81k9g9e4VFjGGSbaaSLFRzD"\n  },\n  "id": 1\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"add-as-a-validator",children:"Add as a Validator"}),"\n",(0,s.jsxs)(n.p,{children:["Connect ",(0,s.jsx)(n.a,{href:"https://join.core.app/extension",children:"Core extension"})," to ",(0,s.jsx)(n.a,{href:"https://core.app",children:"Core web"}),", and go the 'Staking' tab.\nHere, choose 'Validate' from the menu."]}),"\n",(0,s.jsxs)(n.p,{children:["Fill out the staking parameters. They are explained in more detail in ",(0,s.jsx)(n.a,{href:"/docs/nodes/validate/how-to-stake",children:"this doc"}),". When you\u2019ve\nfilled in all the staking parameters and double-checked them, click ",(0,s.jsx)(n.code,{children:"Submit Validation"}),". Make sure the staking period is at\nleast 2 weeks, the delegation fee rate is at least 2%, and you\u2019re staking at\nleast 2,000 LUX on Mainnet (1 LUX on Testnet). A full guide about this can be found\n",(0,s.jsx)(n.a,{href:"https://support.lux.network/en/articles/8117267-core-web-how-do-i-validate-in-core-stake",children:"here"}),"."]}),"\n",(0,s.jsx)("iframe",{src:"https://www.youtube.com/embed/1M0LZbuHO5Q?modestbranding=1&rel=0&iv_load_policy=3&color=white",width:"800",height:"500",title:"How to Validate in Core Web",frameborder:"0",allowfullscreen:!0}),"\n",(0,s.jsx)(n.p,{children:"You should see a success message, and your balance should be updated."}),"\n",(0,s.jsxs)(n.p,{children:["Go back to the ",(0,s.jsx)(n.code,{children:"Stake"})," tab, and you'll see here an overview of your validation,\nwith information like the amount staked, staking time, and more."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Staking Overview",src:t(93689).A+"",width:"1288",height:"804"})}),"\n",(0,s.jsxs)(n.p,{children:["Calling\n",(0,s.jsx)(n.a,{href:"/docs/reference/luxd/p-chain/api#platformgetpendingvalidators",children:(0,s.jsx)(n.code,{children:"platform.getPendingValidators"})}),"\nverifies that your transaction was accepted. Note that this API call should be\nmade before your node's validation start time, otherwise, the return will not\ninclude your node's id as it is no longer pending."]}),"\n",(0,s.jsxs)(n.p,{children:["You can also call\n",(0,s.jsx)(n.a,{href:"/docs/reference/luxd/p-chain/api#platformgetcurrentvalidators",children:(0,s.jsx)(n.code,{children:"platform.getCurrentValidators"})}),"\nto check that your node's id is included in the response."]}),"\n",(0,s.jsx)(n.p,{children:"That\u2019s it!"}),"\n",(0,s.jsx)(n.h2,{id:"add-a-validator-with-luxjs",children:"Add a Validator with LuxJS"}),"\n",(0,s.jsxs)(n.p,{children:["We can also add a node to the validator set using ",(0,s.jsx)(n.a,{href:"/docs/tooling/luxjs-overview",children:"LuxJS"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"install-luxjs",children:"Install LuxJS"}),"\n",(0,s.jsx)(n.p,{children:"To use LuxJS, you can clone the repo:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-zsh",children:"git clone https://github.com/luxfi/luxjs.git\n"})}),"\n",(0,s.jsxs)(n.admonition,{type:"info",children:[(0,s.jsx)(n.p,{children:"The repository cloning method used is HTTPS, but SSH can be used too:"}),(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"git clone git@github.com:luxfi/luxjs.git"})}),(0,s.jsxs)(n.p,{children:["You can find more about SSH and how to use it\n",(0,s.jsx)(n.a,{href:"https://docs.github.com/en/authentication/connecting-to-github-with-ssh/about-ssh",children:"here"}),"."]})]}),"\n",(0,s.jsx)(n.p,{children:"or add it to an existing project:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-zsh",children:"yarn add @luxfi/luxjs\n"})}),"\n",(0,s.jsxs)(n.p,{children:["For this tutorial we will use ",(0,s.jsx)(n.a,{href:"https://www.npmjs.com/package/ts-node",children:(0,s.jsx)(n.code,{children:"ts-node"})}),"\nto run the example scripts directly from a LuxJS directory."]}),"\n",(0,s.jsx)(n.h3,{id:"testnet-workflow",children:"Testnet Workflow"}),"\n",(0,s.jsx)(n.p,{children:"In this section, we will use Testnet to show how to add a node to the validator set."}),"\n",(0,s.jsxs)(n.p,{children:["Open your LuxJS directory and select the\n",(0,s.jsx)(n.a,{href:"https://github.com/luxfi/luxjs/tree/master/examples/platformvm",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"examples/platformvm"})})}),"\nfolder to view the source code for the examples scripts."]}),"\n",(0,s.jsxs)(n.p,{children:["We will use the\n",(0,s.jsx)(n.a,{href:"https://github.com/luxfi/luxjs/blob/master/examples/platformvm/buildAddValidatorTx.ts",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"buildAddValidatorTx.ts"})})}),"\nscript to add a validator. To learn more about the ",(0,s.jsx)(n.code,{children:"buildAddValidatorTx"})," API,\nplease click\n",(0,s.jsx)(n.a,{href:"https://github.com/luxfi/luxjs-docs/blob/main/classes/api_platformvm.platformvmapi.md#buildaddvalidatortx",children:"here"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"private-key",children:"Private Key"}),"\n",(0,s.jsx)(n.p,{children:"Locate this line in the file"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"const privKey: string = `${PrivateKeyPrefix}${DefaultLocalGenesisPrivateKey}`;\n"})}),"\n",(0,s.jsxs)(n.p,{children:["and replace this with a private key that you control. You can use ",(0,s.jsx)(n.a,{href:"https://github.com/luxfi/luxjs/blob/master/examples/platformvm/createKeypair.ts",children:"this code to generate a new key"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'const privKey: string = "<YOUR-PRIVATE-KEY-HERE>";\n'})}),"\n",(0,s.jsx)(n.h4,{id:"network-setting",children:"Network Setting"}),"\n",(0,s.jsxs)(n.p,{children:["The following settings work when using a local node started with\n",(0,s.jsx)(n.a,{href:"/docs/nodes/configure/luxd-config-flags#network-id",children:(0,s.jsx)(n.code,{children:"--network-id=testnet"})}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'const ip: string = "localhost";\nconst port: number = 9650;\nconst protocol: string = "http";\nconst networkID: number = 5;\n'})}),"\n",(0,s.jsxs)(n.p,{children:["However, to connect directly to the ",(0,s.jsx)(n.a,{href:"/docs/tooling/rpc-providers",children:"Lux Testnet API server"}),", the following changes are\nneeded:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'const ip: string = "api.lux-test.network";\nconst port: number = 443;\nconst protocol: string = "https";\nconst networkID: number = 5;\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Depending on the networkID passed in when instantiating an ",(0,s.jsx)(n.code,{children:"Lux"})," object in\nthe code, the encoded addresses used will have a distinctive Human Readable\nPart(HRP) per network."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.em,{children:["Example Address: 5 - X-",(0,s.jsx)(n.code,{children:"testnet"}),"19rknw8l0grnfunjrzwxlxync6zrlu33yxqzg0h"]})}),"\n",(0,s.jsx)(n.p,{children:"For Testnet, 5 is the correct value to use."}),"\n",(0,s.jsxs)(n.p,{children:["To learn more about encoded addresses, click ",(0,s.jsx)(n.a,{href:"/docs/tooling/luxjs-guides/manage-x-chain-keys#encode-bech32-addresses",children:"here"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"settings-for-validation",children:"Settings for Validation"}),"\n",(0,s.jsx)(n.p,{children:"Next we need to specify the node's validation period and delegation fee."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'const nodeID: string = "NodeID-7Xhw2mDxuDS44j42TCB6U5579esbSt3Lg";\nconst startTime: BN = UnixNow().add(new BN(60 * 1));\nconst endTime: BN = startTime.add(new BN(26300000));\nconst delegationFee: number = 10;\n'})}),"\n",(0,s.jsx)(n.h4,{id:"node-id",children:"Node ID"}),"\n",(0,s.jsxs)(n.p,{children:["This is the node ID of the validator being added. See ",(0,s.jsx)(n.a,{href:"#retrieve-the-node-id",children:"above\nsection"})," on how to retrieve the node id by using API\n",(0,s.jsx)(n.a,{href:"/docs/reference/luxd/info-api#infogetnodeid",children:(0,s.jsx)(n.code,{children:"info.getNodeID"})}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"staking-period",children:"Staking Period"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"startTime"})," and ",(0,s.jsx)(n.code,{children:"endTime"})," are required to specify the time of starting/leaving\nvalidation. The minimum duration that one can validate the Primary Network is 2\nweeks, and the maximum duration is one year. One can start a new validation on\nthe Primary Network after finishing one, it\u2019s just that the maximum ",(0,s.jsx)(n.em,{children:"continuous"}),"\nduration is one year. ",(0,s.jsx)(n.code,{children:"startTime"})," and ",(0,s.jsx)(n.code,{children:"endTime"})," are the Unix times when your\nvalidator will start and stop validating the Primary Network, respectively.\n",(0,s.jsx)(n.code,{children:"startTime"})," must be in the future relative to the time the transaction is\nissued."]}),"\n",(0,s.jsxs)(n.p,{children:["The sample code uses ",(0,s.jsx)(n.code,{children:"const startTime: BN = UnixNow().add(new BN(60 * 1))"})," and\n",(0,s.jsx)(n.code,{children:"const endTime: BN = startTime.add(new BN(26300000))"})," to compute the Unix time 1\nminute and 304 days in the future (at the time when this article was written) to\nuse as the values of ",(0,s.jsx)(n.code,{children:"startTime"})," and ",(0,s.jsx)(n.code,{children:"endTime"}),", respectively."]}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["You can create your own Unix timestamp ",(0,s.jsx)(n.a,{href:"https://www.unixtimestamp.com/",children:"here"})," or\nby using the ",(0,s.jsx)(n.code,{children:"UnixNow()"})," method"]})}),"\n",(0,s.jsx)(n.p,{children:"To create your own start times, please follow the steps below:"}),"\n",(0,s.jsx)(n.p,{children:"Locate this line in the file"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const startTime: BN = UnixNow().add(new BN(60 * 1));\nconst endTime: BN = startTime.add(new BN(26300000));\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Change ",(0,s.jsx)(n.code,{children:"startTime"})," and ",(0,s.jsx)(n.code,{children:"endTime"})," to new ",(0,s.jsx)(n.code,{children:"BN"})," values, for example:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const startTime: BN = new BN(1654656829); // Wed Jun 08 2022 02:53:49 GMT+0000\nconst endTime: BN = new BN(1662602029); // Thu Sep 08 2022 01:53:49 GMT+0000\n"})}),"\n",(0,s.jsx)(n.h4,{id:"delegation-fee-rate",children:"Delegation Fee Rate"}),"\n",(0,s.jsxs)(n.p,{children:["Lux allows for delegation of stake. This parameter is the percent fee this\nvalidator charges when others delegate stake to them. For example, if\n",(0,s.jsx)(n.code,{children:"delegationFeeRate"})," is ",(0,s.jsx)(n.code,{children:"10"})," and someone delegates to this validator, then when\nthe delegation period is over, 10% of the reward goes to the validator and the\nrest goes to the delegator, if this node meets the validation reward\nrequirements."]}),"\n",(0,s.jsx)(n.h4,{id:"stake-amount",children:"Stake Amount"}),"\n",(0,s.jsxs)(n.p,{children:["Set the proper staking amount in calling ",(0,s.jsx)(n.code,{children:"pchain.buildAddValidatorTx"})," by\nreplacing ",(0,s.jsx)(n.code,{children:"stakeAmount.minValidatorStake"})," with a number in the unit of gwei, for\nexample, ",(0,s.jsx)(n.code,{children:"BN(1e12)"})," which is 10,000 LUX."]}),"\n",(0,s.jsx)(n.h4,{id:"addresses",children:"Addresses"}),"\n",(0,s.jsxs)(n.p,{children:["By default, the example uses the variable ",(0,s.jsx)(n.code,{children:"pAddressStrings"})," to define\n",(0,s.jsx)(n.code,{children:"toAddresses"}),", ",(0,s.jsx)(n.code,{children:"fromAddresses"}),", ",(0,s.jsx)(n.code,{children:"changeAddresses"})," and ",(0,s.jsx)(n.code,{children:"rewardAddresses"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"const pAddressStrings: string[] = pchain.keyChain().getAddressStrings();\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This retrieves the P-Chain addresses that belong to the ",(0,s.jsx)(n.code,{children:"private key"})," that appears earlier in the example."]}),"\n",(0,s.jsxs)(n.p,{children:["No change is needed in the addresses for the default action. For customization,\nplease refer to ",(0,s.jsx)(n.a,{href:"#customizing-addresses",children:"this section"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"execute-the-code",children:"Execute the Code"}),"\n",(0,s.jsx)(n.p,{children:"Now that we have made all of the necessary changes to the example script, it's\ntime to add a validator to the Testnet Network."}),"\n",(0,s.jsx)(n.p,{children:"Run the command:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-zsh",children:"ts-node examples/platformvm/buildAddValidatorTx.ts\n"})}),"\n",(0,s.jsx)(n.p,{children:"The response has the transaction ID."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-zsh",children:"Success! TXID: 2ftDVwmss5eJk8HFsNVi6a3vWK9s3szZFhEeSY2HCS8xDb8Cra\n"})}),"\n",(0,s.jsxs)(n.p,{children:["We can check the transaction\u2019s status by running the example script:\n",(0,s.jsx)(n.a,{href:"https://github.com/luxfi/luxjs/blob/master/examples/platformvm/getTxStatus.ts",children:(0,s.jsx)(n.code,{children:"getTxStatus.ts"})}),"\nfollowing the steps below:"]}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Ensure that your ",(0,s.jsx)(n.a,{href:"#network-setting",children:"network settings"})," are correct before running the script."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Locate this line in the file"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'const main = async (): Promise<any> => {\n  const txID: string = "x1NLb9JaHkKTXvSRReVSsFwQ38mY7bfD1Ky1BPv721VhrpuSE"\n  ...\n  }\n'})}),"\n",(0,s.jsxs)(n.p,{children:["and replace it with the ",(0,s.jsx)(n.em,{children:"buildAddValidator"})," TXID"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'const main = async (): Promise<any> => {\n const txID: string = "2ftDVwmss5eJk8HFsNVi6a3vWK9s3szZFhEeSY2HCS8xDb8Cra"\n ...\n }\n'})}),"\n",(0,s.jsx)(n.p,{children:"Run the command:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"ts-node examples/platformvm/getTxStatus.ts\n"})}),"\n",(0,s.jsx)(n.p,{children:"This returns:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"{ status: 'Committed' }\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The status should be ",(0,s.jsx)(n.code,{children:"Committed"}),", meaning the transaction was successful."]}),"\n",(0,s.jsxs)(n.p,{children:["We can see if the node is now in the pending validator set for the Testnet network\nby using the\nexample:",(0,s.jsx)(n.a,{href:"https://github.com/luxfi/luxjs/blob/master/examples/platformvm/getPendingValidators.ts",children:(0,s.jsx)(n.code,{children:"getPendingValidators.ts"})}),".\nJust change the ",(0,s.jsx)(n.a,{href:"#network-setting",children:"network settings"})," to meet Testnet requirements\nand then run the script:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-sh",children:"ts-node examples/platformvm/getPendingValidators.ts\n"})}),"\n",(0,s.jsx)(n.p,{children:"The response should include the node we just added:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "validators": [\n    {\n      "nodeID": "NodeID-7Xhw2mDxuDS44j42TCB6U5579esbSt3Lg",\n      "startTime": "1654656829",\n      "endtime": "1662602029",\n      "stakeAmount": "1000000000"\n    }\n  ],\n  "delegators": []\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["When the time reaches ",(0,s.jsx)(n.code,{children:"1654656829"})," (Wed Jun 08 2022 02:53:49 GMT+0000), this\nnode will start validating the Primary Network. When it reaches ",(0,s.jsx)(n.code,{children:"1662602029"}),"\n(Thu Sep 08 2022 01:53:49 GMT+0000), this node will stop validating the Primary\nNetwork. The staked LUX and the rewards, if any, will be returned to\n",(0,s.jsx)(n.code,{children:"pAddressStrings"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"customizing-addresses",children:"Customizing Addresses"}),"\n",(0,s.jsxs)(n.p,{children:["There are 4 addresses which are needed when calling\n",(0,s.jsx)(n.code,{children:"pchain.buildAddValidatorTx"}),". Only 2 of them can be changed: ",(0,s.jsx)(n.code,{children:"toAddresses"})," and\n",(0,s.jsx)(n.code,{children:"rewardAddresses"}),". For backward-compatibility reasons, ",(0,s.jsx)(n.code,{children:"fromAddresses"})," and\n",(0,s.jsx)(n.code,{children:"changeAddresses"})," are just placeholders and are ignored."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"toAddresses"})}),"\n",(0,s.jsx)(n.p,{children:"An array of addresses who receive the staked tokens at the end of the staking period."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"rewardAddresses"})}),"\n",(0,s.jsxs)(n.p,{children:["When a validator stops validating the Primary Network, they will receive a\nreward if they are sufficiently responsive and correct while they validated the\nPrimary Network. These tokens are sent to ",(0,s.jsx)(n.code,{children:"rewardAddresses"}),". The original stake\nwill be sent back to the addresses defined in ",(0,s.jsx)(n.code,{children:"toAddresses"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"A validator\u2019s stake is never slashed, regardless of their behavior they will\nalways receive their stake back when they\u2019re done validating."}),"\n",(0,s.jsx)(n.p,{children:"Locate this part of the code"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"let privKey: string = `${PrivateKeyPrefix}${DefaultLocalGenesisPrivateKey}`;\npKeychain.importKey(privKey);\n"})}),"\n",(0,s.jsxs)(n.p,{children:["and replace ",(0,s.jsx)(n.code,{children:"privKey"})," with private keys that you control. To generate a new\nkeypair, we can use the\n",(0,s.jsx)(n.a,{href:"https://github.com/luxfi/luxjs/blob/master/examples/platformvm/createKeypair.ts",children:(0,s.jsx)(n.code,{children:"createKeypair.ts"})}),"\nexample script along with ",(0,s.jsx)(n.a,{href:"#network-setting",children:"Testnet Network Settings"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'let privKey: string =\n  "PrivateKey-PY2dvfxzvBAe1a5nn7x23wmZMgAYJaS3XAZXzdUa22JtzUvKM";\npKeychain.importKey(privKey);\nprivKey = "PrivateKey-2Y3Vg9LShMJyUDBHzQqv5WtKDJ8yAVHyM3H5CNCBBmtg3pQEQG";\npKeychain.importKey(privKey);\nprivKey = "PrivateKey-NaV16owRSfa5TAtxtoU1BPUoM2y1ohttRbwKJG1j7onE4Ge1s";\npKeychain.importKey(privKey);\npriKey = "PrivateKey-26JMUsR5RCkf5k9ME8WxKCWEuCK5s2SrALUn7vEa2urwyDDc91";\npKeychain.importKey(privKey);\n\nconst pAddressStrings: string[] = pchain.keyChain().getAddressStrings();\n'})}),"\n",(0,s.jsx)(n.p,{children:"This example would create a keychain with 4 addresses:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:'  "P-testnet1jx644d9y00y5q4hz8cq4wr75a2erne2y4e32xc", // pAddressStrings[0]\n  "P-testnet1wchdgdp94j8tszlpsp56qvgkvdn20svpmnm8qk", // pAddressStrings[1]\n  "P-testnet1f36kkpy6yzd7ayrywxvvprns7qlrcu3hwqdya8", // pAddressStrings[2]\n  "P-testnet1qw7yt3fp43kuwsufff4vhezs2yl00slr09vmh5", // pAddressStrings[3]\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Now we can pass in each address according to its slot in the ",(0,s.jsx)(n.code,{children:"pAddressStrings"})," array:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"const unsignedTx: UnsignedTx = await pchain.buildAddValidatorTx(\n  utxoSet,\n  [pAddressStrings[0], pAddressStrings[1]], // toAddresses, one or more addresses\n  [pAddressStrings[0]], // fromAddresses, required for backward-compatibility\n  [pAddressStrings[0]], // changeAddresses, required for backward-compatibility\n  nodeID,\n  startTime,\n  endTime,\n  stakeAmount.minValidatorStake,\n  [pAddressStrings[2], pAddressStrings[3]], //rewardAddresses, one or more addresses\n  delegationFee,\n  locktime,\n  threshold,\n  memo,\n  asOf\n);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"mainnet-workflow",children:"Mainnet Workflow"}),"\n",(0,s.jsx)(n.p,{children:"The Testnet workflow above can be adapted to Mainnet with the following modifications:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The correct private key."}),"\n",(0,s.jsxs)(n.li,{children:["Network setting should be to a Mainnet node, either\n",(0,s.jsx)(n.a,{href:"/docs/nodes/configure/luxd-config-flags#network-id",children:"a local node on Mainnet"})," or\n",(0,s.jsx)(n.a,{href:"/docs/tooling/rpc-providers#using-the-public-api-nodes",children:"Lux Mainnet API server"}),"\nwhere ",(0,s.jsx)(n.code,{children:"api.lux.network"})," should be used for the ",(0,s.jsx)(n.code,{children:"ip"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"const networkID: number = 1"})," based on ",(0,s.jsx)(n.a,{href:"/docs/tooling/luxjs-guides/manage-x-chain-keys#encode-bech32-addresses",children:"this"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"Set the correct amount to stake."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},93689:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/staking-overview-331133392e474a314d17a9070012b617.png"},43540:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var s=t(48318);const i={},d=s.createContext(i);function a(e){const n=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(d.Provider,{value:n},e.children)}}}]);