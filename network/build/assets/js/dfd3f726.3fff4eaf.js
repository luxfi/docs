"use strict";(self.webpackChunk_luxdocs_network=self.webpackChunk_luxdocs_network||[]).push([[5547],{41867:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>c,frontMatter:()=>i,metadata:()=>r,toc:()=>l});var s=t(49214),o=t(43540);const i={tags:["Build","Subnets"],description:"This tutorial demonstrates how to deploy a permissioned Subnet on Lux Mainnet.",sidebar_label:"On Lux Mainnet",pagination_label:"Deploy a Permissioned Subnet on Mainnet",sidebar_position:2},a="Deploy a Permissioned Subnet on Mainnet",r={id:"build/subnet/deploy/mainnet-subnet",title:"Deploy a Permissioned Subnet on Mainnet",description:"This tutorial demonstrates how to deploy a permissioned Subnet on Lux Mainnet.",source:"@site/docs/build/subnet/deploy/mainnet-subnet.md",sourceDirName:"build/subnet/deploy",slug:"/build/subnet/deploy/mainnet-subnet",permalink:"/docs/build/subnet/deploy/mainnet-subnet",draft:!1,unlisted:!1,editUrl:"https://github.com/luxfi/docs/edit/main/docs/build/subnet/deploy/mainnet-subnet.md",tags:[{label:"Build",permalink:"/docs/tags/build"},{label:"Subnets",permalink:"/docs/tags/subnets"}],version:"current",sidebarPosition:2,frontMatter:{tags:["Build","Subnets"],description:"This tutorial demonstrates how to deploy a permissioned Subnet on Lux Mainnet.",sidebar_label:"On Lux Mainnet",pagination_label:"Deploy a Permissioned Subnet on Mainnet",sidebar_position:2},sidebar:"build-subnet",previous:{title:"Deploy a Permissioned Subnet on Testnet",permalink:"/docs/build/subnet/deploy/testnet-subnet"},next:{title:"Deploy Subnets on Production Infrastructure",permalink:"/docs/build/subnet/deploy/on-prod-infra"}},d={},l=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Getting Your Mainnet NodeIDs",id:"getting-your-mainnet-nodeids",level:3},{value:"Setting up Your Ledger",id:"setting-up-your-ledger",level:3},{value:"Funding the Ledger",id:"funding-the-ledger",level:4},{value:"Deploy the Subnet",id:"deploy-the-subnet",level:2},{value:"Request to Join a Subnet as a Validator",id:"request-to-join-a-subnet-as-a-validator",level:2},{value:"Select Mainnet",id:"select-mainnet",level:3},{value:"Setup Node Automatically",id:"setup-node-automatically",level:3},{value:"Set Config File",id:"set-config-file",level:4},{value:"Set Plugin Directory",id:"set-plugin-directory",level:4},{value:"Restart the Node",id:"restart-the-node",level:4},{value:"Setup Node Manually",id:"setup-node-manually",level:3},{value:"Add a Validator",id:"add-a-validator",level:2},{value:"Submit addValidator TX to Mainnet",id:"submit-addvalidator-tx-to-mainnet",level:3},{value:"Set NodeID",id:"set-nodeid",level:3},{value:"Set Stake Weight",id:"set-stake-weight",level:3},{value:"Set Validation Start Time",id:"set-validation-start-time",level:3},{value:"Set Validation Duration",id:"set-validation-duration",level:3},{value:"Issue the TX",id:"issue-the-tx",level:3},{value:"Subnet Export",id:"subnet-export",level:2},{value:"Subnet Import",id:"subnet-import",level:2},{value:"Going Live",id:"going-live",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"deploy-a-permissioned-subnet-on-mainnet",children:"Deploy a Permissioned Subnet on Mainnet"}),"\n",(0,s.jsxs)(n.admonition,{type:"warning",children:[(0,s.jsx)(n.p,{children:"Deploying a Subnet to Mainnet has many risks. Doing so safely requires a laser focus on security.\nThis tutorial does its best to point out common pitfalls, but there may be other risks not discussed\nhere."}),(0,s.jsx)(n.p,{children:"This tutorial is an educational resource and provides no guarantees that following it results in a\nsecure deployment. Additionally, this tutorial takes some shortcuts that aid the understanding of\nthe deployment process at the expense of security. The text highlights these shortcuts and they\nshouldn't be used for a production deployment."})]}),"\n",(0,s.jsxs)(n.p,{children:["After managing a successful Subnet deployment on the ",(0,s.jsx)(n.code,{children:"Testnet"}),", you're ready to deploy your\nSubnet on Mainnet. If you haven't done so, first\n",(0,s.jsx)(n.a,{href:"/docs/build/subnet/deploy/testnet-subnet",children:"Deploy a Subnet on Testnet"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["This tutorial shows how to do the following on ",(0,s.jsx)(n.code,{children:"Mainnet"}),"."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Create a Subnet."}),"\n",(0,s.jsx)(n.li,{children:"Deploy a virtual machine based on Subnet-EVM."}),"\n",(0,s.jsx)(n.li,{children:"Join a node to the newly created Subnet."}),"\n",(0,s.jsx)(n.li,{children:"Add a node as a validator to the Subnet."}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"All IDs in this article are for illustration purposes only. They are guaranteed to be different in\nyour own run-through of this tutorial."})}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["5+ nodes running and ",(0,s.jsx)(n.a,{href:"/docs/nodes/",children:"fully bootstrapped"})," on ",(0,s.jsx)(n.code,{children:"Mainnet"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/tooling/cli-guides/install-cli",children:"Lux-CLI is installed"})," on each validator node's\nbox"]}),"\n",(0,s.jsxs)(n.li,{children:["A ",(0,s.jsx)(n.a,{href:"https://www.ledger.com/",children:"Ledger"})," device"]}),"\n",(0,s.jsxs)(n.li,{children:["You've ",(0,s.jsx)(n.a,{href:"/docs/build/subnet/hello-subnet#create-your-subnet-configuration",children:"created a Subnet configuration"}),"\nand fully tested a ",(0,s.jsx)(n.a,{href:"/docs/build/subnet/deploy/testnet-subnet",children:"Testnet Subnet deployment"})]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsx)(n.p,{children:"Although only one validator is strictly required to run a Subnet, running with less than five\nvalidators is extremely dangerous and guarantees network downtime. Plan to support at least five\nvalidators in your production network."})}),"\n",(0,s.jsx)(n.h3,{id:"getting-your-mainnet-nodeids",children:"Getting Your Mainnet NodeIDs"}),"\n",(0,s.jsx)(n.p,{children:"You need to collect the NodeIDs for each of your validators. This tutorial uses these NodeIDs in\nseveral commands."}),"\n",(0,s.jsxs)(n.p,{children:["To get the NodeID of a ",(0,s.jsx)(n.code,{children:"Mainnet"})," node, call the\n",(0,s.jsx)(n.a,{href:"/docs/reference/luxd/info-api#infogetnodeid",children:"info.getNodeID"})," endpoint. For example:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:'curl -X POST --data \'{\n    "jsonrpc":"2.0",\n    "id"     :1,\n    "method" :"info.getNodeID"\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/info\n'})}),"\n",(0,s.jsx)(n.p,{children:"The response should look something like:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "nodeID": "NodeID-5mb46qkSBj81k9g9e4VFjGGSbaaSLFRzD"\n  },\n  "id": 1\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["In the sample response, ",(0,s.jsx)(n.code,{children:"NodeID-5mb46qkSBj81k9g9e4VFjGGSbaaSLFRzD"})," is the NodeID. Note that the\n",(0,s.jsx)(n.code,{children:"NodeID-"})," prefix is part of the NodeID."]}),"\n",(0,s.jsx)(n.h3,{id:"setting-up-your-ledger",children:"Setting up Your Ledger"}),"\n",(0,s.jsxs)(n.p,{children:["In the interest of security, all Lux-CLI ",(0,s.jsx)(n.code,{children:"Mainnet"})," operations require the use of a connected\nLedger device. You must unlock your Ledger and run the Lux App. See ",(0,s.jsx)(n.a,{href:"https://support.lux.network/en/articles/6150237-how-to-use-a-ledger-nano-s-or-nano-x-with-lux",children:"How to Use\nLedger"}),"\nfor help getting set up."]}),"\n",(0,s.jsxs)(n.p,{children:["Lux-CLI supports the Ledger ",(0,s.jsx)(n.code,{children:"Nano X"}),", ",(0,s.jsx)(n.code,{children:"Nano S"}),", and ",(0,s.jsx)(n.code,{children:"Nano S Plus"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Ledger devices support TX signing for any address inside a sequence automatically generated by the device."}),"\n",(0,s.jsx)(n.p,{children:"By default, Lux-CLI uses the first address of the derivation, and that address needs funds to\nissue the TXs to create the Subnet and add validators."}),"\n",(0,s.jsxs)(n.p,{children:["To get the first ",(0,s.jsx)(n.code,{children:"Mainnet"})," address of your Ledger device, first make sure it is connected,\nunblocked, and running the Lux app. Then execute the ",(0,s.jsx)(n.code,{children:"key list"})," command:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"lux key list --ledger 0 --mainnet\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"+--------+---------+-------------------------+-----------------------------------------------+---------+---------+\n|  KIND  |  NAME   |          CHAIN          |                    ADDRESS                    | BALANCE | NETWORK |\n+--------+---------+-------------------------+-----------------------------------------------+---------+---------+\n| ledger | index 0 | P-Chain (Bech32 format) | P-lux1ucykh6ls8thqpuwhg3vp8vvu6spg5e8tp8a25j |      11 | Mainnet |\n+--------+---------+-------------------------+-----------------------------------------------+---------+---------+\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The command prints the P-Chain address for ",(0,s.jsx)(n.code,{children:"Mainnet"}),",\n",(0,s.jsx)(n.code,{children:"P-lux1ucykh6ls8thqpuwhg3vp8vvu6spg5e8tp8a25j"}),", and its balance. You should fund this address with\nat least 2.5 LUX to cover TX fees. the TX fee for creating your Subnet costs 2 LUX. Adding\nvalidators costs 0.001 LUX each. For more details, see ",(0,s.jsx)(n.a,{href:"/reference/standards/guides/txn-fees",children:"Fees"})]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["You can use the ",(0,s.jsx)(n.code,{children:"key list"})," command to get any Ledger address in the derivation sequence by\nchanging the index parameter from ",(0,s.jsx)(n.code,{children:"0"})," to the one desired, or to a list of them (for example: ",(0,s.jsx)(n.code,{children:"2"}),", or\n",(0,s.jsx)(n.code,{children:"0,4,7"}),"). Also, you can ask for addresses on ",(0,s.jsx)(n.code,{children:"Testnet"})," with the ",(0,s.jsx)(n.code,{children:"--testnet"})," parameter, and local networks\nwith the ",(0,s.jsx)(n.code,{children:"--local"})," parameter."]})}),"\n",(0,s.jsx)(n.h4,{id:"funding-the-ledger",children:"Funding the Ledger"}),"\n",(0,s.jsxs)(n.p,{children:["A new Ledger device has no funds on the addresses it controls. You'll need to send funds to it by\nexporting them from C-Chain to the P-Chain using ",(0,s.jsx)(n.a,{href:"https://core.app",children:"Core web"}),"\nconnected to ",(0,s.jsx)(n.a,{href:"https://join.core.app/extension",children:"Core extension"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["You can load the Ledger's C-Chain address in Core extension, or load in a different private key to\n",(0,s.jsx)(n.a,{href:"https://join.core.app/extension",children:"Core extension"}),", and then connect to Core web ."]}),"\n",(0,s.jsxs)(n.p,{children:["You can move test funds from the C-Chain to the P-Chain by clicking Stake on Core web , then Cross-Chain Transfer (find more details on\n",(0,s.jsx)(n.a,{href:"https://support.lux.network/en/articles/8133713-core-web-how-do-i-make-cross-chain-transfers-in-core-stake",children:"this tutorial"}),")."]}),"\n",(0,s.jsx)(n.h2,{id:"deploy-the-subnet",children:"Deploy the Subnet"}),"\n",(0,s.jsx)(n.p,{children:"With your Ledger unlocked and running the Lux app, run"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"lux subnet deploy testsubnet\n"})}),"\n",(0,s.jsx)(n.p,{children:"This is going to start a new prompt series."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"Use the arrow keys to navigate: \u2193 \u2191 \u2192 \u2190\n? Choose a network to deploy on:\n    Local Network\n    Testnet\n  \u25b8 Mainnet\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This tutorial is about deploying to ",(0,s.jsx)(n.code,{children:"Mainnet"}),", so navigate with the arrow keys to ",(0,s.jsx)(n.code,{children:"Mainnet"})," and hit enter."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"\u2714 Mainnet\nDeploying [testsubnet] to Mainnet\n"})}),"\n",(0,s.jsxs)(n.p,{children:["After that, CLI shows the ",(0,s.jsx)(n.code,{children:"Mainnet"})," Ledger address used to fund the deployment:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"Ledger address: P-lux1ucykh6ls8thqpuwhg3vp8vvu6spg5e8tp8a25j\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The deployment requires running a ",(0,s.jsx)(n.a,{href:"/docs/reference/luxd/p-chain/api#platformcreatesubnet",children:"createSubnet transaction"}),"\nand a ",(0,s.jsx)(n.a,{href:"/docs/reference/luxd/p-chain/api#platformcreateblockchain",children:"createBlockchain transaction"}),",\nand so this first Ledger address must have the funds to issue both operations."]}),"\n",(0,s.jsxs)(n.p,{children:["This tutorial creates a permissioned Subnet. As such, you must specify which P-Chain addresses can\ncontrol the Subnet. These addresses are known as ",(0,s.jsx)(n.code,{children:"Control Keys"}),". The CLI can automatically set your\nLedger's address as the sole control key or the user may specify a custom list."]}),"\n",(0,s.jsxs)(n.admonition,{type:"warning",children:[(0,s.jsx)(n.p,{children:"In production Subnets, you should always use multiple control keys running in a multisig\nconfiguration. This tutorial uses a single control key for illustrative purposes only."}),(0,s.jsxs)(n.p,{children:["For instructions on controlling your Subnet with a multisig, see the ",(0,s.jsx)(n.a,{href:"/docs/build/subnet/deploy/multisig-auth",children:"Multisig Deployment Tutorial"}),"."]})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"Configure which addresses may make changes to the subnet.\nThese addresses are known as your control keys. You are going to also\nset how many control keys are required to make a subnet change (the threshold).\nUse the arrow keys to navigate: \u2193 \u2191 \u2192 \u2190\n? How would you like to set your control keys?:\n  \u25b8 Use ledger address\n    Custom list\n"})}),"\n",(0,s.jsxs)(n.p,{children:["For this tutorial, opt to use the first Ledger address, so enter at ",(0,s.jsx)(n.code,{children:"Use ledger address"}),". Only\nthis address is going to be able to add or remove validators, or create blockchains on the Subnet."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"Your Subnet's control keys: [P-lux1ucykh6ls8thqpuwhg3vp8vvu6spg5e8tp8a25j]\nYour subnet auth keys for chain creation: [P-lux1ucykh6ls8thqpuwhg3vp8vvu6spg5e8tp8a25j]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Next, the CLI generates a TX for creating the SubnetID and asks the user to sign it by using the Ledger."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"*** Please sign subnet creation hash on the ledger device ***\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This activates a ",(0,s.jsx)(n.code,{children:"Please review"})," window on the Ledger. Navigate to the Ledger's ",(0,s.jsx)(n.code,{children:"APPROVE"})," window by\nusing the Ledger's right button, and then authorize the request by pressing both left and right buttons."]}),"\n",(0,s.jsx)(n.p,{children:"If the Ledger doesn't have enough funds, the user may see an error message:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:'*** Please sign subnet creation hash on the ledger device ***\nError: insufficient funds: provided UTXOs need 1000000000 more units of asset "U8iRqJoiJm8xZHAacmvYyZVwqQx6uDNtQeP3CQ6fcgQk3JqnK"\n'})}),"\n",(0,s.jsx)(n.p,{children:"If successful, the CLI next asks you to sign a chain creation TX."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"Subnet has been created with ID: 2UUCLbdGqawRDND7kHjwq3zXXMPdiycG2bkyuRzYMnuTSDr6db. Now creating blockchain...\n*** Please sign blockchain creation hash on the ledger device ***\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This activates a ",(0,s.jsx)(n.code,{children:"Please review"})," window on the Ledger. Navigate to the Ledger's ",(0,s.jsx)(n.code,{children:"APPROVE"})," window by\nusing the Ledger's right button, and then authorize the request by pressing both left and right buttons."]}),"\n",(0,s.jsx)(n.p,{children:"After that, CLI creates the blockchain within the Subnet, and a summary window for the deployment\nappears:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"+--------------------+------------------------------------------------------------------------------------+\n| DEPLOYMENT RESULTS |                                                                                    |\n+--------------------+------------------------------------------------------------------------------------+\n| Chain Name         | testsubnet                                                                         |\n+--------------------+------------------------------------------------------------------------------------+\n| Subnet ID          | 2UUCLbdGqawRDND7kHjwq3zXXMPdiycG2bkyuRzYMnuTSDr6db                                 |\n+--------------------+------------------------------------------------------------------------------------+\n| VM ID              | rW1esjm6gy4BtGvxKMpHB2M28MJGFNsqHRY9AmnchdcgeB3ii                                  |\n+--------------------+------------------------------------------------------------------------------------+\n| Blockchain ID      | wNoEemzDEr54Zy3iNn66yjUxXmZS9LKsZYSUciL89274mHsjG                                  |\n+--------------------+------------------------------------------------------------------------------------+\n| RPC URL            | http://127.0.0.1:9650/ext/bc/wNoEemzDEr54Zy3iNn66yjUxXmZS9LKsZYSUciL89274mHsjG/rpc |\n+--------------------+------------------------------------------------------------------------------------+\n| P-Chain TXID       | wNoEemzDEr54Zy3iNn66yjUxXmZS9LKsZYSUciL89274mHsjG                                  |\n+--------------------+------------------------------------------------------------------------------------+\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Well done. You have just created your own Subnet running on ",(0,s.jsx)(n.code,{children:"Mainnet"}),". Now it's time to add your validators."]}),"\n",(0,s.jsx)(n.h2,{id:"request-to-join-a-subnet-as-a-validator",children:"Request to Join a Subnet as a Validator"}),"\n",(0,s.jsx)(n.p,{children:"The new Subnet created in the previous steps doesn't have any dedicated validators yet.\nTo request permission to validate a Subnet, the following steps are required:"}),"\n",(0,s.jsxs)(n.admonition,{type:"info",children:[(0,s.jsxs)(n.p,{children:["Adding a validator on a Subnet requires that the node is already a validator on the primary network,\nwhich means that your node has ",(0,s.jsx)(n.strong,{children:"fully bootstrapped"}),"."]}),(0,s.jsxs)(n.p,{children:["See ",(0,s.jsx)(n.a,{href:"/docs/nodes/validate/add-a-validator#add-a-validator-with-wallet",children:"here"})," on how to become\na validator."]})]}),"\n",(0,s.jsxs)(n.p,{children:["First, request permission to validate by running the ",(0,s.jsx)(n.code,{children:"join"})," command along with the Subnet name:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"lux subnet join testsubnet\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Note: Running ",(0,s.jsx)(n.code,{children:"join"})," does not guarantee that your node is a validator of the Subnet! The owner of\nthe Subnet must approve your node to be a validator afterwards by calling ",(0,s.jsx)(n.code,{children:"addValidator"})," as\ndescribed in the next section."]}),"\n",(0,s.jsx)(n.h3,{id:"select-mainnet",children:"Select Mainnet"}),"\n",(0,s.jsxs)(n.p,{children:["When you ",(0,s.jsx)(n.code,{children:"join"})," command, you are first prompted with the network selection. Choose ",(0,s.jsx)(n.code,{children:"Mainnet"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"Use the arrow keys to navigate: \u2193 \u2191 \u2192 \u2190\n? Choose a network to validate on (this command only supports public networks):\n    Testnet\n  \u25b8 Mainnet\n"})}),"\n",(0,s.jsx)(n.h3,{id:"setup-node-automatically",children:"Setup Node Automatically"}),"\n",(0,s.jsx)(n.p,{children:'There are now two choices possible: automatic and Manual configuration. As mentioned earlier,\n"Automatic" attempts to edit your config file and sets up your plugin directory, while "Manual" just\nprints the required config to the screen. If you are running the CLI on the same box as your\nvalidator, you should run the commands in automated mode. If you don\'t want to run Lux-CLI\non the same box as your validator, use the manual commands.'}),"\n",(0,s.jsx)(n.p,{children:"Select automatic."}),"\n",(0,s.jsx)(n.h4,{id:"set-config-file",children:"Set Config File"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"\u2714 Automatic\n\u2714 Path to your existing config file (or where it's going to be generated): config.json\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Provide a path to a config file. If this command runs on the box where your validator is running,\nthen you could point this to the actually used config file, for example\n",(0,s.jsx)(n.code,{children:"/etc/luxd/config.json"})," - just make sure the tool has ",(0,s.jsx)(n.strong,{children:"write"})," access to the file. Or you could\njust copy the file later. In any case, the tool is going to either try to edit the existing file specified\nby the given path, or create a new file. Again, set write permissions."]}),"\n",(0,s.jsx)(n.h4,{id:"set-plugin-directory",children:"Set Plugin Directory"}),"\n",(0,s.jsx)(n.p,{children:"Next, provide the plugin directory. Each VM runs its own binary, called a plugin. Therefore, you\nneed to copy your VM's plugin binary into Luxd's plugin directory. This directory depends\non your Luxd install location."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"\u2714 Path to your luxd plugin dir (likely luxd/build/plugins): /home/user/go/src/github.com/luxfi/luxd/build/plugins\n"})}),"\n",(0,s.jsx)(n.p,{children:"The tool doesn't know where exactly it's located so it requires the full path. With the path given,\nit's going to copy the VM binary to the provided location:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"\u2714 Path to your luxd plugin dir (likely luxd/build/plugins): /home/user/go/src/github.com/luxfi/luxd/build/plugins\u2588\nVM binary written to /home/user/go/src/github.com/luxfi/luxd/build/plugins/tGBrMADESojmu5Et9CpbGCrmVf9fiAJtZM5ZJ3YVDj5JTu2qw\nThis is going to edit your existing config file. This edit is nondestructive,\nbut it's always good to have a backup.\nUse the arrow keys to navigate: \u2193 \u2191 \u2192 \u2190\n? Proceed?:\n  \u25b8 Yes\n    No\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Hitting ",(0,s.jsx)(n.code,{children:"Yes"})," writes the necessary file:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"\u2714 Yes\nThe config file has been edited. To use it, make sure to start the node with the '--config-file'\noption, e.g.\n\n./build/luxd --config-file config.json\n\n(using your binary location). The node has to be restarted for the changes to take effect.\n"})}),"\n",(0,s.jsx)(n.h4,{id:"restart-the-node",children:"Restart the Node"}),"\n",(0,s.jsxs)(n.p,{children:["It's ",(0,s.jsx)(n.strong,{children:"required to restart the node"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"setup-node-manually",children:"Setup Node Manually"}),"\n",(0,s.jsxs)(n.p,{children:['By choosing "Manual" instead, the tool prints ',(0,s.jsx)(n.em,{children:"instructions"}),". The user is going to have to follow\nthese instructions and apply them to the node. Note that the IDs for the VM and Subnet are different\nfor each Subnet deployment and you shouldn't copy them from this tutorial."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"\u2714 Manual\n\nTo setup your node, you must do two things:\n\n1. Add your VM binary to your node's plugin directory\n2. Update your node config to start validating the subnet\n\nTo add the VM to your plugin directory, copy or scp from /tmp/tGBrMADESojmu5Et9CpbGCrmVf9fiAJtZM5ZJ3YVDj5JTu2qw\n\nIf you installed luxd manually, your plugin directory is likely\nluxd/build/plugins.\n\nIf you start your node from the command line WITHOUT a config file (e.g. via command\nline or systemd script), add the following flag to your node's startup command:\n\n--track-subnets=2b175hLJhGdj3CzgXENso9CmwMgejaCQXhMFzBsm8hXbH2MF7H\n(if the node already has a track-subnets config, append the new value by\ncomma-separating it).\n\nFor example:\n./build/luxd --network-id=Mainnet --track-subnets=2b175hLJhGdj3CzgXENso9CmwMgejaCQXhMFzBsm8hXbH2MF7H\n\nIf you start the node via a JSON config file, add this to your config file:\ntrack-subnets: 2b175hLJhGdj3CzgXENso9CmwMgejaCQXhMFzBsm8hXbH2MF7H\n\nTIP: Try this command with the --luxd-config flag pointing to your config file,\nthis tool is going to try to update the file automatically (make sure it can write to it).\n\nAfter you update your config, you are going to need to restart your node for the changes to\ntake effect.\n"})}),"\n",(0,s.jsx)(n.h2,{id:"add-a-validator",children:"Add a Validator"}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsxs)(n.p,{children:["If the ",(0,s.jsx)(n.code,{children:"join"})," command isn't successfully completed before ",(0,s.jsx)(n.code,{children:"addValidator"})," is completed, the Subnet\ncould experience degraded performance or even halt."]})}),"\n",(0,s.jsxs)(n.p,{children:["Now that the node has joined the Subnet, a Subnet control key holder must call ",(0,s.jsx)(n.code,{children:"addValidator"})," to\ngrant the node permission to be a validator in your Subnet."]}),"\n",(0,s.jsx)(n.p,{children:"To whitelist a node as a recognized validator on the Subnet, run:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"lux subnet addValidator testsubnet\n"})}),"\n",(0,s.jsx)(n.p,{children:"You need to repeat this process for every validator you add to the network."}),"\n",(0,s.jsxs)(n.p,{children:["You can run the ",(0,s.jsx)(n.code,{children:"addValidator"})," transactions from the same box that deployed the Subnet."]}),"\n",(0,s.jsx)(n.h3,{id:"submit-addvalidator-tx-to-mainnet",children:"Submit addValidator TX to Mainnet"}),"\n",(0,s.jsxs)(n.p,{children:["First choose ",(0,s.jsx)(n.code,{children:"Mainnet"})," as the network to add the Subnet validator to."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"Use the arrow keys to navigate: \u2193 \u2191 \u2192 \u2190\n? Choose a network to add validator to.:\n    Testnet\n  \u25b8 Mainnet\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Because this operation issues a new\n",(0,s.jsx)(n.a,{href:"/docs/reference/luxd/p-chain/api#platformaddsubnetvalidator",children:"transaction"}),", the CLI needs the\ncontrol keys to sign the operation. Because this tutorial only uses one control key in the Subnet,\nthe process looks slightly different if you use multiple controls keys. The address needs to pay a\nTX fee of 0.001 LUX."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"Your subnet auth keys for add validator tx creation: [P-lux1ucykh6ls8thqpuwhg3vp8vvu6spg5e8tp8a25j]\n"})}),"\n",(0,s.jsx)(n.h3,{id:"set-nodeid",children:"Set NodeID"}),"\n",(0,s.jsxs)(n.p,{children:["Now enter the ",(0,s.jsx)(n.a,{href:"#getting-your-mainnet-nodeids",children:(0,s.jsx)(n.strong,{children:"NodeID"})})," of the validator."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"Next, we need the NodeID of the validator you want to whitelist.\n\nCheck https://docs.lux.network/apis/luxd/apis/info#infogetnodeid for instructions about how\nto query the NodeID from your node\n(Edit host IP address and port to match your deployment, if needed).\n\u2714 What is the NodeID of the validator you'd like to whitelist?: NodeID-7Xhw2mDxuDS44j42TCB6U5579esbSt3Lg\u2588\n"})}),"\n",(0,s.jsx)(n.p,{children:"Note, this ID is intentionally modified to prevent replication."}),"\n",(0,s.jsx)(n.h3,{id:"set-stake-weight",children:"Set Stake Weight"}),"\n",(0,s.jsxs)(n.p,{children:["Select 30 as the stake weight. You can learn more about the stake weight parameter in\n",(0,s.jsx)(n.a,{href:"/docs/reference/luxd/p-chain/api#platformaddsubnetvalidator",children:"addSubnetValidator"})," under the\n",(0,s.jsx)(n.code,{children:"weight"})," section."]}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsx)(n.p,{children:"The stake weight of all your validators should sum to at least 100."})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"Use the arrow keys to navigate: \u2193 \u2191 \u2192 \u2190\n? What stake weight would you like to assign to the validator?:\n    Default (20)\n  \u25b8 Custom\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"\u2714 What stake weight would you like to assign to the validator?: 30\n"})}),"\n",(0,s.jsx)(n.h3,{id:"set-validation-start-time",children:"Set Validation Start Time"}),"\n",(0,s.jsxs)(n.p,{children:["Next, specify when the validator is going to start validating. The time must be in the future. You\ncan use the custom option to enter a specific date in ",(0,s.jsx)(n.code,{children:"YYYY-MM-DD HH:MM:SS"})," format. Follow the\ndefault this time:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"Use the arrow keys to navigate: \u2193 \u2191 \u2192 \u2190\n? Start time:\n  \u25b8 Start in one minute\n    Custom\n"})}),"\n",(0,s.jsx)(n.h3,{id:"set-validation-duration",children:"Set Validation Duration"}),"\n",(0,s.jsx)(n.p,{children:"Finally, specify how long it's going to be validating:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"\u2714 Start in one minute\nUse the arrow keys to navigate: \u2193 \u2191 \u2192 \u2190\n? How long should your validator validate for?:\n  \u25b8 Until primary network validator expires\n    Custom\n"})}),"\n",(0,s.jsxs)(n.p,{children:["If you choose ",(0,s.jsx)(n.code,{children:"Custom"})," here, you need to enter a ",(0,s.jsx)(n.strong,{children:"duration"}),", which is a time span expressed in hours.\nFor example, say ",(0,s.jsx)(n.code,{children:"200 days = 24 \\* 200 = 4800h"})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"\u2714 How long should this validator be validating? Enter a duration, e.g. 8760h: 4800h\n"})}),"\n",(0,s.jsx)(n.p,{children:"The CLI shows the user an actual date:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"? Your validator is going to finish staking by 2023-06-10 13:07:58:\n  \u25b8 Yes\n    No\n"})}),"\n",(0,s.jsx)(n.p,{children:"Confirm if correct."}),"\n",(0,s.jsx)(n.h3,{id:"issue-the-tx",children:"Issue the TX"}),"\n",(0,s.jsx)(n.p,{children:"At this point the prompt series is complete and the CLI attempts the transaction:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"NodeID: NodeID-7Xhw2mDxuDS44j42TCB6U5579esbSt3Lg\nNetwork: Mainnet\nStart time: 2022-11-22 13:07:58\nEnd time: 2023-06-10 13:07:58\nWeight: 30\nInputs complete, issuing transaction to add the provided validator information...\n"})}),"\n",(0,s.jsx)(n.p,{children:"The CLI shows the Ledger address:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"Ledger address: P-lux1ucykh6ls8thqpuwhg3vp8vvu6spg5e8tp8a25j\n"})}),"\n",(0,s.jsx)(n.p,{children:"At this point, if the Ledger address isn't the control key for the Subnet, the user receives\nan error:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"Error: wallet doesn't contain subnet auth keys\nexit status 1\n"})}),"\n",(0,s.jsx)(n.p,{children:"If the Ledger doesn't have enough funds, the following error message appears:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:'*** Please sign subnet creation hash on the ledger device ***\nError: insufficient funds: provided UTXOs need 1000000 more units of asset "U8iRqJoiJm8xZHAacmvYyZVwqQx6uDNtQeP3CQ6fcgQk3JqnK"\n'})}),"\n",(0,s.jsx)(n.p,{children:"Otherwise, both the CLI and the Ledger request to sign the TX:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"*** Please sign add validator hash on the ledger device ***\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This activates a ",(0,s.jsx)(n.code,{children:"Please review"})," window on the Ledger. Navigate to the Ledger's ",(0,s.jsx)(n.code,{children:"APPROVE"})," window by\nusing the Ledger's right button, and then authorize the request by pressing both left and\nright buttons."]}),"\n",(0,s.jsx)(n.p,{children:"This might take a couple of seconds. After, it prints:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"Transaction successful, transaction ID: r3tJ4Wr2CWA8AaticmFrKdKgAs5AhW2wwWTaQHRBZKwJhsXzb\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This means the node is now a validator on the given Subnet on ",(0,s.jsx)(n.code,{children:"Mainnet"}),"! However, your work isn't\ncomplete. You ",(0,s.jsx)(n.strong,{children:"must"})," finish the ",(0,s.jsx)(n.a,{href:"#request-to-join-a-subnet-as-a-validator",children:"Request to Join a Subnet as a Validator"}),"\nsection otherwise your Subnet risks downtime."]}),"\n",(0,s.jsxs)(n.p,{children:["You can get the P-Chain TX id information on ",(0,s.jsx)(n.a,{href:"https://subnets.lux.network/",children:"Lux Explorer"})]}),"\n",(0,s.jsx)(n.h2,{id:"subnet-export",children:"Subnet Export"}),"\n",(0,s.jsx)(n.p,{children:"Because you need to setup multiple validators on multiple different machines, you need to export\nyour Subnet's configuration and import it on each validator."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"lux subnet export testsubnet\n\u2714 Enter file path to write export data to: /tmp/testsubnet-export.dat\n"})}),"\n",(0,s.jsx)(n.p,{children:"The file is in text format and you shouldn't change it. You can use it to import the configuration\non a different machine."}),"\n",(0,s.jsx)(n.h2,{id:"subnet-import",children:"Subnet Import"}),"\n",(0,s.jsxs)(n.p,{children:["To import a VM configuration, move the file you exported in the previous section to your desired\nmachine and issue the ",(0,s.jsx)(n.code,{children:"import"})," command with the path to the file."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"lux subnet import /tmp/testsubnet-export.dat\nSubnet imported successfully\n"})}),"\n",(0,s.jsx)(n.p,{children:"After this the whole Subnet configuration should be available on the target machine:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"lux subnet list\n+---------------+---------------+----------+-----------+----------+\n|    SUBNET     |     CHAIN     | CHAIN ID |   TYPE    | DEPLOYED |\n+---------------+---------------+----------+-----------+----------+\n| testsubnet    | testsubnet    |     3333 | SubnetEVM | No       |\n+---------------+---------------+----------+-----------+----------+\n"})}),"\n",(0,s.jsx)(n.h2,{id:"going-live",children:"Going Live"}),"\n",(0,s.jsx)(n.p,{children:"Once all of your validators have joined the network, you are ready to issue transactions to your Subnet."}),"\n",(0,s.jsx)(n.p,{children:"For the safety of your validators, you should setup dedicated API nodes to process transactions, but\nfor test purposes, you can issue transactions directly to one of your validator's RPC interface."})]})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},43540:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var s=t(48318);const o={},i=s.createContext(o);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);