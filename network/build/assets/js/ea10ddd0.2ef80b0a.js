"use strict";(self.webpackChunk_luxdocs_network=self.webpackChunk_luxdocs_network||[]).push([[6722],{4483:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var s=n(49214),o=n(43540);const i={tags:["Tooling","Lux-CLI"],description:"This guide demonstrates the process of importing a Subnet to the Lux-CLI to enable better management of the Subnet's configuration. This how-to uses the ZOO Subnet deployed on Testnet as the example Subnet.",pagination_label:"How to Import a Subnet into Lux-CLI",sidebar_label:"Import a Subnet",sidebar_position:2},r="How to Import a Subnet into Lux-CLI",a={id:"tooling/cli-guides/import-subnet",title:"How to Import a Subnet into Lux-CLI",description:"This guide demonstrates the process of importing a Subnet to the Lux-CLI to enable better management of the Subnet's configuration. This how-to uses the ZOO Subnet deployed on Testnet as the example Subnet.",source:"@site/docs/tooling/cli-guides/import-subnet.md",sourceDirName:"tooling/cli-guides",slug:"/tooling/cli-guides/import-subnet",permalink:"/docs/tooling/cli-guides/import-subnet",draft:!1,unlisted:!1,editUrl:"https://github.com/luxfi/docs/edit/main/docs/tooling/cli-guides/import-subnet.md",tags:[{label:"Tooling",permalink:"/docs/tags/tooling"},{label:"Lux-CLI",permalink:"/docs/tags/lux-cli"}],version:"current",sidebarPosition:2,frontMatter:{tags:["Tooling","Lux-CLI"],description:"This guide demonstrates the process of importing a Subnet to the Lux-CLI to enable better management of the Subnet's configuration. This how-to uses the ZOO Subnet deployed on Testnet as the example Subnet.",pagination_label:"How to Import a Subnet into Lux-CLI",sidebar_label:"Import a Subnet",sidebar_position:2},sidebar:"tooling",previous:{title:"How to Run Lux-CLI with Docker",permalink:"/docs/tooling/cli-guides/run-with-docker"},next:{title:"Run Lux Validators with One Lux-CLI Command",permalink:"/docs/tooling/cli-guides/create-a-validator-aws"}},h={},l=[{value:"Context",id:"context",level:2},{value:"Requirements",id:"requirements",level:2},{value:"Import the Subnet",id:"import-the-subnet",level:2},{value:"Nodes are Already Validating This Subnet",id:"nodes-are-already-validating-this-subnet",level:3},{value:"Nodes Aren&#39;t Yet Validating this Subnet, the Nodes API URL are Unknown, or Inaccessible (Firewalls)",id:"nodes-arent-yet-validating-this-subnet-the-nodes-api-url-are-unknown-or-inaccessible-firewalls",level:3}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"how-to-import-a-subnet-into-lux-cli",children:"How to Import a Subnet into Lux-CLI"}),"\n",(0,s.jsx)(t.h2,{id:"context",children:"Context"}),"\n",(0,s.jsx)(t.p,{children:"In previous instances, Subnets might have been manually created through transaction issuance to node\nAPIs, whether it was done using a local node or public API nodes. However, the current focus is on\nintegrating Lux-CLI."}),"\n",(0,s.jsx)(t.p,{children:"To achieve this integration, this guide demonstrates the process\nof importing a Subnet to the Lux-CLI to enable better management of the Subnet's configuration.\nThis how-to uses the ZOO Subnet deployed on Testnet as the example Subnet."}),"\n",(0,s.jsx)(t.h2,{id:"requirements",children:"Requirements"}),"\n",(0,s.jsx)(t.p,{children:"For the import to work properly, you need:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"The Subnet's genesis file, stored on disk"}),"\n"]}),"\n",(0,s.jsxs)(t.li,{children:["\n",(0,s.jsx)(t.p,{children:"The Subnet's SubnetID"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"import-the-subnet",children:"Import the Subnet"}),"\n",(0,s.jsxs)(t.p,{children:["For these use cases, Lux-CLI now supports the ",(0,s.jsx)(t.code,{children:"import public"})," command."]}),"\n",(0,s.jsx)(t.p,{children:"Start the import by issuing"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-shell",children:"lux subnet import public\n"})}),"\n",(0,s.jsx)(t.p,{children:"The tool prompts for the network from which to import.\nThe invariant assumption here is that the network is a public network,\neither the Testnet or Mainnet.\nIn other words, importing from a local network isn't supported."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-shell",children:"Use the arrow keys to navigate: \u2193 \u2191 \u2192 \u2190\n? Choose a network to import from:\n  \u25b8 Testnet\n    Mainnet\n"})}),"\n",(0,s.jsx)(t.p,{children:"As stated earlier, this is from Testnet, so select it.\nAs a next step, Lux-CLI asks for the path of the genesis file on disk:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-shell",children:"\u2717 Provide the path to the genesis file: /tmp/subnet_evm.genesis.json\n"})}),"\n",(0,s.jsx)(t.p,{children:"The wizard checks if the file at the provided path exists,\nrefer to the checkmark at the beginning of the line:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-shell",children:"\u2714 Provide the path to the genesis file: /tmp/subnetevm_genesis.json\n"})}),"\n",(0,s.jsx)(t.p,{children:"Subsequently, the wizard asks if nodes have already been deployed for this Subnet."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-shell",children:"Use the arrow keys to navigate: \u2193 \u2191 \u2192 \u2190\n? Have nodes already been deployed to this subnet?:\n    Yes\n  \u25b8 No\n"})}),"\n",(0,s.jsx)(t.h3,{id:"nodes-are-already-validating-this-subnet",children:"Nodes are Already Validating This Subnet"}),"\n",(0,s.jsx)(t.p,{children:"If nodes already have been deployed, the wizard attempts to query such a node\nfor detailed data like the VM version. This allows the tool to skip\nquerying GitHub (or wherever the VM's repository is hosted)\nfor the VM's version, but rather we'll get the exact version which is actually running on the node."}),"\n",(0,s.jsx)(t.p,{children:"For this to work, a node API URL is requested from the user, which is used for the query.\nThis requires that the node's API IP and port are accessible from the machine running\nLux-CLI, or the node is obviously not reachable,\nand thus the query times out and fails, and the tool exits.\nThe node should also be validating the given Subnet for the import to be meaningful,\notherwise, the import fails with missing information."}),"\n",(0,s.jsx)(t.p,{children:"If the query succeeded, the wizard jumps to prompt for the Subnet ID."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-shell",children:"Please provide an API URL of such a node so we can query its VM version (e.g. http://111.22.33.44:5555): http://154.42.240.119:9650\nWhat is the ID of the subnet?: 28nrH5T2BMvNrWecFcV3mfccjs6axM1TVyqe79MCv2Mhs8kxiY\n"})}),"\n",(0,s.jsx)(t.p,{children:"The rest of the wizard is identical to the next section,\nexcept that there is no prompt for the VM version anymore."}),"\n",(0,s.jsx)(t.h3,{id:"nodes-arent-yet-validating-this-subnet-the-nodes-api-url-are-unknown-or-inaccessible-firewalls",children:"Nodes Aren't Yet Validating this Subnet, the Nodes API URL are Unknown, or Inaccessible (Firewalls)"}),"\n",(0,s.jsxs)(t.p,{children:["If you don't have a node's API URL at hand, or it's not reachable\nfrom the machine running Lux-CLI, or maybe no nodes have even been deployed yet because\nonly the ",(0,s.jsx)(t.code,{children:"CreateSubnet"})," transaction has been issued, for example, you can query the public APIs."]}),"\n",(0,s.jsxs)(t.p,{children:["You can't know for sure what Subnet VM versions the validators are running though,\ntherefore the tool has to prompt later.\nSo, select ",(0,s.jsx)(t.code,{children:"No"})," when the tool asks for deployed nodes:"]}),"\n",(0,s.jsx)(t.p,{children:"Thus, at this point the wizard requests the Subnet's ID, without which it can't know\nwhat to import. Remember the ID is different on different networks."}),"\n",(0,s.jsxs)(t.p,{children:["From the ",(0,s.jsx)(t.a,{href:"https://subnets-test.lux.network/ZOO",children:"Testnet Subnet Explorer"}),"\nyou can see that ZOO's Subnet ID is ",(0,s.jsx)(t.code,{children:"28nrH5T2BMvNrWecFcV3mfccjs6axM1TVyqe79MCv2Mhs8kxiY"}),":"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-shell",children:"\u2714 What is the ID of the subnet?: 28nrH5T2BMvNrWecFcV3mfccjs6axM1TVyqe79MCv2Mhs8kxiY\n"})}),"\n",(0,s.jsx)(t.p,{children:"Notice the checkmark at line start, it signals that there is ID format validation."}),"\n",(0,s.jsxs)(t.p,{children:["If you hit ",(0,s.jsx)(t.code,{children:"enter"})," now, the tool queries the public APIs for the given network, and if successful,\nit prints some information about the Subnet, and proceeds to ask about the Subnet's type:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-shell",children:"Getting information from the Testnet network...\nRetrieved information. BlockchainID: 2ebCneCbwthjQ1rYT41nhd7M76Hc6YmosMAQrTFhBq8qeqh6tt, Name: ZOO, VMID: srEXiWaHuhNyGwPUi444Tu47ZEDwxTWrbQiuD7FmgSAQ6X7Dy\nUse the arrow keys to navigate: \u2193 \u2191 \u2192 \u2190\n? What's this VM's type?:\n  \u25b8 Subnet-EVM\n    Custom\n"})}),"\n",(0,s.jsx)(t.p,{children:"Lux-CLI needs to know the VM type, to hit its repository and select\nwhat VM versions are available.\nThis works automatically for Lux Partners VMs (like Subnet-EVM)."}),"\n",(0,s.jsx)(t.p,{children:"Custom VMs aren't supported yet at this point, but are next on the agenda."}),"\n",(0,s.jsx)(t.p,{children:"As the import is for ZOO, and you know that it's a Subnet-EVM type, select that."}),"\n",(0,s.jsx)(t.p,{children:"The tool then queries the (GitHub) repository for available releases,\nand prompts the user to pick the version she wants to use:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-shell",children:"\u2714 Subnet-EVM\nUse the arrow keys to navigate: \u2193 \u2191 \u2192 \u2190\n? Pick the version for this VM:\n  \u25b8 v0.4.5\n    v0.4.5-rc.1\n    v0.4.4\n    v0.4.4-rc.0\n\u2193   v0.4.3\n"})}),"\n",(0,s.jsx)(t.p,{children:"There is only so much the tool can help here, the Subnet manager/administrator\nshould know what they want to use Lux-CLI for, how,\nand why they're importing the Subnet."}),"\n",(0,s.jsx)(t.p,{children:"It's crucial to understand that the correct versions are only known to the user.\nThe latest might be usually fine, but the tool can't make assumptions about it easily.\nThis is why it's indispensable that the wizard prompts the user, and the tool requires her to choose."}),"\n",(0,s.jsx)(t.p,{children:"If you selected to query an actual Subnet validator, not the public APIs, in the preceding step.\nIn such a scenario, the tool skips this picking."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-shell",children:"\u2714 v0.4.5\nSubnet ZOO imported successfully\n"})}),"\n",(0,s.jsx)(t.p,{children:"The choice finalizes the wizard, which hopefully signals that the import succeeded.\nIf something went wrong, the error messages provide cause information.\nThis means you can now use Lux-CLI to handle the imported Subnet in the accustomed way.\nFor example, you could deploy the ZOO Subnet locally."}),"\n",(0,s.jsxs)(t.p,{children:["For a complete description of options, flags, and the command,\nvisit the ",(0,s.jsx)(t.a,{href:"/docs/tooling/cli#subnet-import",children:"command reference"}),"."]})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},43540:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var s=n(48318);const o={},i=s.createContext(o);function r(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);