"use strict";(self.webpackChunk_luxdocs_network=self.webpackChunk_luxdocs_network||[]).push([[2607],{99050:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var o=n(49214),s=n(43540);const i={tags:["Build","Dapps"],description:"ERC-20 tokens are the most fundamental and essential concept in Ethereum. This same token standard is adopted in the Lux ecosystem.",sidebar_label:"Create an ERC-20 Token",pagination_label:"Create an ERC-20 Token Using Solidity"},r="Create an ERC-20 Token Using Solidity",a={id:"build/dapp/smart-contracts/erc-20",title:"Create an ERC-20 Token Using Solidity",description:"ERC-20 tokens are the most fundamental and essential concept in Ethereum. This same token standard is adopted in the Lux ecosystem.",source:"@site/docs/build/dapp/smart-contracts/erc-20.md",sourceDirName:"build/dapp/smart-contracts",slug:"/build/dapp/smart-contracts/erc-20",permalink:"/docs/build/dapp/smart-contracts/erc-20",draft:!1,unlisted:!1,editUrl:"https://github.com/luxfi/docs/edit/main/docs/build/dapp/smart-contracts/erc-20.md",tags:[{label:"Build",permalink:"/docs/tags/build"},{label:"Dapps",permalink:"/docs/tags/dapps"}],version:"current",frontMatter:{tags:["Build","Dapps"],description:"ERC-20 tokens are the most fundamental and essential concept in Ethereum. This same token standard is adopted in the Lux ecosystem.",sidebar_label:"Create an ERC-20 Token",pagination_label:"Create an ERC-20 Token Using Solidity"},sidebar:"build-dapp",previous:{title:"Deploy a Smart Contract on Lux Using Remix and Core",permalink:"/docs/build/dapp/smart-contracts/remix-deploy"},next:{title:"Deploy an ERC-721 NFT Collection on Lux",permalink:"/docs/build/dapp/smart-contracts/nfts/deploy-collection"}},c={},d=[{value:"Set up Core",id:"set-up-core",level:2},{value:"Fund Your C-Chain Address",id:"fund-your-c-chain-address",level:2},{value:"Create Mintable Token",id:"create-mintable-token",level:2},{value:"Deploy the Contract",id:"deploy-the-contract",level:2},{value:"Interact with Token",id:"interact-with-token",level:2},{value:"Add Token to Core",id:"add-token-to-core",level:2}];function l(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"create-an-erc-20-token-using-solidity",children:"Create an ERC-20 Token Using Solidity"}),"\n",(0,o.jsxs)(t.p,{children:[(0,o.jsx)(t.a,{href:"https://ethereum.org/en/developers/docs/standards/tokens/erc-20/",children:"ERC-20\ntokens"})," are\nthe most fundamental and essential concept in Ethereum. As the Lux\ncommunity and the ecosystem are growing, new use cases and projects that are\nrunning on Ethereum or different chains would be implemented to Lux."]}),"\n",(0,o.jsx)(t.p,{children:"Therefore, we will be creating our own mintable ERC-20 token and will mint it to\nany address we want. The token will be generated on Lux C-Chain and will\nbe accessible on that chain. We are using Testnet in this tutorial."}),"\n",(0,o.jsx)(t.p,{children:"The article focuses on deploying a smart contract written with Solidity to\nLux. This is the feature that Lux provides us - to be able to deploy\nany smart contract to the chain and no requirement for a new language specific\ncontract concept to interact. Let\u2019s look at how to create an ERC-20 contract and\ndeploy it to lux C-Chain."}),"\n",(0,o.jsx)(t.h2,{id:"set-up-core",children:"Set up Core"}),"\n",(0,o.jsxs)(t.p,{children:["The first thing we should do is to enable Testnet mode on Core. To do that, go to ",(0,o.jsx)(t.strong,{children:"Settings"}),"\nand click on ",(0,o.jsx)(t.strong,{children:"Advanced"}),"."]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Settings image 1",src:n(98609).A+"",width:"400",height:"643"})}),"\n",(0,o.jsxs)(t.p,{children:["Here, turn on the ",(0,o.jsx)(t.strong,{children:"Testnet Mode"})," feature. This will automatically make Core switch to\nTestnet."]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Settings image 2",src:n(90298).A+"",width:"400",height:"643"})}),"\n",(0,o.jsxs)(t.admonition,{type:"info",children:[(0,o.jsx)(t.p,{children:"If you are using other wallets, like MetaMask, you can add the Testnet using the following specs:"}),(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Network Name"}),": Lux C-Chain"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"New RPC URL"}),": ",(0,o.jsx)(t.a,{href:"https://api.lux-test.network/ext/bc/C/rpc",children:"https://api.lux-test.network/ext/bc/C/rpc"})]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"ChainID"}),": ",(0,o.jsx)(t.code,{children:"43113"})]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Symbol"}),": LUX"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.strong,{children:"Explorer"}),": ",(0,o.jsx)(t.a,{href:"https://testnet.snowtrace.io/",children:(0,o.jsx)(t.code,{children:"https://testnet.snowtrace.io"})})]}),"\n"]})]}),"\n",(0,o.jsx)(t.p,{children:"The setup is done. For now, we have 0 LUX."}),"\n",(0,o.jsx)(t.h2,{id:"fund-your-c-chain-address",children:"Fund Your C-Chain Address"}),"\n",(0,o.jsxs)(t.p,{children:["For funding on the Testnet, you can use the Test Network Faucet. Navigate\nto ",(0,o.jsx)(t.a,{href:"https://faucet.lux.network/",children:"https://faucet.lux.network/"})," and paste your\nC-Chain address."]}),"\n",(0,o.jsx)(t.h2,{id:"create-mintable-token",children:"Create Mintable Token"}),"\n",(0,o.jsxs)(t.p,{children:["Now, we can create our mintable token on Remix. Open Remix on your browser or go\nto ",(0,o.jsx)(t.a,{href:"https://remix.ethereum.org/#optimize=false&evmVersion=null&version=soljson-v0.6.6+commit.6c089d02.js",children:"this\nlink"}),"."]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{src:"https://miro.medium.com/max/1910/1*FWHtbWNXr6FvjzPHH93wvw.png",alt:"Image for post"})}),"\n",(0,o.jsx)(t.p,{children:'You should view this page. On this page, first, click "SOLIDITY" from "Featured\nPlugins" and then click the "New File" button. When you click the New File\nbutton, you will see a pop-up that requires a file name. You can choose a name\nor leave the default.'}),"\n",(0,o.jsxs)(t.p,{children:["Since we will use an ERC-20 contract from\n",(0,o.jsx)(t.a,{href:"https://openzeppelin.com/contracts/",children:"OpenZeppelin"}),", just paste this line to the\nfile and save."]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-solidity",children:'import "https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol";\n'})}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{src:"https://miro.medium.com/max/1408/1*y1wpcCeB8PypnPfs-zhyBg.png",alt:"Image for post"})}),"\n",(0,o.jsx)(t.p,{children:"After saving the file, we will see a bunch of files that are imported to remix.\nThis is a remix feature that allows us to import a GitHub contract repository to\nremix by just giving the URL-link with an import statement."}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{src:"https://miro.medium.com/max/1364/1*6pmdpKWiKj4RW-OcvMSijA.png",alt:"Image for post"})}),"\n",(0,o.jsx)(t.p,{children:"We have ERC20PresetMinterPauser.sol file in the presets. This file is written by\nOpenZeppelin according to ERC20 standards with minter functionality. After\ndeploying this file, we will be the owner of the contract and thus have the\nauthority and ability to mint the tokens."}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{src:"https://miro.medium.com/max/1398/1*5UcrRfoSwjpD29NyuMrrbA.png",alt:"Image for post"})}),"\n",(0,o.jsx)(t.h2,{id:"deploy-the-contract",children:"Deploy the Contract"}),"\n",(0,o.jsxs)(t.p,{children:["Open the tab with label ",(0,o.jsx)(t.code,{children:"Solidity compiler"})," and select the solidity version that\nmatches with the solidity version written in file as ",(0,o.jsx)(t.code,{children:"pragma solidity \u2026.."}),". The\nversion should be equal to or higher than the file\u2019s version. For example, in my\nfile, ",(0,o.jsx)(t.code,{children:"pragma solidity ^0.6.0"})," is written so the required version is 0.6.0 or\nhigher. As shown, in the compiler the solidity version is 0.6.6, which is OK.\nAfter checking the solidity version click the compile button. If you did not\nchange anything in the file, or the solidity version is not wrong, the contract\nshould compile without any errors."]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{src:"https://miro.medium.com/max/1388/1*2jkDckFUJ4z3gMoLYZ_-PQ.png",alt:"Image for post"})}),"\n",(0,o.jsxs)(t.p,{children:["Then, let\u2019s jump to the tab with label ",(0,o.jsx)(t.code,{children:"Deploy & run transactions"}),'. Here before\ndeploying our contract, we should change the environment. Click to the\nenvironment and select "Injected Web3." If a pop-up shows up and asks you to\nconnect the account, click to connect. After, you should see the account address\nin the "ACCOUNT" text box.']}),"\n",(0,o.jsxs)(t.p,{children:["The last thing before the deployment process is to set the contract that will be\ndeployed as a token. Above the Deploy Button, there is a drop-down menu to\nselect a contract. Select the contract named ",(0,o.jsx)(t.code,{children:"ERC20PresetMinterPauser.sol"}),"."]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{src:"https://miro.medium.com/max/383/1*s9LtZu4hSuPcVwVZsweZJA.png",alt:"Image for post"})}),"\n",(0,o.jsxs)(t.p,{children:['Now, here enter the name and symbol of your token. I will name it "test" and the\nsymbol will be ',(0,o.jsx)(t.code,{children:"tst"}),". You can give it a and click to transact button."]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{src:"https://miro.medium.com/max/593/1*ZKDEv_h_Pqfd3b7PAosXQw.png",alt:"Image for post"})}),"\n",(0,o.jsx)(t.p,{children:"After clicking the button, a pop-up will show up and just confirm it."}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Core confirmation",src:n(31009).A+"",width:"201",height:"318"})}),"\n",(0,o.jsx)(t.p,{children:"And then another pop-up, a Core confirmation, appears. Confirm it."}),"\n",(0,o.jsx)(t.p,{children:"After confirming all these pop-ups we have deployed our token to lux\nC-Chain. So we can start to interact with it."}),"\n",(0,o.jsx)(t.h2,{id:"interact-with-token",children:"Interact with Token"}),"\n",(0,o.jsxs)(t.p,{children:["We can see our transaction that deployed on lux C-Chain via this ",(0,o.jsx)(t.a,{href:"https://testnet.snowtrace.io/",children:"c-chain explorer"}),"."]}),"\n",(0,o.jsx)(t.p,{children:"But firstly, let\u2019s see our transaction hash from the remix console."}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{src:"https://miro.medium.com/max/1469/1*WTHSIfrDe9R_hk-C5GNq0g.png",alt:"Image for post"})}),"\n",(0,o.jsx)(t.p,{children:"After deploying the contract, we should see a log in remix console. When you\nclick to arrow and expand it, a transaction hash will come up. Copy it."}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{src:"https://miro.medium.com/max/1909/1*NBXgtkYv2VfBkZx1OsBm7A.png",alt:"Image for post"})}),"\n",(0,o.jsxs)(t.p,{children:["Just paste the transaction hash to the ",(0,o.jsx)(t.a,{href:"https://testnet.snowtrace.io/",children:"explorer"}),"\nI shared above and press enter."]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{src:"https://miro.medium.com/max/1907/1*6GhQaa_UaDvtk3Kvimi3aA.png",alt:"Image for post"})}),"\n",(0,o.jsx)(t.p,{children:"Here we can see all details about the transaction and token contract."}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{src:"https://miro.medium.com/max/764/1*tTFQUn3fStbv-TW9kExyUg.png",alt:"Image for post"})}),"\n",(0,o.jsxs)(t.p,{children:["The first one is my wallet address that creates token and the second address is\nmy token contract address which is named ",(0,o.jsx)(t.code,{children:"test"}),". Now, let\u2019s mint some token to\nour own address."]}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{src:"https://miro.medium.com/max/607/1*K9eBNTQFkvUYjjmvegDZtQ.png",alt:"Image for post"})}),"\n",(0,o.jsx)(t.p,{children:'Come back to the remix and after deploying, you should be able to see the\ncontract in "Deployed Contracts" section.'}),"\n",(0,o.jsx)(t.p,{children:"Here, we have a bunch of functions that we can use to interact with our token\ncontract. You can check all these methods from OpenZeppelin documentation to\nlearn how to use them. But we will only use the mint method."}),"\n",(0,o.jsx)(t.p,{children:"Click to arrow beside the mint method to read it."}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{src:"https://miro.medium.com/max/577/1*GrxG6rsklrYN4xN1eF_ckw.png",alt:"Image for post"})}),"\n",(0,o.jsxs)(t.p,{children:["Enter your address and an amount in wei. For example, I will mint 1000 ",(0,o.jsx)(t.code,{children:"tst"}),' token so, I entered "1000000000000000000000"']}),"\n",(0,o.jsx)(t.h2,{id:"add-token-to-core",children:"Add Token to Core"}),"\n",(0,o.jsx)(t.p,{children:"Now we minted 1000 token to our contract, but you should not be able to see the\ntokens in your Core wallet. In order to see our own token, we have to add\nit. On Core, click on the Lux C-Chain, and then select Manage:"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Add token 1",src:n(66767).A+"",width:"201",height:"322"})}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Add token 2",src:n(45300).A+"",width:"201",height:"323"})}),"\n",(0,o.jsx)(t.p,{children:"Click on Add custom token. Here,enter the token address that you can see from the\nexplorer, as showed above. Copy and paste it here. Then click on the Add token button,\nyou should see 1000 token that you named in your Core wallet. Also,\nyou can send it to another account via either remix or Core."}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.img,{alt:"Add token 3",src:n(66429).A+"",width:"201",height:"317"})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},66767:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/add-token1-6faaf681696175fd2474775ec5dacb4e.png"},45300:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/add-token2-a987195ad578e52e1ba623350b7e454b.png"},66429:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/add-token3-9de5902c3930b90d82bde3e387f7edeb.png"},98609:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/settings1-1efd4de385c68f643573a4278ce64419.png"},90298:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/settings2-d548df1aa281a0ca41a472acc76ef8d2.png"},31009:(e,t,n)=>{n.d(t,{A:()=>o});const o=n.p+"assets/images/transaction-approval-466c33c4d8916c2df85e2c823381fa5b.png"},43540:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var o=n(48318);const s={},i=o.createContext(s);function r(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);