"use strict";(self.webpackChunk_luxdocs_network=self.webpackChunk_luxdocs_network||[]).push([[749],{62666:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var s=t(49214),o=t(43540);const i={tags:["Build","Subnets"],description:"This tutorial demonstrates the process of creating a Subnet with a custom virtual machine and deploying it locally.",sidebar_label:"With a Custom Virtual Machine",pagination_label:"Deploy a Subnet with Multisig Authorization",sidebar_position:5},a="Create a Subnet with a Custom Virtual Machine",c={id:"build/subnet/deploy/custom-vm-subnet",title:"Create a Subnet with a Custom Virtual Machine",description:"This tutorial demonstrates the process of creating a Subnet with a custom virtual machine and deploying it locally.",source:"@site/docs/build/subnet/deploy/custom-vm-subnet.md",sourceDirName:"build/subnet/deploy",slug:"/build/subnet/deploy/custom-vm-subnet",permalink:"/docs/build/subnet/deploy/custom-vm-subnet",draft:!1,unlisted:!1,editUrl:"https://github.com/luxfi/docs/edit/main/docs/build/subnet/deploy/custom-vm-subnet.md",tags:[{label:"Build",permalink:"/docs/tags/build"},{label:"Subnets",permalink:"/docs/tags/subnets"}],version:"current",sidebarPosition:5,frontMatter:{tags:["Build","Subnets"],description:"This tutorial demonstrates the process of creating a Subnet with a custom virtual machine and deploying it locally.",sidebar_label:"With a Custom Virtual Machine",pagination_label:"Deploy a Subnet with Multisig Authorization",sidebar_position:5},sidebar:"build-subnet",previous:{title:"Deploy a Subnet with Multisig Authorization",permalink:"/docs/build/subnet/deploy/multisig-auth"},next:{title:"Transform a Permissioned Subnet into an Elastic Subnet",permalink:"/docs/build/subnet/elastic/transform-to-elastic-subnet"}},r={},l=[{value:"Fork Subnet-EVM",id:"fork-subnet-evm",level:2},{value:"Clone Subnet-EVM",id:"clone-subnet-evm",level:3},{value:"Modify and Build Subnet-EVM",id:"modify-and-build-subnet-evm",level:3},{value:"Create a Custom Genesis",id:"create-a-custom-genesis",level:3},{value:"Create the Subnet Configuration",id:"create-the-subnet-configuration",level:2},{value:"Choose Your VM",id:"choose-your-vm",level:3},{value:"Enter the Path to Your Genesis",id:"enter-the-path-to-your-genesis",level:3},{value:"Enter the Path to Your VM Binary",id:"enter-the-path-to-your-vm-binary",level:3},{value:"Wrapping Up",id:"wrapping-up",level:3},{value:"Deploy the Subnet Locally",id:"deploy-the-subnet-locally",level:2},{value:"Interact with Your Subnet",id:"interact-with-your-subnet",level:2},{value:"Check the Version",id:"check-the-version",level:3},{value:"Check a Balance",id:"check-a-balance",level:3},{value:"Next Steps",id:"next-steps",level:2}];function u(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"create-a-subnet-with-a-custom-virtual-machine",children:"Create a Subnet with a Custom Virtual Machine"}),"\n",(0,s.jsx)(n.p,{children:"This tutorial walks through the process of creating a Subnet with a custom virtual machine and\ndeploying it locally.\nAlthough the tutorial uses a fork of Subnet-EVM as an example, you can extend its lessons to support\nany custom VM binary."}),"\n",(0,s.jsx)(n.h2,{id:"fork-subnet-evm",children:"Fork Subnet-EVM"}),"\n",(0,s.jsx)(n.p,{children:"Instead of building a custom VM from scratch, this tutorial starts with forking Subnet-EVM."}),"\n",(0,s.jsx)(n.h3,{id:"clone-subnet-evm",children:"Clone Subnet-EVM"}),"\n",(0,s.jsx)(n.p,{children:"First off, clone the Subnet-EVM repository into a directory of your choosing."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"git clone https://github.com/luxfi/subnet-evm.git\n"})}),"\n",(0,s.jsxs)(n.admonition,{type:"info",children:[(0,s.jsx)(n.p,{children:"The repository cloning method used is HTTPS, but SSH can be used too:"}),(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"git clone git@github.com:luxfi/subnet-evm.git"})}),(0,s.jsxs)(n.p,{children:["You can find more about SSH and how to use it\n",(0,s.jsx)(n.a,{href:"https://docs.github.com/en/authentication/connecting-to-github-with-ssh/about-ssh",children:"here"}),"."]})]}),"\n",(0,s.jsx)(n.h3,{id:"modify-and-build-subnet-evm",children:"Modify and Build Subnet-EVM"}),"\n",(0,s.jsx)(n.p,{children:"To prove you're running your custom binary and not the stock Subnet-EVM included with\nLux-CLI, you need to modify the Subnet-EVM binary by making a minor change."}),"\n",(0,s.jsx)(n.p,{children:"Navigate to the directory you cloned Subnet-EVM into and generate a new commit:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'git commit -a --allow-empty -m "custom vm commit"\n'})}),"\n",(0,s.jsx)(n.p,{children:"Take note of the new commit hash:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"git rev-parse HEAD\nc0fe6506a40da466285f37dd0d3c044f494cce32\n"})}),"\n",(0,s.jsxs)(n.p,{children:["In this case, ",(0,s.jsx)(n.code,{children:"c0fe6506a40da466285f37dd0d3c044f494cce32"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Now build your custom binary by running"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"./scripts/build.sh custom_vm.bin\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This command builds the binary and saves it at ",(0,s.jsx)(n.code,{children:"./custom_vm.bin"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"create-a-custom-genesis",children:"Create a Custom Genesis"}),"\n",(0,s.jsx)(n.p,{children:"To start a VM, you need to provide a genesis file. Here is a basic Subnet-EVM genesis that's\ncompatible with your custom VM."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n    "config": {\n        "byzantiumBlock": 0,\n        "chainId": 12345,\n        "constantinopleBlock": 0,\n        "eip150Block": 0,\n        "eip150Hash": "0x2086799aeebeae135c246c65021c82b4e15a2c451340993aacfd2751886514f0",\n        "eip155Block": 0,\n        "eip158Block": 0,\n        "feeConfig": {\n            "gasLimit": 15000000,\n            "targetBlockRate": 2,\n            "minBaseFee": 25000000000,\n            "targetGas": 15000000,\n            "baseFeeChangeDenominator": 36,\n            "minBlockGasCost": 0,\n            "maxBlockGasCost": 1000000,\n            "blockGasCostStep": 200000\n        },\n        "homesteadBlock": 0,\n        "istanbulBlock": 0,\n        "muirGlacierBlock": 0,\n        "petersburgBlock": 0,\n        "subnetEVMTimestamp": 0\n    },\n    "nonce": "0x0",\n    "timestamp": "0x0",\n    "extraData": "0x",\n    "gasLimit": "0xe4e1c0",\n    "difficulty": "0x0",\n    "mixHash": "0x0000000000000000000000000000000000000000000000000000000000000000",\n    "coinbase": "0x0000000000000000000000000000000000000000",\n    "alloc": {\n        "8db97c7cece249c2b98bdc0226cc4c2a57bf52fc": {\n            "balance": "0xd3c21bcecceda1000000"\n        }\n    },\n    "airdropHash": "0x0000000000000000000000000000000000000000000000000000000000000000",\n    "airdropAmount": null,\n    "number": "0x0",\n    "gasUsed": "0x0",\n    "parentHash": "0x0000000000000000000000000000000000000000000000000000000000000000",\n    "baseFeePerGas": null\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Open a text editor and copy the preceding text into a file called ",(0,s.jsx)(n.code,{children:"custom_genesis.json"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"create-the-subnet-configuration",children:"Create the Subnet Configuration"}),"\n",(0,s.jsxs)(n.p,{children:["Now that you have your binary, it's time to create the Subnet configuration. This tutorial uses\n",(0,s.jsx)(n.code,{children:"myCustomSubnet"})," as it Subnet name. Invoke the Subnet Creation Wizard with this command:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"lux subnet create myCustomSubnet\n"})}),"\n",(0,s.jsx)(n.h3,{id:"choose-your-vm",children:"Choose Your VM"}),"\n",(0,s.jsxs)(n.p,{children:["Select ",(0,s.jsx)(n.code,{children:"Custom"})," for your VM."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"Use the arrow keys to navigate: \u2193 \u2191 \u2192 \u2190\n? Choose your VM:\n    Subnet-EVM\n  \u25b8 Custom\n"})}),"\n",(0,s.jsx)(n.h3,{id:"enter-the-path-to-your-genesis",children:"Enter the Path to Your Genesis"}),"\n",(0,s.jsxs)(n.p,{children:["Enter the path to the genesis file you created in this ",(0,s.jsx)(n.a,{href:"#create-a-custom-genesis",children:"step"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"\u2714 Enter path to custom genesis: ./custom_genesis.json\n"})}),"\n",(0,s.jsx)(n.h3,{id:"enter-the-path-to-your-vm-binary",children:"Enter the Path to Your VM Binary"}),"\n",(0,s.jsxs)(n.p,{children:["Next, enter the path to your VM binary. This should be the path to the ",(0,s.jsx)(n.code,{children:"custom_evm.bin"})," you\ncreated ",(0,s.jsx)(n.a,{href:"#modify-and-build-subnet-evm",children:"previously"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"\u2714 Enter path to vm binary: ./custom_vm.bin\n"})}),"\n",(0,s.jsx)(n.h3,{id:"wrapping-up",children:"Wrapping Up"}),"\n",(0,s.jsxs)(n.p,{children:["If all worked successfully, the command prints ",(0,s.jsx)(n.code,{children:"Successfully created Subnet configuration"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Now it's time to deploy it."}),"\n",(0,s.jsx)(n.h2,{id:"deploy-the-subnet-locally",children:"Deploy the Subnet Locally"}),"\n",(0,s.jsx)(n.p,{children:"To deploy your Subnet, run"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"lux subnet deploy myCustomSubnet"})}),"\n",(0,s.jsxs)(n.p,{children:["Make sure to substitute the name of your Subnet if you used a different one than ",(0,s.jsx)(n.code,{children:"myCustomSubnet"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["Next, select ",(0,s.jsx)(n.code,{children:"Local Network"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"Use the arrow keys to navigate: \u2193 \u2191 \u2192 \u2190\n? Choose a network to deploy on:\n  \u25b8 Local Network\n    Testnet\n    Mainnet\n"})}),"\n",(0,s.jsx)(n.p,{children:"This command boots a five node Lux network on your machine. It needs to download the latest\nversions of Luxd and Subnet-EVM. The command may take a couple minutes to run."}),"\n",(0,s.jsx)(n.p,{children:"If all works as expected, the command output should look something like this:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-text",children:"> lux subnet deploy myCustomSubnet\n\u2714 Local Network\nDeploying [myCustomSubnet] to Local Network\nBackend controller started, pid: 26110, output at: /home/fm/.cli/runs/server_20230816_131014/cli-backend.log\nInstalling luxd-v1.10.8...\nluxd-v1.10.8 installation successful\nNode log path: /home/fm/.cli/runs/network_20230816_131608/node<i>/logs\nStarting network...\nVMs ready.\n\nBlockchain has been deployed. Wait until network acknowledges...\n\nNetwork ready to use. Local network node endpoints:\n+-------+----------------+------------------------------------------------------------------------------------+-------------------------------------------------+\n| NODE  |       VM       |                                        URL                                         |                    ALIAS URL                    |\n+-------+----------------+------------------------------------------------------------------------------------+-------------------------------------------------+\n| node1 | myCustomSubnet | http://127.0.0.1:9650/ext/bc/z9a7L6XmFYskbaHuuLFCxThByKg4xqsYYbaqT5ke6xVutDQTp/rpc | http://127.0.0.1:9650/ext/bc/myCustomSubnet/rpc |\n+-------+----------------+------------------------------------------------------------------------------------+-------------------------------------------------+\n| node2 | myCustomSubnet | http://127.0.0.1:9652/ext/bc/z9a7L6XmFYskbaHuuLFCxThByKg4xqsYYbaqT5ke6xVutDQTp/rpc | http://127.0.0.1:9652/ext/bc/myCustomSubnet/rpc |\n+-------+----------------+------------------------------------------------------------------------------------+-------------------------------------------------+\n| node3 | myCustomSubnet | http://127.0.0.1:9654/ext/bc/z9a7L6XmFYskbaHuuLFCxThByKg4xqsYYbaqT5ke6xVutDQTp/rpc | http://127.0.0.1:9654/ext/bc/myCustomSubnet/rpc |\n+-------+----------------+------------------------------------------------------------------------------------+-------------------------------------------------+\n| node4 | myCustomSubnet | http://127.0.0.1:9656/ext/bc/z9a7L6XmFYskbaHuuLFCxThByKg4xqsYYbaqT5ke6xVutDQTp/rpc | http://127.0.0.1:9656/ext/bc/myCustomSubnet/rpc |\n+-------+----------------+------------------------------------------------------------------------------------+-------------------------------------------------+\n| node5 | myCustomSubnet | http://127.0.0.1:9658/ext/bc/z9a7L6XmFYskbaHuuLFCxThByKg4xqsYYbaqT5ke6xVutDQTp/rpc | http://127.0.0.1:9658/ext/bc/myCustomSubnet/rpc |\n+-------+----------------+------------------------------------------------------------------------------------+-------------------------------------------------+\n\nBrowser Extension connection details (any node URL from above works):\nRPC URL:          http://127.0.0.1:9650/ext/bc/z9a7L6XmFYskbaHuuLFCxThByKg4xqsYYbaqT5ke6xVutDQTp/rpc\n"})}),"\n",(0,s.jsxs)(n.p,{children:["You can use the ",(0,s.jsx)(n.code,{children:"RPC URL"})," to connect to and interact with your Subnet."]}),"\n",(0,s.jsx)(n.h2,{id:"interact-with-your-subnet",children:"Interact with Your Subnet"}),"\n",(0,s.jsx)(n.h3,{id:"check-the-version",children:"Check the Version"}),"\n",(0,s.jsxs)(n.p,{children:["You can verify that your Subnet has deployed correctly by querying the local node to see what\nSubnets it's running. You need to use the\n",(0,s.jsx)(n.a,{href:"/docs/reference/luxd/info-api#infogetnodeversion",children:(0,s.jsx)(n.code,{children:"getNodeVersion"})})," endpoint. Try running this\ncurl command:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'curl --location --request POST \'http://127.0.0.1:9650/ext/info\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{\n    "jsonrpc":"2.0",\n    "id"     :1,\n    "method" :"info.getNodeVersion",\n    "params" :{\n    }\n}\'\n'})}),"\n",(0,s.jsx)(n.p,{children:"The command returns a list of all the VMs your local node is currently running along with their versions."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "version": "lux/1.10.8",\n    "databaseVersion": "v1.4.5",\n    "rpcProtocolVersion": "27",\n    "gitCommit": "e70a17d9d988b5067f3ef5c4a057f15ae1271ac4",\n    "vmVersions": {\n      "avm": "v1.10.8",\n      "evm": "v0.12.5",\n      "platform": "v1.10.8",\n      "qDMnZ895HKpRXA2wEvujJew8nNFEkvcrH5frCR9T1Suk1sREe": "v0.5.4@c0fe6506a40da466285f37dd0d3c044f494cce32"\n    }\n  },\n  "id": 1\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Your results may be slightly different, but you can see that in addition to the X-Chain's\n",(0,s.jsx)(n.code,{children:"avm"}),", the C-Chain's ",(0,s.jsx)(n.code,{children:"evm"}),", and the P-Chain's ",(0,s.jsx)(n.code,{children:"platform"})," VM, the node is running the custom VM with\ncommit ",(0,s.jsx)(n.code,{children:"c0fe6506a40da466285f37dd0d3c044f494cce32"}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"check-a-balance",children:"Check a Balance"}),"\n",(0,s.jsxs)(n.p,{children:["If you used the default genesis, your custom VM has a prefunded address. You can verify its balance\nwith a curl command. Make sure to substitute the command's URL with the ",(0,s.jsx)(n.code,{children:"RPC URL"})," from your\ndeployment output."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'curl --location --request POST \'http://127.0.0.1:9650/ext/bc/myCustomSubnet/rpc\' \\\n--header \'Content-Type: application/json\' \\\n--data-raw \'{\n    "jsonrpc": "2.0",\n    "method": "eth_getBalance",\n    "params": [\n        "0x8db97c7cece249c2b98bdc0226cc4c2a57bf52fc",\n        "latest"\n    ],\n    "id": 1\n}\'\n'})}),"\n",(0,s.jsx)(n.p,{children:"The command should return"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n    "jsonrpc": "2.0",\n    "id": 1,\n    "result": "0xd3c21bcecceda1000000"\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"The balance is hex encoded, so this means the address has a balance of 1 million tokens."}),"\n",(0,s.jsxs)(n.p,{children:["Note, this command doesn't work on all custom VMs, only VMs that implement the EVM's\n",(0,s.jsx)(n.code,{children:"eth_getBalance"})," interface."]}),"\n",(0,s.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,s.jsx)(n.p,{children:"You've now unlocked the ability to deploy custom VMs. Go build something cool!"})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},43540:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>c});var s=t(48318);const o={},i=s.createContext(o);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);