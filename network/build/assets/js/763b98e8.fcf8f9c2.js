"use strict";(self.webpackChunk_luxdocs_network=self.webpackChunk_luxdocs_network||[]).push([[8703],{68485:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>l});var s=t(49214),o=t(43540);const i={tags:["Build","Subnets"],description:"You can customize Subnet-EVM based Subnets after deployment by enabling and disabling precompiles.",sidebar_label:"Subnet Precompile Config",pagination_label:"Upgrade Your Subnet-EVM Precompile Configuration",sidebar_position:3},a="How to Upgrade Your Subnet-EVM Precompile Configuration",r={id:"build/subnet/upgrade/upgrade-precompile",title:"How to Upgrade Your Subnet-EVM Precompile Configuration",description:"You can customize Subnet-EVM based Subnets after deployment by enabling and disabling precompiles.",source:"@site/docs/build/subnet/upgrade/upgrade-precompile.md",sourceDirName:"build/subnet/upgrade",slug:"/build/subnet/upgrade/upgrade-precompile",permalink:"/docs/build/subnet/upgrade/upgrade-precompile",draft:!1,unlisted:!1,editUrl:"https://github.com/luxfi/docs/edit/main/docs/build/subnet/upgrade/upgrade-precompile.md",tags:[{label:"Build",permalink:"/docs/tags/build"},{label:"Subnets",permalink:"/docs/tags/subnets"}],version:"current",sidebarPosition:3,frontMatter:{tags:["Build","Subnets"],description:"You can customize Subnet-EVM based Subnets after deployment by enabling and disabling precompiles.",sidebar_label:"Subnet Precompile Config",pagination_label:"Upgrade Your Subnet-EVM Precompile Configuration",sidebar_position:3},sidebar:"build-subnet",previous:{title:"Upgrade a Subnet's Virtual Machine",permalink:"/docs/build/subnet/upgrade/upgrade-subnet-vm"},next:{title:"ZOO Subnet",permalink:"/docs/build/subnet/info/wagmi"}},d={},l=[{value:"Upgrading a Subnet",id:"upgrading-a-subnet",level:2},{value:"Generate the Upgrade File",id:"generate-the-upgrade-file",level:2},{value:"How To Upgrade a Local Network",id:"how-to-upgrade-a-local-network",level:2},{value:"Apply the Upgrade to a Public Node (Testnet or Mainnet)",id:"apply-the-upgrade-to-a-public-node-testnet-or-mainnet",level:2},{value:"Export the Upgrade File",id:"export-the-upgrade-file",level:2},{value:"Import the Upgrade File",id:"import-the-upgrade-file",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"how-to-upgrade-your-subnet-evm-precompile-configuration",children:"How to Upgrade Your Subnet-EVM Precompile Configuration"}),"\n",(0,s.jsx)(n.h2,{id:"upgrading-a-subnet",children:"Upgrading a Subnet"}),"\n",(0,s.jsxs)(n.p,{children:["You can customize Subnet-EVM based Subnets after deployment by enabling and disabling precompiles.\nTo do this, create a ",(0,s.jsx)(n.code,{children:"upgrade.json"})," file and place it in the appropriate directory."]}),"\n",(0,s.jsx)(n.p,{children:"This document describes how to perform such network upgrades. It's specific for Subnet-EVM upgrades."}),"\n",(0,s.jsxs)(n.p,{children:["The document ",(0,s.jsx)(n.a,{href:"/docs/build/subnet/upgrade/considerations-subnet-upgrade",children:"Upgrade a Subnet"}),"\ndescribes all the background information required regarding Subnet upgrades."]}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsx)(n.p,{children:"It's very important that you have read and understood the previously linked document.\nFailing to do so can potentially grind your network to a halt."})}),"\n",(0,s.jsxs)(n.p,{children:["This tutorial assumes that you have already\n",(0,s.jsx)(n.a,{href:"/docs/tooling/cli-guides/install-cli",children:"installed"})," Lux-CLI.\nIt assumes you have already created and deployed a Subnet called ",(0,s.jsx)(n.code,{children:"testSubnet"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"generate-the-upgrade-file",children:"Generate the Upgrade File"}),"\n",(0,s.jsxs)(n.p,{children:["The\n",(0,s.jsx)(n.a,{href:"/docs/build/subnet/upgrade/customize-a-subnet#network-upgrades-enabledisable-precompiles",children:"Precompiles"}),"\ndocumentation describes what files the network upgrade requires, and where to place them."]}),"\n",(0,s.jsxs)(n.p,{children:["To generate a valid ",(0,s.jsx)(n.code,{children:"upgrade.json"})," file, run:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"lux subnet upgrade generate testSubnet\n"})}),"\n",(0,s.jsxs)(n.p,{children:["If you didn't create ",(0,s.jsx)(n.code,{children:"testSubnet"})," yet, you would see this result:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'lux subnet upgrade generate testSubnet\nThe provided subnet name "testSubnet" does not exist\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Again, it makes no sense to try the upgrade command if the Subnet doesn't exist.\nIf that's the case, please go ahead and\n",(0,s.jsx)(n.a,{href:"/docs/build/subnet/hello-subnet",children:"create"})," the Subnet first."]}),"\n",(0,s.jsx)(n.p,{children:"If the Subnet definition exists, the tool launches a wizard.\nIt may feel a bit redundant, but you first see some warnings, to draw focus to the dangers involved:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"lux subnet upgrade generate testSubnet\nPerforming a network upgrade requires coordinating the upgrade network-wide.\nA network upgrade changes the rule set used to process and verify blocks, such that any node that\nupgrades incorrectly or fails to upgrade by the time that upgrade goes into effect may become\nout of sync with the rest of the network.\n\nAny mistakes in configuring network upgrades or coordinating them on validators may cause the\nnetwork to halt and recovering may be difficult.\nPlease consult\nhttps://docs.lux.network/subnets/customize-a-subnet#network-upgrades-enabledisable-precompiles\nfor more information\nUse the arrow keys to navigate: \u2193 \u2191 \u2192 \u2190\n? Press [Enter] to continue, or abort by choosing 'no':\n  \u25b8 Yes\n    No\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Go ahead and select ",(0,s.jsx)(n.code,{children:"Yes"})," if you understand everything and you agree."]}),"\n",(0,s.jsx)(n.p,{children:"You see a last note, before the actual configuration wizard starts:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"Luxgo and this tool support configuring multiple precompiles.\nHowever, we suggest to only configure one per upgrade.\n\nUse the arrow keys to navigate: \u2193 \u2191 \u2192 \u2190\n? Select the precompile to configure:\n  \u25b8 Contract Deployment Allow List\n    Manage Fee Settings\n    Native Minting\n    Transaction Allow List\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Refer to ",(0,s.jsx)(n.a,{href:"/docs/build/subnet/upgrade/customize-a-subnet#precompiles",children:"Precompiles"}),"\nfor a description of available precompiles and how to configure them."]}),"\n",(0,s.jsx)(n.p,{children:"Make sure you understand precompiles thoroughly and how to configure them before\nattempting to continue."}),"\n",(0,s.jsxs)(n.p,{children:["For every precompile in the list, the wizard guides you to provide correct information\nby prompting relevant questions.\nFor the sake of this tutorial, select ",(0,s.jsx)(n.code,{children:"Transaction Allow List"}),".\nThe document\n",(0,s.jsx)(n.a,{href:"/docs/build/subnet/upgrade/customize-a-subnet#restricting-who-can-submit-transactions",children:"Restricting Who Can Submit Transactions"}),"\ndescribes what this precompile is about."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'\u2714 Transaction Allow List\nSet parameters for the "Manage Fee Settings" precompile\nUse the arrow keys to navigate: \u2193 \u2191 \u2192 \u2190\n? When should the precompile be activated?:\n  \u25b8 In 5 minutes\n    In 1 day\n    In 1 week\n    In 2 weeks\n    Custom\n'})}),"\n",(0,s.jsxs)(n.p,{children:["This is actually common to all precompiles: they require an\nactivation timestamp.\nIf you think about it, it makes sense: you want a synchronized activation of your precompile.\nSo think for a moment about when you want to set the activation timestamp to.\nYou can select one of the suggested times in the future, or you can pick a custom one.\nAfter picking ",(0,s.jsx)(n.code,{children:"Custom"}),", it shows the following prompt:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"\u2714 Custom\n\u2717 Enter the block activation UTC datetime in 'YYYY-MM-DD HH:MM:SS' format:\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The format is ",(0,s.jsx)(n.code,{children:"YYYY-MM-DD HH:MM:SS"}),", therefore ",(0,s.jsx)(n.code,{children:"2023-03-31 14:00:00"})," would be a valid timestamp.\nNotice that the timestamp is in UTC.\nPlease make sure you have converted the time from your timezone to UTC.\nAlso notice the ",(0,s.jsx)(n.code,{children:"\u2717"})," at the beginning of the line. The CLI tool does input validation, so if you\nprovide a valid timestamp, the ",(0,s.jsx)(n.code,{children:"x"})," disappears:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"\u2714 Enter the block activation UTC datetime in 'YYYY-MM-DD HH:MM:SS' format: 2023-03-31 14:00:00\n"})}),"\n",(0,s.jsxs)(n.p,{children:["The timestamp must be in the ",(0,s.jsx)(n.strong,{children:"future"}),", so make sure you use such a\ntimestamp should you be running this tutorial after ",(0,s.jsx)(n.code,{children:"2023-03-31 14:00:00"})," ;-) ."]}),"\n",(0,s.jsx)(n.p,{children:"After you provided the valid timestamp, proceed with the precompile specific configurations:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"The chosen block activation time is 2023-03-31 14:00:00\nUse the arrow keys to navigate: \u2193 \u2191 \u2192 \u2190\n? Add 'adminAddresses'?:\n  \u25b8 Yes\n    No\n"})}),"\n",(0,s.jsx)(n.p,{children:"This will enable the addresses added in this section to add other admins and/or\nadd enabled addresses for transaction issuance.\nThe addresses provided in this tutorial are fake."}),"\n",(0,s.jsx)(n.admonition,{type:"caution",children:(0,s.jsx)(n.p,{children:"However, make sure you or someone you trust have full control over the addresses.\nOtherwise, you might bring your Subnet to a halt."})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"\u2714 Yes\nUse the arrow keys to navigate: \u2193 \u2191 \u2192 \u2190\n? Provide 'adminAddresses':\n  \u25b8 Add\n    Delete\n    Preview\n    More Info\n\u2193   Done\n"})}),"\n",(0,s.jsx)(n.p,{children:"The prompting runs with a pattern used throughout the tool:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Select an operation:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Add"}),": adds a new address to the current list"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Delete"}),": removes an address from the current list"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"Preview"}),": prints the current list"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"More info"})," prints additional information for better guidance, if available"]}),"\n",(0,s.jsxs)(n.li,{children:["Select ",(0,s.jsx)(n.code,{children:"Done"})," when you completed the list"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Go ahead and add your first address:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"\u2714 Add\n\u2714 Add an address: 0xaaaabbbbccccddddeeeeffff1111222233334444\n"})}),"\n",(0,s.jsx)(n.p,{children:"Add another one:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"\u2714 Add\nAdd an address: 0xaaaabbbbccccddddeeeeffff1111222233334444\n\u2714 Add\n\u2714 Add an address: 0x1111222233334444aaaabbbbccccddddeeeeffff\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Select ",(0,s.jsx)(n.code,{children:"Preview"})," this time to confirm the list is correct:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"\u2714 Preview\n0. 0xaaaAbbBBCccCDDddEeEEFFfF1111222233334444\n1. 0x1111222233334444aAaAbbBBCCCCDdDDeEeEffff\nUse the arrow keys to navigate: \u2193 \u2191 \u2192 \u2190\n? Provide 'adminAddresses':\n  \u25b8 Add\n    Delete\n    Preview\n    More Info\n\u2193   Done\n"})}),"\n",(0,s.jsxs)(n.p,{children:["If it looks good, select ",(0,s.jsx)(n.code,{children:"Done"})," to continue:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"\u2714 Done\nUse the arrow keys to navigate: \u2193 \u2191 \u2192 \u2190\n? Add 'enabledAddresses'?:\n  \u25b8 Yes\n    No\n"})}),"\n",(0,s.jsx)(n.p,{children:"Add one such enabled address, these are addresses which can issue transactions:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"\u2714 Add\n\u2714 Add an address: 0x55554444333322221111eeeeaaaabbbbccccdddd\u2588\n"})}),"\n",(0,s.jsxs)(n.p,{children:["After you added this address, and selected ",(0,s.jsx)(n.code,{children:"Done"}),", the tool asks if you want to\nadd another precompile:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"\u2714 Done\nUse the arrow keys to navigate: \u2193 \u2191 \u2192 \u2190\n? Should we configure another precompile?:\n  \u25b8 No\n    Yes\n"})}),"\n",(0,s.jsxs)(n.p,{children:["If you needed to add another one, you would select ",(0,s.jsx)(n.code,{children:"Yes"})," here. The wizard would guide you\nthrough the other available precompiles, excluding already configured ones."]}),"\n",(0,s.jsxs)(n.p,{children:["To avoid making this tutorial too long, the assumption is you're done here.\nSelect ",(0,s.jsx)(n.code,{children:"No"}),", which ends the wizard."]}),"\n",(0,s.jsx)(n.p,{children:"This means you have successfully terminated the generation of the upgrade file,\noften called upgrade bytes. The tool stores them internally."}),"\n",(0,s.jsx)(n.admonition,{type:"warning",children:(0,s.jsxs)(n.p,{children:["You shouldn't move files around manually.\nUse the ",(0,s.jsx)(n.code,{children:"export"})," and ",(0,s.jsx)(n.code,{children:"import"})," commands to get access to the files."]})}),"\n",(0,s.jsx)(n.p,{children:"So at this point you can either:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Deploy your upgrade bytes locally"}),"\n",(0,s.jsx)(n.li,{children:"Export your upgrade bytes to a file, for installation on a validator running on another machine"}),"\n",(0,s.jsx)(n.li,{children:"Import a file into a different machine running Lux-CLI"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"how-to-upgrade-a-local-network",children:"How To Upgrade a Local Network"}),"\n",(0,s.jsx)(n.p,{children:"The normal use case for this operation is that:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"You already created a Subnet"}),"\n",(0,s.jsx)(n.li,{children:"You already deployed the Subnet locally"}),"\n",(0,s.jsx)(n.li,{children:"You already generated the upgrade file with the preceding command or imported into the tool"}),"\n",(0,s.jsx)(n.li,{children:"This tool already started the network"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"If the preceding requirements aren't met, the network upgrade command fails."}),"\n",(0,s.jsx)(n.p,{children:"Therefore, to apply your generated or imported upgrade configuration:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"lux subnet upgrade apply testSubnet\n"})}),"\n",(0,s.jsx)(n.p,{children:"A number of checks run. For example, if you created the Subnet but didn't deploy it locally:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'lux subnet upgrade apply testSubnet\nError: no deployment target available\nUsage:\n  lux subnet upgrade apply [subnetName] [flags]\n\nFlags:\n      --luxd-chain-config-dir string   luxd\'s chain config file directory (default "/home/fabio/.luxd/chains")\n      --config                                create upgrade config for future subnet deployments (same as generate)\n      --testnet testnet                             apply upgrade existing testnet deployment (alias for `testnet`)\n  -h, --help                                  help for apply\n      --local local                           apply upgrade existing local deployment\n      --mainnet mainnet                       apply upgrade existing mainnet deployment\n      --print                                 if true, print the manual config without prompting (for public networks only)\n      --testnet testnet                       apply upgrade existing testnet deployment (alias for `testnet`)\n\nGlobal Flags:\n      --log-level string   log level for the application (default "ERROR")\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Go ahead and ",(0,s.jsx)(n.a,{href:"/docs/build/subnet/deploy/local-subnet",children:"deploy"}),"\nfirst your Subnet if that's your case."]}),"\n",(0,s.jsx)(n.p,{children:"If you already had deployed the Subnet instead, you see something like this:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"lux subnet upgrade apply testSubnet\nUse the arrow keys to navigate: \u2193 \u2191 \u2192 \u2190\n? What deployment would you like to upgrade:\n  \u25b8 Existing local deployment\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Select ",(0,s.jsx)(n.code,{children:"Existing local deployment"}),". This installs the upgrade file on all nodes of your local\nnetwork running in the background."]}),"\n",(0,s.jsx)(n.p,{children:"Et voil\xe0. This is the output shown if all went well:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"\u2714 Existing local deployment\n.......\nNetwork restarted and ready to use. Upgrade bytes have been applied to running nodes at these endpoints.\nThe next upgrade will go into effect 2023-03-31 09:00:00\n+-------+------------+-----------------------------------------------------------------------------------+\n| NODE  |     VM     |                                        URL                                        |\n+-------+------------+-----------------------------------------------------------------------------------+\n| node1 | testSubnet | http://0.0.0.0:9650/ext/bc/2YTRV2roEhgvwJz7D7vr33hUZscpaZgcYgUTjeMK9KH99NFnsH/rpc |\n+-------+------------+-----------------------------------------------------------------------------------+\n| node2 | testSubnet | http://0.0.0.0:9652/ext/bc/2YTRV2roEhgvwJz7D7vr33hUZscpaZgcYgUTjeMK9KH99NFnsH/rpc |\n+-------+------------+-----------------------------------------------------------------------------------+\n| node3 | testSubnet | http://0.0.0.0:9654/ext/bc/2YTRV2roEhgvwJz7D7vr33hUZscpaZgcYgUTjeMK9KH99NFnsH/rpc |\n+-------+------------+-----------------------------------------------------------------------------------+\n| node4 | testSubnet | http://0.0.0.0:9656/ext/bc/2YTRV2roEhgvwJz7D7vr33hUZscpaZgcYgUTjeMK9KH99NFnsH/rpc |\n+-------+------------+-----------------------------------------------------------------------------------+\n| node5 | testSubnet | http://0.0.0.0:9658/ext/bc/2YTRV2roEhgvwJz7D7vr33hUZscpaZgcYgUTjeMK9KH99NFnsH/rpc |\n+-------+------------+-----------------------------------------------------------------------------------+\n"})}),"\n",(0,s.jsxs)(n.p,{children:["There is only so much the tool can do here for you.\nIt installed the upgrade bytes ",(0,s.jsx)(n.em,{children:"as-is"})," as you configured respectively provided them to the tool.\nYou should verify yourself that the upgrades were actually installed correctly,\nfor example issuing some transactions - mind the timestamp!."]}),"\n",(0,s.jsx)(n.h2,{id:"apply-the-upgrade-to-a-public-node-testnet-or-mainnet",children:"Apply the Upgrade to a Public Node (Testnet or Mainnet)"}),"\n",(0,s.jsx)(n.p,{children:"For this scenario to work, you should also have deployed the Subnet\nto the public network (Testnet or Mainnet) with this tool.\nOtherwise, the tool won't know the details of the Subnet, and won't be able to guide you."}),"\n",(0,s.jsxs)(n.p,{children:["Assuming the Subnet has been already deployed to Testnet, when running the ",(0,s.jsx)(n.code,{children:"apply"})," command,\nthe tool notices the deployment:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"lux subnet upgrade apply testSubnet\nUse the arrow keys to navigate: \u2193 \u2191 \u2192 \u2190\n? What deployment would you like to upgrade:\n    Existing local deployment\n  \u25b8 Testnet\n"})}),"\n",(0,s.jsxs)(n.p,{children:["If not, you would not find the ",(0,s.jsx)(n.code,{children:"Testnet"})," entry here."]}),"\n",(0,s.jsx)(n.admonition,{type:"important",children:(0,s.jsxs)(n.p,{children:["This scenario assumes that you are running the ",(0,s.jsx)(n.code,{children:"testnet"})," validator on the same machine\nwhich is running Lux-CLI."]})}),"\n",(0,s.jsxs)(n.p,{children:["If this is the case, the tool tries to install the upgrade file at the expected destination.\nIf you use default paths, it tries to install at ",(0,s.jsx)(n.code,{children:"$HOME/.luxd/chains/"}),", creating the\nchain id directory,\nso that the file finally ends up at ",(0,s.jsx)(n.code,{children:"$HOME/.luxd/chains/<chain-id>/upgrade.json"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["If you are ",(0,s.jsx)(n.em,{children:"not"})," using default paths, you can configure the path by providing the\nflag ",(0,s.jsx)(n.code,{children:"--luxd-chain-config-dir"})," to the tool.\nFor example:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"lux subnet upgrade apply testSubnet --luxd-chain-config-dir /path/to/your/chains\n"})}),"\n",(0,s.jsx)(n.p,{children:"Make sure to identify correctly where your chain config dir is, or the node might fail to find it."}),"\n",(0,s.jsx)(n.p,{children:"If all is correct, the file gets installed:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"lux subnet upgrade apply testSubnet\n\u2714 Testnet\nThe chain config dir luxd uses is set at /home/fabio/.luxd/chains\nTrying to install the upgrade files at the provided /home/fabio/.luxd/chains path\nSuccessfully installed upgrade file\n"})}),"\n",(0,s.jsxs)(n.p,{children:["If however the node is ",(0,s.jsx)(n.em,{children:"not"})," running on this same machine where you are executing Lux-CLI,\nthere is no point in running this command for a Testnet node.\nIn this case, you might rather export the file and install it at the right location."]}),"\n",(0,s.jsxs)(n.p,{children:["To see the instructions about how to go about this, add the ",(0,s.jsx)(n.code,{children:"--print"})," flag:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'lux subnet upgrade apply testSubnet --print\n\u2714 Testnet\nTo install the upgrade file on your validator:\n\n1. Identify where your validator has the luxd chain config dir configured.\n   The default is at $HOME/.luxd/chains (/home/user/.luxd/chains on this machine).\n   If you are using a different chain config dir for your node, use that one.\n2. Create a directory with the blockchainID in the configured chain-config-dir (e.g. $HOME/.luxd/chains/ExDKhjXqiVg7s35p8YJ56CJpcw6nJgcGCCE7DbQ4oBknZ1qXi) if doesn\'t already exist.\n3. Create an `upgrade.json` file in the blockchain directory with the content of your upgrade file.\n   This is the content of your upgrade file as configured in this tool:\n{\n    "precompileUpgrades": [\n        {\n            "txAllowListConfig": {\n                "adminAddresses": [\n                    "0xb3d82b1367d362de99ab59a658165aff520cbd4d"\n                ],\n                "enabledAddresses": null,\n                "blockTimestamp": 1677550447\n            }\n        }\n    ]\n}\n\n   ******************************************************************************************************************\n   * Upgrades are tricky. The syntactic correctness of the upgrade file is important.                               *\n   * The sequence of upgrades must be strictly observed.                                                            *\n   * Make sure you understand https://docs.lux.network/nodes/configure/chain-config-flags.md#subnet-chain-configs  *\n   * before applying upgrades manually.                                                                             *\n   ******************************************************************************************************************\n'})}),"\n",(0,s.jsx)(n.p,{children:"The instructions also show the content of your current upgrade file, so you can just\nselect that if you wish.\nOr actually export the file."}),"\n",(0,s.jsx)(n.h2,{id:"export-the-upgrade-file",children:"Export the Upgrade File"}),"\n",(0,s.jsx)(n.p,{children:"If you have generated the upgrade file, you can export it:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"lux subnet upgrade export testSubnet\n\u2714 Provide a path where we should export the file to: /tmp/testSubnet-upgrade.json\n"})}),"\n",(0,s.jsx)(n.p,{children:"Just provide a valid path to the prompt, and the tool exports the file there."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:'lux subnet upgrade export testSubnet\nProvide a path where we should export the file to: /tmp/testSubnet-upgrade.json\nWriting the upgrade bytes file to "/tmp/testSubnet-upgrade.json"...\nFile written successfully.\n'})}),"\n",(0,s.jsx)(n.p,{children:"You can now take that file and copy it to validator nodes, see preceding instructions."}),"\n",(0,s.jsx)(n.h2,{id:"import-the-upgrade-file",children:"Import the Upgrade File"}),"\n",(0,s.jsx)(n.p,{children:"You or someone else might have generated the file elsewhere, or on another machine.\nAnd now you want to install it on the validator machine, using Lux-CLI."}),"\n",(0,s.jsx)(n.p,{children:"You can import the file:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"lux subnet upgrade import testSubnet\nProvide the path to the upgrade file to import: /tmp/testSubnet-upgrade.json\n"})}),"\n",(0,s.jsx)(n.p,{children:"An existing file with the same path and filename would be overwritten."}),"\n",(0,s.jsxs)(n.p,{children:["After you have imported the file, you can ",(0,s.jsx)(n.code,{children:"apply"})," it either to a local network or to\na locally running validator. Follow the instructions for the appropriate use case."]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},43540:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var s=t(48318);const o={},i=s.createContext(o);function a(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);