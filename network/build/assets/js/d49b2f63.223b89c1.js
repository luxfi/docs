"use strict";(self.webpackChunk_luxdocs_network=self.webpackChunk_luxdocs_network||[]).push([[1095],{23019:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var i=t(49214),s=t(43540);const r={tags:["Virtual Machines","Subnet-EVM"],description:"Virtual Machine is a virtual environment inside blockchain networks that executes smart contracts and transactions according to predetermined rules and protocols.",keywords:["docs","lux","virtual machines","subnets","Subnet EVM"],sidebar_label:"Virtual Machines"},a="Virtual Machines",o={id:"learn/lux/virtual-machines",title:"Virtual Machines",description:"Virtual Machine is a virtual environment inside blockchain networks that executes smart contracts and transactions according to predetermined rules and protocols.",source:"@site/docs/learn/lux/virtual-machines.md",sourceDirName:"learn/lux",slug:"/learn/lux/virtual-machines",permalink:"/docs/learn/lux/virtual-machines",draft:!1,unlisted:!1,editUrl:"https://github.com/luxfi/docs/edit/main/docs/learn/lux/virtual-machines.md",tags:[{label:"Virtual Machines",permalink:"/docs/tags/virtual-machines"},{label:"Subnet-EVM",permalink:"/docs/tags/subnet-evm"}],version:"current",frontMatter:{tags:["Virtual Machines","Subnet-EVM"],description:"Virtual Machine is a virtual environment inside blockchain networks that executes smart contracts and transactions according to predetermined rules and protocols.",keywords:["docs","lux","virtual machines","subnets","Subnet EVM"],sidebar_label:"Virtual Machines"},sidebar:"learn",previous:{title:"Subnets",permalink:"/docs/learn/lux/subnets-overview"},next:{title:"Lux Warp Messaging",permalink:"/docs/learn/lux/awm"}},l={},c=[{value:"Why Run a VM on Lux?",id:"why-run-a-vm-on-lux",level:2},{value:"How VMs Work",id:"how-vms-work",level:2},{value:"Running a VM",id:"running-a-vm",level:2},{value:"Solidity",id:"solidity",level:3},{value:"Golang",id:"golang",level:3},{value:"Rust",id:"rust",level:3}];function h(e){const n={a:"a",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"virtual-machines",children:"Virtual Machines"}),"\n",(0,i.jsxs)(n.p,{children:["In a nutshell, a ",(0,i.jsx)(n.strong,{children:"Virtual Machine"})," (VM) is the blueprint for a blockchain, meaning it defines\nthe application-level logic of a blockchain. In technical terms, it specifies the blockchain\u2019s state,\nstate transition function, transactions, and the API through which users can interact with the\nblockchain."]}),"\n",(0,i.jsx)(n.p,{children:"You can use the same VM to create many blockchains, each of which follows the same rule-set but is\nindependent of all others."}),"\n",(0,i.jsx)(n.h2,{id:"why-run-a-vm-on-lux",children:"Why Run a VM on Lux?"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Developers with advanced use-cases for utilizing distributed ledger technology are often forced to build\ntheir own blockchain from scratch, re-implement complex abstractions like networking and consensus,\nall before even being able to start working on their new application."})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"With Lux,"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Developers can create a VM that defines how their blockchain\nshould behave, and use this blueprint to coordinate validators in the network to run\nthe application."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"VMs can be written in any language, and use libraries and tech stacks that its creator\nis familiar with. Developers have fine control over the behavior of their blockchain, and can redefine\nthe rules of a blockchain to fit any use-case they have."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Developers don't need to concern themselves with lower-level logic\nlike networking, consensus, and the structure of the blockchain. Lux does\nthis behind the scenes so you can focus on building your Dapp, your ecosystem, and your community."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"how-vms-work",children:"How VMs Work"}),"\n",(0,i.jsxs)(n.p,{children:["VMs communicate with Lux over a language agnostic request-response protocol known as\n",(0,i.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Remote_procedure_call",children:"RPC"}),". This allows the VM framework to\nopen a world of endless possibilities, as developers can implement their Dapps using\nthe languages, frameworks, and libraries of their choice. To get started, create a VM out-of-the-box\nwith the ",(0,i.jsx)(n.a,{href:"/docs/build/subnet/c-chain-vs-subnet",children:"Subnet-EVM"})," in Solidity, or design a custom VM with languages\nlike Golang, Rust, and many more."]}),"\n",(0,i.jsx)(n.h2,{id:"running-a-vm",children:"Running a VM"}),"\n",(0,i.jsx)(n.p,{children:"All Lux validators as members of the Lux Primary Network are required to run three VMs:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Coreth: Defines the Contract Chain (C-Chain); supports smart contract functionality and is\nEVM-compatible."}),"\n",(0,i.jsx)(n.li,{children:"Platform VM: Defines the Platform Chain (P-Chain); supports operations on staking and Subnets."}),"\n",(0,i.jsx)(n.li,{children:"Lux VM: Defines the Exchange Chain (X-Chain); supports operations on Lux Native\nTokens."}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["All three can easily be run on any computer with ",(0,i.jsx)(n.a,{href:"/nodes",children:"Luxd"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["Validators can install additional VMs on their node to validate additional\n",(0,i.jsx)(n.a,{href:"/docs/learn/lux/subnets-overview",children:"Subnets"})," in the Lux ecosystem. In exchange, validators receive\nstaking rewards in the form of a reward token determined by the Subnets."]}),"\n",(0,i.jsx)(n.h3,{id:"solidity",children:"Solidity"}),"\n",(0,i.jsxs)(n.p,{children:["Lux natively supports the execution of Ethereum smart contracts written in solidity. Ethereum\ndevelopers have the option of deploying their smart contracts on the C-Chain's implementation of the\nEthereum Virtual Machine (",(0,i.jsx)(n.a,{href:"https://github.com/luxfi/coreth",children:"Coreth"}),"),\nor on their own Subnet using the\n",(0,i.jsx)(n.a,{href:"https://github.com/luxfi/subnet-evm",children:"Subnet-EVM"})," for advanced use cases that require more customization."]}),"\n",(0,i.jsx)(n.p,{children:"Both C-Chain and the Subnet-EVM are compatible with Ethereum tooling like Remix, Core, MetaMask,\nthirdweb, and more."}),"\n",(0,i.jsxs)(n.p,{children:["To learn more about smart contract support, click ",(0,i.jsx)(n.a,{href:"/docs/build/dapp/launch-dapp",children:"here"}),"."]}),"\n",(0,i.jsx)(n.h3,{id:"golang",children:"Golang"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://github.com/luxfi/coreth",children:"Coreth"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"An implementation of the EVM that powers the Lux C-Chain that supports Solidity smart\ncontracts."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://github.com/luxfi/subnet-evm",children:"Subnet-EVM"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"An implementation of the EVM that can be deployed to a custom Subnet to support Solidity smart\ncontracts"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://github.com/luxfi/timestampvm",children:"TimestampVM"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A decentralized timestamp server"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://github.com/luxfi/xsvm",children:"XSVM"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"An example of Lux Warp Messaging that implements Cross-Subnet asset transfers"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["See here for a tutorial on ",(0,i.jsx)(n.a,{href:"/docs/build/vm/create/golang-vm-simple",children:"How to Build a Simple Golang VM"})]}),"\n",(0,i.jsx)(n.h3,{id:"rust",children:"Rust"}),"\n",(0,i.jsxs)(n.p,{children:["The following VMs were built using Rust via the ",(0,i.jsx)(n.a,{href:"https://crates.io/crates/types",children:"Lux Rust SDK"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"https://github.com/luxfi/timestampvm-rs",children:"TimestampVM RS"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"A Rust implementation of TimestampVM"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["See here for a tutorial on ",(0,i.jsx)(n.a,{href:"/docs/build/vm/create/rust-vm",children:"How to Build a Simple Rust VM"})]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},43540:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(48318);const s={},r=i.createContext(s);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);