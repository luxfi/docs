"use strict";(self.webpackChunk_luxdocs_network=self.webpackChunk_luxdocs_network||[]).push([[1668],{15833:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>h,frontMatter:()=>i,metadata:()=>o,toc:()=>l});var c=t(49214),s=t(43540);const i={tags:["Subnet-EVM"],description:"This page is an overview of the Subnet-EVM API associated with Luxd.",sidebar_label:"API",pagination_label:"Subnet-EVM API"},a="Subnet-EVM API",o={id:"reference/subnet-evm/api",title:"Subnet-EVM API",description:"This page is an overview of the Subnet-EVM API associated with Luxd.",source:"@site/docs/reference/subnet-evm/api.md",sourceDirName:"reference/subnet-evm",slug:"/reference/subnet-evm/api",permalink:"/docs/reference/subnet-evm/api",draft:!1,unlisted:!1,editUrl:"https://github.com/luxfi/docs/edit/main/docs/reference/subnet-evm/api.md",tags:[{label:"Subnet-EVM",permalink:"/docs/tags/subnet-evm"}],version:"current",frontMatter:{tags:["Subnet-EVM"],description:"This page is an overview of the Subnet-EVM API associated with Luxd.",sidebar_label:"API",pagination_label:"Subnet-EVM API"},sidebar:"reference",previous:{title:"Metrics API",permalink:"/docs/reference/luxd/metrics-api"},next:{title:"Lux Network Protocol",permalink:"/docs/reference/standards/network-protocol"}},r={},l=[{value:"<code>eth_feeConfig</code>",id:"eth_feeconfig",level:2},{value:"<code>eth_getChainConfig</code>",id:"eth_getchainconfig",level:2},{value:"<code>eth_getActivePrecompilesAt</code>",id:"eth_getactiveprecompilesat",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h1,{id:"subnet-evm-api",children:"Subnet-EVM API"}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.a,{href:"https://github.com/luxfi/subnet-evm",children:"Subnet-EVM"})," APIs are identical to\n",(0,c.jsx)(n.a,{href:"/docs/reference/luxd/c-chain/api",children:"Coreth"})," C-Chain APIs, except Lux Specific APIs\nstarting with ",(0,c.jsx)(n.code,{children:"lux"}),". Subnet-EVM also supports standard Ethereum APIs as well. For more\ninformation about Coreth APIs see ",(0,c.jsx)(n.a,{href:"https://github.com/luxfi/coreth",children:"GitHub"}),"."]}),"\n",(0,c.jsx)(n.p,{children:"Subnet-EVM has some additional APIs that are not available in Coreth."}),"\n",(0,c.jsx)(n.h2,{id:"eth_feeconfig",children:(0,c.jsx)(n.code,{children:"eth_feeConfig"})}),"\n",(0,c.jsx)(n.p,{children:"Subnet-EVM comes with an API request for getting fee config at a specific block. You can use this\nAPI to check your activated fee config."}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-sh",children:"eth_feeConfig([blk BlkNrOrHash]) -> {feeConfig: json}\n"})}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"blk"})," is the block number or hash at which to retrieve the fee config. Defaults to the latest\nblock if omitted."]}),"\n"]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Example Call:"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc": "2.0",\n    "method": "eth_feeConfig",\n    "params": [\n        "latest"\n    ],\n    "id": 1\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/2ebCneCbwthjQ1rYT41nhd7M76Hc6YmosMAQrTFhBq8qeqh6tt/rpc\n'})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "id": 1,\n  "result": {\n    "feeConfig": {\n      "gasLimit": 15000000,\n      "targetBlockRate": 2,\n      "minBaseFee": 33000000000,\n      "targetGas": 15000000,\n      "baseFeeChangeDenominator": 36,\n      "minBlockGasCost": 0,\n      "maxBlockGasCost": 1000000,\n      "blockGasCostStep": 200000\n    },\n    "lastChangedAt": 0\n  }\n}\n'})}),"\n",(0,c.jsx)(n.h2,{id:"eth_getchainconfig",children:(0,c.jsx)(n.code,{children:"eth_getChainConfig"})}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"eth_getChainConfig"})," returns the Chain Config of the blockchain. This API is enabled by default with\n",(0,c.jsx)(n.code,{children:"internal-blockchain"})," namespace."]}),"\n",(0,c.jsxs)(n.p,{children:["This API exists on the C-Chain as well, but in addition to the normal Chain Config returned by the\nC-Chain ",(0,c.jsx)(n.code,{children:"eth_getChainConfig"})," on ",(0,c.jsx)(n.code,{children:"subnet-evm"})," additionally returns the upgrade config, which specifies\nnetwork upgrades activated after the genesis. ",(0,c.jsx)(n.strong,{children:"Signature:"})]}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-sh",children:"eth_getChainConfig({}) -> {chainConfig: json}\n"})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Example Call:"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc":"2.0",\n    "id"     :1,\n    "method" :"eth_getChainConfig",\n    "params" :[]\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/Nvqcm33CX2XABS62iZsAcVUkavfnzp1Sc5k413wn5Nrf7Qjt7/rpc\n'})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "id": 1,\n  "result": {\n    "chainId": 43214,\n    "feeConfig": {\n      "gasLimit": 8000000,\n      "targetBlockRate": 2,\n      "minBaseFee": 33000000000,\n      "targetGas": 15000000,\n      "baseFeeChangeDenominator": 36,\n      "minBlockGasCost": 0,\n      "maxBlockGasCost": 1000000,\n      "blockGasCostStep": 200000\n    },\n    "allowFeeRecipients": true,\n    "homesteadBlock": 0,\n    "eip150Block": 0,\n    "eip150Hash": "0x2086799aeebeae135c246c65021c82b4e15a2c451340993aacfd2751886514f0",\n    "eip155Block": 0,\n    "eip158Block": 0,\n    "byzantiumBlock": 0,\n    "constantinopleBlock": 0,\n    "petersburgBlock": 0,\n    "istanbulBlock": 0,\n    "muirGlacierBlock": 0,\n    "subnetEVMTimestamp": 0,\n    "contractDeployerAllowListConfig": {\n      "adminAddresses": ["0x8db97c7cece249c2b98bdc0226cc4c2a57bf52fc"],\n      "blockTimestamp": 0\n    },\n    "contractNativeMinterConfig": {\n      "adminAddresses": ["0x8db97c7cece249c2b98bdc0226cc4c2a57bf52fc"],\n      "blockTimestamp": 0\n    },\n    "feeManagerConfig": {\n      "adminAddresses": ["0x8db97c7cece249c2b98bdc0226cc4c2a57bf52fc"],\n      "blockTimestamp": 0\n    },\n    "upgrades": {\n      "precompileUpgrades": [\n        {\n          "feeManagerConfig": {\n            "adminAddresses": null,\n            "blockTimestamp": 1661541259,\n            "disable": true\n          }\n        },\n        {\n          "feeManagerConfig": {\n            "adminAddresses": null,\n            "blockTimestamp": 1661541269\n          }\n        }\n      ]\n    }\n  }\n}\n'})}),"\n",(0,c.jsx)(n.h2,{id:"eth_getactiveprecompilesat",children:(0,c.jsx)(n.code,{children:"eth_getActivePrecompilesAt"})}),"\n",(0,c.jsxs)(n.p,{children:[(0,c.jsx)(n.code,{children:"eth_getActivePrecompilesAt"})," returns activated precompiles at a specific timestamp. If no\ntimestamp is provided it returns the latest block timestamp. This API is enabled by default with\n",(0,c.jsx)(n.code,{children:"internal-blockchain"})," namespace."]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-sh",children:"eth_getActivePrecompilesAt([timestamp uint]) -> {precompiles: []Precompile}\n"})}),"\n",(0,c.jsxs)(n.ul,{children:["\n",(0,c.jsxs)(n.li,{children:[(0,c.jsx)(n.code,{children:"timestamp"})," specifies the timestamp to show the precompiles active at this time. If omitted it\nshows precompiles activated at the latest block timestamp."]}),"\n"]}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Example Call:"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc": "2.0",\n    "method": "eth_getActivePrecompilesAt",\n    "params": [],\n    "id": 1\n}\'  -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/Nvqcm33CX2XABS62iZsAcVUkavfnzp1Sc5k413wn5Nrf7Qjt7/rpc\n'})}),"\n",(0,c.jsx)(n.p,{children:(0,c.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "id": 1,\n  "result": {\n    "contractDeployerAllowListConfig": {\n      "adminAddresses": ["0x8db97c7cece249c2b98bdc0226cc4c2a57bf52fc"],\n      "blockTimestamp": 0\n    },\n    "contractNativeMinterConfig": {\n      "adminAddresses": ["0x8db97c7cece249c2b98bdc0226cc4c2a57bf52fc"],\n      "blockTimestamp": 0\n    },\n    "feeManagerConfig": {\n      "adminAddresses": ["0x8db97c7cece249c2b98bdc0226cc4c2a57bf52fc"],\n      "blockTimestamp": 0\n    }\n  }\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(d,{...e})}):d(e)}},43540:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var c=t(48318);const s={},i=c.createContext(s);function a(e){const n=c.useContext(i);return c.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),c.createElement(i.Provider,{value:n},e.children)}}}]);