"use strict";(self.webpackChunk_luxdocs_network=self.webpackChunk_luxdocs_network||[]).push([[5042],{49869:e=>{e.exports=JSON.parse('{"tag":{"label":"Tooling","permalink":"/docs/tags/tooling","allTagsPath":"/docs/tags","count":35,"items":[{"id":"tooling/rpc-providers","title":"\ud83d\udd0c RPC Providers","description":"There are multiple RPC providers which will work as intermediaries to help you interact with the Lux network. You\'ll experience different latency levels depending on the provider\'s configurations. You can potentially use multiple providers for redundancy and balancing.","permalink":"/docs/tooling/rpc-providers"},{"id":"tooling/README","title":"\ud83d\udd17 Tooling Quick Links","description":"The Lux Ecosystem includes a multitude of tooling, maintenance, testing services, including a wide range of helpful resources and utilities for developers building on the platform. These tools are designed to streamline development, improve integration, and maximize the potential of decentralized applications and custom blockchains in the Lux ecosystem.","permalink":"/docs/tooling/"},{"id":"tooling/indexers","title":"\ud83d\uddc4\ufe0f Indexers","description":"tools or services that facilitate efficient and quick access to data stored on Lux network.","permalink":"/docs/tooling/indexers"},{"id":"tooling/cli-guides/validate-subnets","title":"Configure a Node to Validate a Subnet with Lux-CLI","description":"This page demonstrates how to configure nodes to validate a Lux Subnet. Validation via Lux-CLI is currently only supported on Testnet.","permalink":"/docs/tooling/cli-guides/validate-subnets"},{"id":"tooling/cli-guides/validate-primary-network","title":"Configure Nodes to Validate the Primary Network with Lux-CLI","description":"This page demonstrates how to configure nodes to validate the Lux Primary Network. Validation via Lux-CLI is currently only supported on Testnet.","permalink":"/docs/tooling/cli-guides/validate-primary-network"},{"id":"tooling/luxjs-guides/create-an-asset-on-the-x-chain","title":"Create an Asset on the X-Chain","description":"LuxJS is a JavaScript Library for interfacing with the Lux platform. It is built using TypeScript and intended to support both browser and Node.js. The LuxJS library allows one to issue commands to the Lux node APIs.","permalink":"/docs/tooling/luxjs-guides/create-an-asset-on-the-x-chain"},{"id":"tooling/luxd-postman-collection/data-visualization","title":"Data Visualization","description":"The Luxd Postman collection includes all the public API calls that are available on Luxd instance, allowing you to quickly issue commands to your node and see the response, without having to copy and paste long and complicated `curl` commands.","permalink":"/docs/tooling/luxd-postman-collection/data-visualization"},{"id":"tooling/cli-guides/upload-a-custom-vm-to-cloud","title":"Deploy a Custom VM Using Lux-CLI","description":"This page demonstrates how to deploy a blockchain run with a custom virtual machine using cloud-based validators using the Lux-CLI.","permalink":"/docs/tooling/cli-guides/upload-a-custom-vm-to-cloud"},{"id":"tooling/cli-guides/node-ssh","title":"Execute a SSH command on a Cluster","description":"This page demonstrates how to execute a SSH command on all nodes of a Cluster using the Lux-CLI.","permalink":"/docs/tooling/cli-guides/node-ssh"},{"id":"tooling/luxjs-guides/generate-a-txid-using-luxjs","title":"Generate a Transaction ID Using LuxJS","description":"LuxJS is a JavaScript Library for interfacing with the Lux platform. It is built using TypeScript and intended to support both browser and Node.js. The LuxJS library allows one to issue commands to the Lux node APIs.","permalink":"/docs/tooling/luxjs-guides/generate-a-txid-using-luxjs"},{"id":"tooling/glacier","title":"Glacier API","description":"The Glacier API is a performant API that allows web3 developers to more easily access the indexed blockchain data they need to build powerful applications on top of Lux\'s primary and subnetworks as well as Ethereum.","permalink":"/docs/tooling/glacier"},{"id":"tooling/cli-guides/import-subnet","title":"How to Import a Subnet into Lux-CLI","description":"This guide demonstrates the process of importing a Subnet to the Lux-CLI to enable better management of the Subnet\'s configuration. This how-to uses the ZOO Subnet deployed on Testnet as the example Subnet.","permalink":"/docs/tooling/cli-guides/import-subnet"},{"id":"tooling/cli-guides/run-with-docker","title":"How to Run Lux-CLI with Docker","description":"This guide demonstrates how to run Lux-CLI in a docker container.","permalink":"/docs/tooling/cli-guides/run-with-docker"},{"id":"tooling/cli-guides/install-cli","title":"Install Lux-CLI","description":"This guide demonstrates how to install Lux-CLI.","permalink":"/docs/tooling/cli-guides/install-cli"},{"id":"tooling/netrunner","title":"Lux Netrunner","description":"The Lux Netrunner (ANR) allows a user to define, create and interact with a network of Lux nodes. It can be used for development and testing.","permalink":"/docs/tooling/netrunner"},{"id":"tooling/ops","title":"Lux Ops","description":"Lux Ops is a suite of commands that enables you to launch and configure network infrastructure (virtual machines or cloud instances) and installs Lux nodes from scratch allowing for various configuration requirements. It provisions all resources required to run a node or network with recommended setups (configurable). This tool is intended for quickly creating, testing and iterating over various Lux network infrastructure configurations for testing and simulation purposes. Use this to play with various setups and reproduce potential problems and issues with possible configurations.","permalink":"/docs/tooling/ops"},{"id":"tooling/lux-plugin-manager","title":"Lux Plugin Manager","description":"Lux Plugin Manager is a command-line tool to manage virtual machines binaries on existing Luxd instances. It enables to add/remove nodes to Subnets, upgrade the VM plugin binaries as new versions get released to the plugin repository.","permalink":"/docs/tooling/lux-plugin-manager"},{"id":"tooling/plugin-manager","title":"Lux Plugin Manager","description":"Lux Plugin Manager is a command-line tool to manage virtual machines binaries on existing Luxd instances. It enables to add/remove nodes to Subnets, upgrade the VM plugin binaries as new versions get released to the plugin repository.","permalink":"/docs/tooling/plugin-manager"},{"id":"tooling/cli","title":"Lux-CLI","description":"Lux-CLI is a command-line tool that gives developers access to everything Lux. This release specializes in helping developers build and test Subnets.","permalink":"/docs/tooling/cli"},{"id":"tooling/luxd-installer","title":"Luxd Installer","description":"Luxd Installer is a shell (bash) script that installs Luxd on any Linux computer. This script sets up full, running node in a matter of minutes with minimal user input required. This is convenient if you want to run the node as a service on a standalone Linux installation, for example to set up a (Subnet) validator, use the node as a private RPC server and similar uses. It also makes upgrading or reinstalling the nodes easy.","permalink":"/docs/tooling/luxd-installer"},{"id":"tooling/luxjs-api","title":"LuxJS API","description":"LuxJS is a JavaScript Library for interfacing with the Lux platform. It is built using TypeScript and intended to support both browser and Node.js. The LuxJS library allows one to issue commands to the Lux node APIs.","permalink":"/docs/tooling/luxjs-api"},{"id":"tooling/luxjs-overview","title":"LuxJS Overview","description":"LuxJS is a JavaScript Library for interfacing with the Lux platform. It is built using TypeScript and intended to support both browser and Node.js. The LuxJS library allows one to issue commands to the Lux node APIs.","permalink":"/docs/tooling/luxjs-overview"},{"id":"tooling/luxd-postman-collection/making-api-calls","title":"Making API Calls","description":"The Luxd Postman collection includes all the public API calls that are available on Luxd instance, allowing you to quickly issue commands to your node and see the response, without having to copy and paste long and complicated `curl` commands.","permalink":"/docs/tooling/luxd-postman-collection/making-api-calls"},{"id":"tooling/luxjs-guides/manage-x-chain-keys","title":"Manage X-Chain Keys","description":"LuxJS is a JavaScript Library for interfacing with the Lux platform. It is built using TypeScript and intended to support both browser and Node.js. The LuxJS library allows one to issue commands to the Lux node APIs.","permalink":"/docs/tooling/luxjs-guides/manage-x-chain-keys"},{"id":"tooling/luxjs-guides/generate-key-pair","title":"Manual Creation of Public-Private Key Pairs using LuxJS","description":"LuxJS is a JavaScript Library for interfacing with the Lux platform. It is built using TypeScript and intended to support both browser and Node.js. The LuxJS library allows one to issue commands to the Lux node APIs.","permalink":"/docs/tooling/luxjs-guides/generate-key-pair"},{"id":"tooling/metrics","title":"Metrics API","description":"Power your analytics with Lux Metrics API such as Subnet usage, staking operations, and more.","permalink":"/docs/tooling/metrics"},{"id":"tooling/luxjs-guides/multisig-utxos-with-luxjs","title":"Multi Signature UTXOs with LuxJS","description":"LuxJS is a JavaScript Library for interfacing with the Lux platform. It is built using TypeScript and intended to support both browser and Node.js. The LuxJS library allows one to issue commands to the Lux node APIs.","permalink":"/docs/tooling/luxjs-guides/multisig-utxos-with-luxjs"},{"id":"tooling/cli-guides/create-a-validator-aws","title":"Run a Lux Validator on AWS with One Lux-CLI Command","description":"This page demonstrates how to deploy Lux validators using just one Lux-CLI command.","permalink":"/docs/tooling/cli-guides/create-a-validator-aws"},{"id":"tooling/cli-guides/create-a-validator-gcp","title":"Run a Lux Validator on GCP with One Lux-CLI Command","description":"This page demonstrates how to deploy Lux validators using just one Lux-CLI command.","permalink":"/docs/tooling/cli-guides/create-a-validator-gcp"},{"id":"tooling/luxjs-guides/send-an-asset-on-the-x-chain","title":"Send an Asset on the X-Chain","description":"LuxJS is a JavaScript Library for interfacing with the Lux platform. It is built using TypeScript and intended to support both browser and Node.js. The LuxJS library allows one to issue commands to the Lux node APIs.","permalink":"/docs/tooling/luxjs-guides/send-an-asset-on-the-x-chain"},{"id":"tooling/luxd-postman-collection/setup","title":"Setting up Postman","description":"The Luxd Postman collection includes all the public API calls that are available on Luxd instance, allowing you to quickly issue commands to your node and see the response, without having to copy and paste long and complicated `curl` commands.","permalink":"/docs/tooling/luxd-postman-collection/setup"},{"id":"tooling/cli-guides/setup-a-devnet","title":"Setup a Devnet Using Lux-CLI","description":"This page demonstrates how to setup a Devnet of cloud-based validators using the Lux-CLI.","permalink":"/docs/tooling/cli-guides/setup-a-devnet"},{"id":"tooling/cli-guides/stop-node","title":"Stop Nodes Originally Created with Lux-CLI","description":"This page provides instructions for halting cloud server nodes established by Lux-CLI.","permalink":"/docs/tooling/cli-guides/stop-node"},{"id":"tooling/luxjs-guides/cross-chain-transfers","title":"Transfer LUX Tokens Between Chains","description":"LuxJS is a JavaScript Library for interfacing with the Lux platform. It is built using TypeScript and intended to support both browser and Node.js. The LuxJS library allows one to issue commands to the Lux node APIs.","permalink":"/docs/tooling/luxjs-guides/cross-chain-transfers"},{"id":"tooling/luxd-postman-collection/variables","title":"Variables","description":"The Luxd Postman collection includes all the public API calls that are available on Luxd instance, allowing you to quickly issue commands to your node and see the response, without having to copy and paste long and complicated `curl` commands.","permalink":"/docs/tooling/luxd-postman-collection/variables"}],"unlisted":false}}')}}]);