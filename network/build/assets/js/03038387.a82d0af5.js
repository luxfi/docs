"use strict";(self.webpackChunk_luxdocs_network=self.webpackChunk_luxdocs_network||[]).push([[2235],{1767:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});var t=s(49214),a=s(43540);const r={tags:["P-Chain","Platform Chain","Luxd APIs"],description:"This page is an overview of the P-Chain API associated with Luxd.",sidebar_label:"API",pagination_label:"P-Chain Transaction Format"},d="Platform Chain API",i={id:"reference/luxd/p-chain/api",title:"Platform Chain API",description:"This page is an overview of the P-Chain API associated with Luxd.",source:"@site/docs/reference/luxd/p-chain/api.md",sourceDirName:"reference/luxd/p-chain",slug:"/reference/luxd/p-chain/api",permalink:"/docs/reference/luxd/p-chain/api",draft:!1,unlisted:!1,editUrl:"https://github.com/luxfi/docs/edit/main/docs/reference/luxd/p-chain/api.md",tags:[{label:"P-Chain",permalink:"/docs/tags/p-chain"},{label:"Platform Chain",permalink:"/docs/tags/platform-chain"},{label:"Luxd APIs",permalink:"/docs/tags/luxd-ap-is"}],version:"current",frontMatter:{tags:["P-Chain","Platform Chain","Luxd APIs"],description:"This page is an overview of the P-Chain API associated with Luxd.",sidebar_label:"API",pagination_label:"P-Chain Transaction Format"},sidebar:"reference",previous:{title:"API Reference Quick Links",permalink:"/docs/reference/"},next:{title:"P-Chain Transaction Format",permalink:"/docs/reference/luxd/p-chain/txn-format"}},l={},c=[{value:"Endpoint",id:"endpoint",level:2},{value:"Format",id:"format",level:2},{value:"Methods",id:"methods",level:2},{value:"<code>platform.addDelegator</code>",id:"platformadddelegator",level:3},{value:"<code>platform.addSubnetValidator</code>",id:"platformaddsubnetvalidator",level:3},{value:"<code>platform.addValidator</code>",id:"platformaddvalidator",level:3},{value:"<code>platform.createAddress</code>",id:"platformcreateaddress",level:3},{value:"<code>platform.createBlockchain</code>",id:"platformcreateblockchain",level:3},{value:"<code>platform.createSubnet</code>",id:"platformcreatesubnet",level:3},{value:"<code>platform.exportLUX</code>",id:"platformexportlux",level:3},{value:"<code>platform.exportKey</code>",id:"platformexportkey",level:3},{value:"<code>platform.getBalance</code>",id:"platformgetbalance",level:3},{value:"<code>platform.getBlock</code>",id:"platformgetblock",level:3},{value:"Hex Example",id:"hex-example",level:4},{value:"JSON Example",id:"json-example",level:4},{value:"<code>platform.getBlockByHeight</code>",id:"platformgetblockbyheight",level:3},{value:"Hex Example",id:"hex-example-1",level:4},{value:"JSON Example",id:"json-example-1",level:4},{value:"<code>platform.getBlockchains</code>",id:"platformgetblockchains",level:3},{value:"<code>platform.getBlockchainStatus</code>",id:"platformgetblockchainstatus",level:3},{value:"<code>platform.getCurrentSupply</code>",id:"platformgetcurrentsupply",level:3},{value:"<code>platform.getCurrentValidators</code>",id:"platformgetcurrentvalidators",level:3},{value:"<code>platform.getHeight</code>",id:"platformgetheight",level:3},{value:"<code>platform.getMaxStakeAmount</code>",id:"platformgetmaxstakeamount",level:3},{value:"<code>platform.getMinStake</code>",id:"platformgetminstake",level:3},{value:"<code>platform.getPendingValidators</code>",id:"platformgetpendingvalidators",level:3},{value:"<code>platform.getRewardUTXOs</code>",id:"platformgetrewardutxos",level:3},{value:"<code>platform.getStake</code>",id:"platformgetstake",level:3},{value:"<code>platform.getStakingAssetID</code>",id:"platformgetstakingassetid",level:3},{value:"<code>platform.getSubnets</code>",id:"platformgetsubnets",level:3},{value:"<code>platform.getTimestamp</code>",id:"platformgettimestamp",level:3},{value:"<code>platform.getTotalStake</code>",id:"platformgettotalstake",level:3},{value:"Primary Network Example",id:"primary-network-example",level:4},{value:"Subnet Example",id:"subnet-example",level:4},{value:"<code>platform.getTx</code>",id:"platformgettx",level:3},{value:"<code>platform.getTxStatus</code>",id:"platformgettxstatus",level:3},{value:"<code>platform.getUTXOs</code>",id:"platformgetutxos",level:3},{value:"<strong>Example</strong>",id:"example",level:4},{value:"<code>platform.getValidatorsAt</code>",id:"platformgetvalidatorsat",level:3},{value:"<code>platform.importLUX</code>",id:"platformimportlux",level:3},{value:"<code>platform.importKey</code>",id:"platformimportkey",level:3},{value:"<code>platform.issueTx</code>",id:"platformissuetx",level:3},{value:"<code>platform.listAddresses</code>",id:"platformlistaddresses",level:3},{value:"<code>platform.sampleValidators</code>",id:"platformsamplevalidators",level:3},{value:"<code>platform.validatedBy</code>",id:"platformvalidatedby",level:3},{value:"<code>platform.validates</code>",id:"platformvalidates",level:3}];function o(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"platform-chain-api",children:"Platform Chain API"}),"\n",(0,t.jsxs)(n.p,{children:["This API allows clients to interact with the\n",(0,t.jsx)(n.a,{href:"/docs/learn/lux/lux-platform#p-chain",children:"P-Chain"}),", which\nmaintains Lux\u2019s ",(0,t.jsx)(n.a,{href:"/nodes/validate/how-to-stake#validators",children:"validator"})," set and handles\nblockchain creation."]}),"\n",(0,t.jsx)(n.h2,{id:"endpoint",children:"Endpoint"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"/ext/bc/P\n"})}),"\n",(0,t.jsx)(n.h2,{id:"format",children:"Format"}),"\n",(0,t.jsxs)(n.p,{children:["This API uses the ",(0,t.jsx)(n.code,{children:"json 2.0"})," RPC format."]}),"\n",(0,t.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,t.jsx)(n.h3,{id:"platformadddelegator",children:(0,t.jsx)(n.code,{children:"platform.addDelegator"})}),"\n",(0,t.jsx)(n.admonition,{type:"caution",children:(0,t.jsxs)(n.p,{children:["Deprecated as of ",(0,t.jsx)(n.a,{href:"https://github.com/luxfi/luxd/releases/tag/v1.9.12",children:(0,t.jsx)(n.strong,{children:"v1.9.12"})}),"."]})}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["Not recommended for use on Mainnet. See warning notice in ",(0,t.jsx)(n.a,{href:"/docs/reference/luxd/keystore-api",children:"Keystore API"}),"."]})}),"\n",(0,t.jsx)(n.p,{children:"Add a delegator to the Primary Network."}),"\n",(0,t.jsx)(n.p,{children:"A delegator stakes LUX and specifies a validator (the delegatee) to validate on their behalf. The\ndelegatee has an increased probability of being sampled by other validators (weight) in proportion\nto the stake delegated to them."}),"\n",(0,t.jsx)(n.p,{children:"The delegatee charges a fee to the delegator; the former receives a percentage of the delegator\u2019s\nvalidation reward (if any.) A transaction that delegates stake has no fee."}),"\n",(0,t.jsx)(n.p,{children:"The delegation period must be a subset of the period that the delegatee validates the Primary\nNetwork."}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsxs)(n.p,{children:["Once you issue the transaction to add a node as a delegator, there is no way to change the\nparameters. ",(0,t.jsx)(n.strong,{children:"You can\u2019t remove a stake early or change the stake amount, node ID, or reward\naddress."})," Please make sure you\u2019re using the correct values. If you\u2019re not sure, please reach out to\nus on ",(0,t.jsx)(n.a,{href:"https://chat.lux.network/",children:"Discord."})]})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"platform.addDelegator(\n    {\n        nodeID: string,\n        startTime: int,\n        endTime: int,\n        stakeAmount: int,\n        rewardAddress: string,\n        from: []string, // optional\n        changeAddr: string, // optional\n        username: string,\n        password: string\n    }\n) ->\n{\n    txID: string,\n    changeAddr: string\n}\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"nodeID"})," is the ID of the node to delegate to."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"startTime"})," is the Unix time when the delegator starts delegating."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"endTime"})," is the Unix time when the delegator stops delegating (and staked LUX is returned)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"stakeAmount"})," is the amount of nLUX the delegator is staking."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"rewardAddress"})," is the address the validator reward goes to, if there is one."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"from"})," are the addresses that you want to use for this operation. If omitted, uses any of your\naddresses as needed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"changeAddr"})," is the address any change will be sent to. If omitted, change is sent to one of the\naddresses controlled by the user."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"username"})," is the user that pays the transaction fee."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"password"})," is ",(0,t.jsx)(n.code,{children:"username"}),"\u2018s password."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"txID"})," is the transaction ID"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Call:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc": "2.0",\n    "method": "platform.addDelegator",\n    "params": {\n        "nodeID":"NodeID-MFrZFVCXPv5iCn6M9K6XduxGTYp891xXZ",\n        "rewardAddress":"P-lux18jma8ppw3nhx5r4ap8clazz0dps7rv5ukulre5",\n        "startTime":1594102400,\n        "endTime":1604102400,\n        "stakeAmount":100000,\n        "from": ["P-lux18jma8ppw3nhx5r4ap8clazz0dps7rv5ukulre5"],\n        "changeAddr": "P-lux103y30cxeulkjfe3kwfnpt432ylmnxux8r73r8u",\n        "username":"myUsername",\n        "password":"myPassword"\n    },\n    "id": 1\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/P\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "txID": "6pB3MtHUNogeHapZqMUBmx6N38ii3LzytVDrXuMovwKQFTZLs",\n    "changeAddr": "P-lux103y30cxeulkjfe3kwfnpt432ylmnxux8r73r8u"\n  },\n  "id": 1\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"platformaddsubnetvalidator",children:(0,t.jsx)(n.code,{children:"platform.addSubnetValidator"})}),"\n",(0,t.jsx)(n.admonition,{type:"caution",children:(0,t.jsxs)(n.p,{children:["Deprecated as of ",(0,t.jsx)(n.a,{href:"https://github.com/luxfi/luxd/releases/tag/v1.9.12",children:(0,t.jsx)(n.strong,{children:"v1.9.12"})}),"."]})}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["Not recommended for use on Mainnet. See warning notice in ",(0,t.jsx)(n.a,{href:"/docs/reference/luxd/keystore-api",children:"Keystore API"}),"."]})}),"\n",(0,t.jsx)(n.p,{children:"Add a validator to a Subnet other than the Primary Network. The Validator must validate the Primary\nNetwork for the entire duration they validate this Subnet."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"platform.addSubnetValidator(\n    {\n        nodeID: string,\n        subnetID: string,\n        startTime: int,\n        endTime: int,\n        weight: int,\n        from: []string, // optional\n        changeAddr: string, // optional\n        username: string,\n        password: string\n    }\n) ->\n{\n    txID: string,\n    changeAddr: string,\n}\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"nodeID"})," is the node ID of the validator being added to the Subnet. This validator must validate\nthe Primary Network for the entire duration that it validates this Subnet."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"subnetID"})," is the ID of the Subnet we\u2019re adding a validator to."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"startTime"})," is the Unix time when the validator starts validating the Subnet. It must be at or\nafter the time that the validator starts validating the Primary Network"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"endTime"})," is the Unix time when the validator stops validating the Subnet. It must be at or before\nthe time that the validator stops validating the Primary Network."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"weight"})," is the validator\u2019s weight used for sampling. If the validator\u2019s weight is 1 and the\ncumulative weight of all validators in the Subnet is 100, then this validator will be included in\nabout 1 in every 100 samples during consensus. The cumulative weight of all validators in the\nSubnet must be at least ",(0,t.jsx)(n.code,{children:"snow-sample-size"}),". For example, if there is only one validator in the\nSubnet, its weight must be at least ",(0,t.jsx)(n.code,{children:"snow-sample-size"})," (default 20). Recall that a validator's\nweight can't be changed while it is validating, so take care to use an appropriate value."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"from"})," are the fund addresses that the user wants to use to pay for this operation. If omitted,\nuse any of user's addresses as needed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"changeAddr"})," is the address any change/left-over of the fund (specified by the ",(0,t.jsx)(n.code,{children:"from"})," addresses)\nwill be sent to. If omitted, change/left-over is sent to one of the addresses controlled by the\nuser."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"username"})," is the user that pays the transaction fee."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"password"})," is ",(0,t.jsx)(n.code,{children:"username"}),"\u2018s password."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"txID"})," is the transaction ID."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Call:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc": "2.0",\n    "method": "platform.addSubnetValidator",\n    "params": {\n        "nodeID":"NodeID-7xhw2mdxuds44j42tcb6u5579esbst3lg",\n        "subnetID":"zbfoww1ffkpvrfywpj1cvqrfnyesepdfc61hmu2n9jnghduel",\n        "startTime":1583524047,\n        "endTime":1604102399,\n        "weight":1,\n        "from": ["P-lux18jma8ppw3nhx5r4ap8clazz0dps7rv5ukulre5"],\n        "changeAddr": "P-lux103y30cxeulkjfe3kwfnpt432ylmnxux8r73r8u",\n        "username":"myUsername",\n        "password":"myPassword"\n    },\n    "id": 1\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/P\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "id": 1,\n  "result": {\n    "txID": "2exafyvRNSE5ehwjhafBVt6CTntot7DFjsZNcZ54GSxBbVLcCm",\n    "changeAddr": "P-lux103y30cxeulkjfe3kwfnpt432ylmnxux8r73r8u"\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"platformaddvalidator",children:(0,t.jsx)(n.code,{children:"platform.addValidator"})}),"\n",(0,t.jsx)(n.admonition,{type:"caution",children:(0,t.jsxs)(n.p,{children:["Deprecated as of ",(0,t.jsx)(n.a,{href:"https://github.com/luxfi/luxd/releases/tag/v1.9.12",children:(0,t.jsx)(n.strong,{children:"v1.9.12"})}),"."]})}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["Not recommended for use on Mainnet. See warning notice in ",(0,t.jsx)(n.a,{href:"/docs/reference/luxd/keystore-api",children:"Keystore API"}),"."]})}),"\n",(0,t.jsx)(n.p,{children:"Add a validator to the Primary Network. You must stake LUX to do this. If the node is sufficiently\ncorrect and responsive while validating, you receive a reward when end of staking period is reached.\nThe validator\u2019s probability of being sampled by other validators during consensus is in proportion\nto the amount of LUX staked."}),"\n",(0,t.jsx)(n.p,{children:"The validator charges a fee to delegators; the former receives a percentage of the delegator\u2019s\nvalidation reward (if any.) The minimum delegation fee is 2%. A transaction that adds a validator\nhas no fee."}),"\n",(0,t.jsx)(n.p,{children:"The validation period must be between 2 weeks and 1 year for the Mainnet, and 24 hours and 1 year\nfor Testnet."}),"\n",(0,t.jsxs)(n.p,{children:["There is a maximum total weight imposed on validators. This means that no validator will ever have\nmore LUX staked and delegated to it than this value.\nThis value will initially be set to ",(0,t.jsx)(n.code,{children:"min(5 * amount staked, 3M LUX)"}),".\nThe total value on a validator is 3 million LUX."]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsxs)(n.p,{children:["Note that once you issue the transaction to add a node as a validator, there is no way to\nchange the parameters. ",(0,t.jsx)(n.strong,{children:"You can\u2019t remove stake early or change the stake amount, node ID, or reward\naddress."})," Please make sure you\u2019re using the correct values. If you\u2019re not sure, please reach out to\nus on ",(0,t.jsx)(n.a,{href:"https://chat.lux.network/",children:"Discord."})]})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"platform.addValidator(\n    {\n        nodeID: string,\n        startTime: int,\n        endTime: int,\n        stakeAmount: int,\n        rewardAddress: string,\n        delegationFeeRate: float,\n        from: []string, // optional\n        changeAddr: string, // optional\n        username: string,\n        password: string\n    }\n) ->\n{\n    txID: string,\n    changeAddr: string\n}\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"nodeID"})," is the node ID of the validator being added."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"startTime"})," is the Unix time when the validator starts validating the Primary Network."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"endTime"})," is the Unix time when the validator stops validating the Primary Network (and staked\nLUX is returned)."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"stakeAmount"})," is the amount of nLUX the validator is staking."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"rewardAddress"})," is the address the validator reward will go to, if there is one."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"delegationFeeRate"})," is the percent fee this validator charges when others delegate stake to them.\nUp to 4 decimal places allowed; additional decimal places are ignored. Must be between 0 and 100,\ninclusive. For example, if ",(0,t.jsx)(n.code,{children:"delegationFeeRate"})," is ",(0,t.jsx)(n.code,{children:"1.2345"})," and someone delegates to this\nvalidator, then when the delegation period is over, 1.2345% of the reward goes to the validator\nand the rest goes to the delegator."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"from"})," are the addresses that you want to use for this operation. If omitted, uses any of your\naddresses as needed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"changeAddr"})," is the address any change will be sent to. If omitted, change is sent to one of the\naddresses controlled by the user."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"username"})," is the user that pays the transaction fee."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"password"})," is ",(0,t.jsx)(n.code,{children:"username"}),"\u2018s password."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"txID"})," is the transaction ID"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Call:"})}),"\n",(0,t.jsxs)(n.p,{children:["In this example, we use shell command ",(0,t.jsx)(n.code,{children:"date"})," to compute Unix times 10 minutes and 2 days in the\nfuture. (Note: If you\u2019re on a Mac, replace ",(0,t.jsx)(n.code,{children:"$(date"})," with ",(0,t.jsx)(n.code,{children:"$(gdate"}),". If you don\u2019t have ",(0,t.jsx)(n.code,{children:"gdate"}),"\ninstalled, do ",(0,t.jsx)(n.code,{children:"brew install coreutils"}),".)"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc": "2.0",\n    "method": "platform.addValidator",\n    "params": {\n        "nodeID":"NodeID-ARCLrphAHZ28xZEBfUL7SVAmzkTZNe1LK",\n        "rewardAddress":"P-lux18jma8ppw3nhx5r4ap8clazz0dps7rv5ukulre5",\n        "from": ["P-lux18jma8ppw3nhx5r4ap8clazz0dps7rv5ukulre5"],\n        "changeAddr": "P-lux103y30cxeulkjfe3kwfnpt432ylmnxux8r73r8u",\n        "startTime":\'$(date --date="10 minutes" +%s)\',\n        "endTime":\'$(date --date="2 days" +%s)\',\n        "stakeAmount":1000000,\n        "delegationFeeRate":10,\n        "username":"myUsername",\n        "password":"myPassword"\n    },\n    "id": 1\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/P\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "txID": "6pb3mthunogehapzqmubmx6n38ii3lzytvdrxumovwkqftzls",\n    "changeAddr": "P-lux103y30cxeulkjfe3kwfnpt432ylmnxux8r73r8u"\n  },\n  "id": 1\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"platformcreateaddress",children:(0,t.jsx)(n.code,{children:"platform.createAddress"})}),"\n",(0,t.jsx)(n.admonition,{type:"caution",children:(0,t.jsxs)(n.p,{children:["Deprecated as of ",(0,t.jsx)(n.a,{href:"https://github.com/luxfi/luxd/releases/tag/v1.9.12",children:(0,t.jsx)(n.strong,{children:"v1.9.12"})}),"."]})}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["Not recommended for use on Mainnet. See warning notice in ",(0,t.jsx)(n.a,{href:"/docs/reference/luxd/keystore-api",children:"Keystore API"}),"."]})}),"\n",(0,t.jsx)(n.p,{children:"Create a new address controlled by the given user."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"platform.createAddress({\n    username: string,\n    password: string\n}) -> {address: string}\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Call:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc": "2.0",\n    "method": "platform.createAddress",\n    "params": {\n        "username":"myUsername",\n        "password":"myPassword"\n    },\n    "id": 1\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/P\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "address": "P-lux18jma8ppw3nhx5r4ap8clazz0dps7rv5ukulre5"\n  },\n  "id": 1\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"platformcreateblockchain",children:(0,t.jsx)(n.code,{children:"platform.createBlockchain"})}),"\n",(0,t.jsx)(n.admonition,{type:"caution",children:(0,t.jsxs)(n.p,{children:["Deprecated as of ",(0,t.jsx)(n.a,{href:"https://github.com/luxfi/luxd/releases/tag/v1.9.12",children:(0,t.jsx)(n.strong,{children:"v1.9.12"})}),"."]})}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["Not recommended for use on Mainnet. See warning notice in ",(0,t.jsx)(n.a,{href:"/docs/reference/luxd/keystore-api",children:"Keystore API"}),"."]})}),"\n",(0,t.jsx)(n.p,{children:"Create a new blockchain. Currently only supports the creation of new instances of the AVM and the\nTimestamp VM."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"platform.createBlockchain(\n    {\n        subnetID: string,\n        vmID: string,\n        name: string,\n        genesisData: string,\n        encoding: string, // optional\n        from: []string, // optional\n        changeAddr: string, // optional\n        username: string,\n        password: string\n    }\n) ->\n{\n    txID: string,\n    changeAddr: string\n}\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"subnetID"})," is the ID of the Subnet that validates the new blockchain. The Subnet must exist and\ncan\u2019t be the Primary Network."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"vmID"})," is the ID of the Virtual Machine the blockchain runs. Can also be an alias of the Virtual\nMachine."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"name"})," is a human-readable name for the new blockchain. Not necessarily unique."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"genesisData"})," is the byte representation of the genesis state of the new blockchain encoded in the\nformat specified by the ",(0,t.jsx)(n.code,{children:"encoding"})," parameter."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"encoding"})," specifies the format to use for ",(0,t.jsx)(n.code,{children:"genesisData"}),". Can only be ",(0,t.jsx)(n.code,{children:"hex"})," when a value is\nprovided. Virtual Machines should have a static API method named ",(0,t.jsx)(n.code,{children:"buildGenesis"})," that can be used\nto generate ",(0,t.jsx)(n.code,{children:"genesisData"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"from"})," are the addresses that you want to use for this operation. If omitted, uses any of your\naddresses as needed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"changeAddr"})," is the address any change will be sent to. If omitted, change is sent to one of the\naddresses controlled by the user."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"username"})," is the user that pays the transaction fee. This user must have a sufficient number of\nthe Subnet's control keys."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"password"})," is ",(0,t.jsx)(n.code,{children:"username"}),"\u2018s password."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"txID"})," is the transaction ID."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Call:"})}),"\n",(0,t.jsxs)(n.p,{children:["In this example we\u2019re creating a new instance of the Timestamp Virtual Machine. ",(0,t.jsx)(n.code,{children:"genesisData"})," came\nfrom calling ",(0,t.jsx)(n.code,{children:"timestamp.buildGenesis"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc": "2.0",\n    "method": "platform.createBlockchain",\n    "params" : {\n        "vmID":"timestamp",\n        "subnetID":"2bRCr6B4MiEfSjidDwxDpdCyviwnfUVqB2HGwhm947w9YYqb7r",\n        "name":"My new timestamp",\n        "genesisData": "0x07000000000000000000000000000000000000000000000000000000000000000016943a",\n        "encoding": "hex",\n        "from": ["P-lux18jma8ppw3nhx5r4ap8clazz0dps7rv5ukulre5"],\n        "changeAddr": "P-lux103y30cxeulkjfe3kwfnpt432ylmnxux8r73r8u",\n        "username":"myUsername",\n        "password":"myPassword"\n    },\n    "id": 1\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/P\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "txID": "2TBnyFmST7TirNm6Y6z4863zusRVpWi5Cj1sKS9bXTUmu8GfeU",\n    "changeAddr": "P-lux103y30cxeulkjfe3kwfnpt432ylmnxux8r73r8u"\n  },\n  "id": 1\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"platformcreatesubnet",children:(0,t.jsx)(n.code,{children:"platform.createSubnet"})}),"\n",(0,t.jsx)(n.admonition,{type:"caution",children:(0,t.jsxs)(n.p,{children:["Deprecated as of ",(0,t.jsx)(n.a,{href:"https://github.com/luxfi/luxd/releases/tag/v1.9.12",children:(0,t.jsx)(n.strong,{children:"v1.9.12"})}),"."]})}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["Not recommended for use on Mainnet. See warning notice in ",(0,t.jsx)(n.a,{href:"/docs/reference/luxd/keystore-api",children:"Keystore API"}),"."]})}),"\n",(0,t.jsx)(n.p,{children:"Create a new Subnet."}),"\n",(0,t.jsx)(n.p,{children:"The Subnet\u2019s ID is the same as this transaction\u2019s ID."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"platform.createSubnet(\n    {\n        controlKeys: []string,\n        threshold: int,\n        from: []string, // optional\n        changeAddr: string, // optional\n        username: string,\n        password: string\n    }\n) ->\n{\n    txID: string,\n    changeAddr: string\n}\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["In order to add a validator to this Subnet, ",(0,t.jsx)(n.code,{children:"threshold"})," signatures are required from the addresses\nin ",(0,t.jsx)(n.code,{children:"controlKeys"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"from"})," are the addresses that you want to use for this operation. If omitted, uses any of your\naddresses as needed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"changeAddr"})," is the address any change will be sent to. If omitted, change is sent to one of the\naddresses controlled by the user."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"username"})," is the user that pays the transaction fee."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"password"})," is ",(0,t.jsx)(n.code,{children:"username"}),"\u2018s password."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Call:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc": "2.0",\n    "method": "platform.createSubnet",\n    "params": {\n        "controlKeys":[\n            "P-lux18jma8ppw3nhx5r4ap8clazz0dps7rv5ukulre5",\n            "P-lux18jma8ppw3nhx5r4ap8clazz0dps7rv5ukulre5"\n        ],\n        "threshold":2,\n        "from": ["P-lux18jma8ppw3nhx5r4ap8clazz0dps7rv5ukulre5"],\n        "changeAddr": "P-lux103y30cxeulkjfe3kwfnpt432ylmnxux8r73r8u",\n        "username":"myUsername",\n        "password":"myPassword"\n    },\n    "id": 1\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/P\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "txID": "hJfC5xGhtjhCGBh1JWn3vZ51KJP696TZrsbadPHNbQG2Ve5yd"\n  },\n  "id": 1\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"platformexportlux",children:(0,t.jsx)(n.code,{children:"platform.exportLUX"})}),"\n",(0,t.jsx)(n.admonition,{type:"caution",children:(0,t.jsxs)(n.p,{children:["Deprecated as of ",(0,t.jsx)(n.a,{href:"https://github.com/luxfi/luxd/releases/tag/v1.9.12",children:(0,t.jsx)(n.strong,{children:"v1.9.12"})}),"."]})}),"\n",(0,t.jsxs)(n.p,{children:["Send LUX from an address on the P-Chain to an address on the X-Chain or C-Chain. After issuing this\ntransaction, you must call the X-Chain's ",(0,t.jsx)(n.a,{href:"/docs/reference/luxd/x-chain/api#avmimport",children:(0,t.jsx)(n.code,{children:"avm.import"})}),"\nor C-Chain's ",(0,t.jsx)(n.a,{href:"/docs/reference/luxd/c-chain/api#luximport",children:(0,t.jsx)(n.code,{children:"lux.import"})})," with assetID ",(0,t.jsx)(n.code,{children:"LUX"}),"\nto complete the transfer."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"platform.exportLUX(\n    {\n        amount: int,\n        from: []string, // optional\n        to: string,\n        changeAddr: string, // optional\n        username: string,\n        password: string\n    }\n) ->\n{\n    txID: string,\n    changeAddr: string\n}\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"amount"})," is the amount of nLUX to send."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"to"})," is the address on the X-Chain or C-Chain to send the LUX to."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"from"})," are the addresses that you want to use for this operation. If omitted, uses any of your\naddresses as needed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"changeAddr"})," is the address any change will be sent to. If omitted, change is sent to one of the\naddresses controlled by the user."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"username"})," is the user sending the LUX and paying the transaction fee."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"password"})," is ",(0,t.jsx)(n.code,{children:"username"}),"\u2018s password."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"txID"})," is the ID of this transaction."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Call:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc": "2.0",\n    "method": "platform.exportLUX",\n    "params": {\n        "to":"X-lux18jma8ppw3nhx5r4ap8clazz0dps7rv5ukulre5",\n        "amount":1,\n        "from": ["P-lux18jma8ppw3nhx5r4ap8clazz0dps7rv5ukulre5"],\n        "changeAddr": "P-lux103y30cxeulkjfe3kwfnpt432ylmnxux8r73r8u",\n        "username":"myUsername",\n        "password":"myPassword"\n    },\n    "id": 1\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/P\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "txID": "2Kz69TNBSeABuaVjKa6ZJCTLobbe5xo9c5eU8QwdUSvPo2dBk3",\n    "changeAddr": "P-lux103y30cxeulkjfe3kwfnpt432ylmnxux8r73r8u"\n  },\n  "id": 1\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"platformexportkey",children:(0,t.jsx)(n.code,{children:"platform.exportKey"})}),"\n",(0,t.jsx)(n.admonition,{type:"caution",children:(0,t.jsxs)(n.p,{children:["Deprecated as of ",(0,t.jsx)(n.a,{href:"https://github.com/luxfi/luxd/releases/tag/v1.9.12",children:(0,t.jsx)(n.strong,{children:"v1.9.12"})}),"."]})}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["Not recommended for use on Mainnet. See warning notice in ",(0,t.jsx)(n.a,{href:"/docs/reference/luxd/keystore-api",children:"Keystore API"}),"."]})}),"\n",(0,t.jsxs)(n.p,{children:["Get the private key that controls a given address. The returned private key can be added to a user\nwith ",(0,t.jsx)(n.a,{href:"/docs/reference/luxd/p-chain/api#platformimportkey",children:(0,t.jsx)(n.code,{children:"platform.importKey"})}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"platform.exportKey({\n    username: string,\n    password: string,\n    address: string\n}) -> {privateKey: string}\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"username"})," is the user that controls ",(0,t.jsx)(n.code,{children:"address"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"password"})," is ",(0,t.jsx)(n.code,{children:"username"}),"\u2018s password."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"privateKey"})," is the string representation of the private key that controls ",(0,t.jsx)(n.code,{children:"address"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Call:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc":"2.0",\n    "id"     :1,\n    "method" :"platform.exportKey",\n    "params" :{\n        "username" :"myUsername",\n        "password": "myPassword",\n        "address": "P-lux18jma8ppw3nhx5r4ap8clazz0dps7rv5ukulre5"\n    }\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/P\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "id": 1,\n  "result": {\n    "privateKey": "PrivateKey-Lf49kAJw3CbaL783vmbeAJvhscJqC7vi5yBYLxw2XfbzNS5RS"\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"platformgetbalance",children:(0,t.jsx)(n.code,{children:"platform.getBalance"})}),"\n",(0,t.jsx)(n.admonition,{type:"caution",children:(0,t.jsxs)(n.p,{children:["Deprecated as of ",(0,t.jsx)(n.a,{href:"https://github.com/luxfi/luxd/releases/tag/v1.9.12",children:(0,t.jsx)(n.strong,{children:"v1.9.12"})}),"."]})}),"\n",(0,t.jsx)(n.p,{children:"Get the balance of LUX controlled by a given address."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"platform.getBalance({\n    addresses: []string\n}) -> {\n    balances: string -> int,\n    unlockeds: string -> int,\n    lockedStakeables: string -> int,\n    lockedNotStakeables: string -> int,\n    utxoIDs: []{\n        txID: string,\n        outputIndex: int\n    }\n}\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"addresses"})," are the addresses to get the balance of."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"balances"})," is a map from assetID to the total balance."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"unlockeds"})," is a map from assetID to the unlocked balance."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"lockedStakeables"})," is a map from assetID to the locked stakeable balance."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"lockedNotStakeables"})," is a map from assetID to the locked and not stakeable balance."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"utxoIDs"})," are the IDs of the UTXOs that reference ",(0,t.jsx)(n.code,{children:"address"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Call:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n  "jsonrpc":"2.0",\n  "id"     : 1,\n  "method" :"platform.getBalance",\n  "params" :{\n      "addresses":["P-custom18jma8ppw3nhx5r4ap8clazz0dps7rv5u9xde7p"]\n  }\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/P\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n    "jsonrpc": "2.0",\n    "result": {\n        "balance": "30000000000000000",\n        "unlocked": "20000000000000000",\n        "lockedStakeable": "10000000000000000",\n        "lockedNotStakeable": "0",\n        "balances": {\n            "BUuypiq2wyuLMvyhzFXcPyxPMCgSp7eeDohhQRqTChoBjKziC": "30000000000000000"\n        },\n        "unlockeds": {\n            "BUuypiq2wyuLMvyhzFXcPyxPMCgSp7eeDohhQRqTChoBjKziC": "20000000000000000"\n        },\n        "lockedStakeables": {\n            "BUuypiq2wyuLMvyhzFXcPyxPMCgSp7eeDohhQRqTChoBjKziC": "10000000000000000"\n        },\n        "lockedNotStakeables": {},\n        "utxoIDs": [\n            {\n                "txID": "11111111111111111111111111111111LpoYY",\n                "outputIndex": 1\n            },\n            {\n                "txID": "11111111111111111111111111111111LpoYY",\n                "outputIndex": 0\n            }\n        ]\n    },\n    "id": 1\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"platformgetblock",children:(0,t.jsx)(n.code,{children:"platform.getBlock"})}),"\n",(0,t.jsx)(n.p,{children:"Get a block by its ID."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"platform.getBlock({\n    blockID: string\n    encoding: string // optional\n}) -> {\n    block: string,\n    encoding: string\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Request:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"blockID"})," is the block ID. It should be in cb58 format."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"encoding"})," is the encoding format to use. Can be either ",(0,t.jsx)(n.code,{children:"hex"})," or ",(0,t.jsx)(n.code,{children:"json"}),". Defaults to ",(0,t.jsx)(n.code,{children:"hex"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Response:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"block"})," is the block encoded to ",(0,t.jsx)(n.code,{children:"encoding"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"encoding"})," is the ",(0,t.jsx)(n.code,{children:"encoding"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"hex-example",children:"Hex Example"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Call:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc": "2.0",\n    "method": "platform.getBlock",\n    "params": {\n        "blockID": "d7WYmb8VeZNHsny3EJCwMm6QA37s1EHwMxw1Y71V3FqPZ5EFG",\n        "encoding": "hex"\n    },\n    "id": 1\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/P\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "block": "0x00000000000309473dc99a0851a29174d84e522da8ccb1a56ac23f7b0ba79f80acce34cf576900000000000f4241000000010000001200000001000000000000000000000000000000000000000000000000000000000000000000000000000000011c4c57e1bcb3c567f9f03caa75563502d1a21393173c06d9d79ea247b20e24800000000021e67317cbc4be2aeb00677ad6462778a8f52274b9d605df2591b23027a87dff000000050000000338e0465f0000000100000000000000000427d4b22a2a78bcddd456742caf91b56badbff985ee19aef14573e7343fd6520000000121e67317cbc4be2aeb00677ad6462778a8f52274b9d605df2591b23027a87dff000000070000000338d1041f0000000000000000000000010000000195a4467dd8f939554ea4e6501c08294386938cbf000000010000000900000001c79711c4b48dcde205b63603efef7c61773a0eb47efb503fcebe40d21962b7c25ebd734057400a12cce9cf99aceec8462923d5d91fffe1cb908372281ed738580119286dde",\n    "encoding": "hex"\n  },\n  "id": 1\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"json-example",children:"JSON Example"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Call:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc": "2.0",\n    "method": "platform.getBlock",\n    "params": {\n        "blockID": "d7WYmb8VeZNHsny3EJCwMm6QA37s1EHwMxw1Y71V3FqPZ5EFG",\n        "encoding": "json"\n    },\n    "id": 1\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/P\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "block": {\n      "parentID": "5615di9ytxujackzaXNrVuWQy5y8Yrt8chPCscMr5Ku9YxJ1S",\n      "height": 1000001,\n      "txs": [\n        {\n          "unsignedTx": {\n            "inputs": {\n              "networkID": 1,\n              "blockchainID": "11111111111111111111111111111111LpoYY",\n              "outputs": [],\n              "inputs": [\n                {\n                  "txID": "DTqiagiMFdqbNQ62V2Gt1GddTVLkKUk2caGr4pyza9hTtsfta",\n                  "outputIndex": 0,\n                  "assetID": "FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z",\n                  "fxID": "spdxUxVJQbX85MGxMHbKw1sHxMnSqJ3QBzDyDYEP3h6TLuxqQ",\n                  "input": {\n                    "amount": 13839124063,\n                    "signatureIndices": [0]\n                  }\n                }\n              ],\n              "memo": "0x"\n            },\n            "destinationChain": "2q9e4r6Mu3U68nU1fYjgbR6JvwrRx36CohpAX5UQxse55x1Q5",\n            "exportedOutputs": [\n              {\n                "assetID": "FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z",\n                "fxID": "spdxUxVJQbX85MGxMHbKw1sHxMnSqJ3QBzDyDYEP3h6TLuxqQ",\n                "output": {\n                  "addresses": [\n                    "P-lux1jkjyvlwclyu42n4yuegpczpfgwrf8r9lyj0d3c"\n                  ],\n                  "amount": 13838124063,\n                  "locktime": 0,\n                  "threshold": 1\n                }\n              }\n            ]\n          },\n          "credentials": [\n            {\n              "signatures": [\n                "0xc79711c4b48dcde205b63603efef7c61773a0eb47efb503fcebe40d21962b7c25ebd734057400a12cce9cf99aceec8462923d5d91fffe1cb908372281ed7385801"\n              ]\n            }\n          ]\n        }\n      ]\n    },\n    "encoding": "json"\n  },\n  "id": 1\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"platformgetblockbyheight",children:(0,t.jsx)(n.code,{children:"platform.getBlockByHeight"})}),"\n",(0,t.jsx)(n.p,{children:"Get a block by its height."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"platform.getBlockByHeight({\n    height: int\n    encoding: string // optional\n}) -> {\n    block: string,\n    encoding: string\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Request:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"height"})," is the block height."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"encoding"})," is the encoding format to use. Can be either ",(0,t.jsx)(n.code,{children:"hex"})," or ",(0,t.jsx)(n.code,{children:"json"}),". Defaults to ",(0,t.jsx)(n.code,{children:"hex"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Response:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"block"})," is the block encoded to ",(0,t.jsx)(n.code,{children:"encoding"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"encoding"})," is the ",(0,t.jsx)(n.code,{children:"encoding"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"hex-example-1",children:"Hex Example"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Call:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc": "2.0",\n    "method": "platform.getBlockByHeight",\n    "params": {\n        "height": 1000001,\n        "encoding": "hex"\n    },\n    "id": 1\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/P\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "block": "0x00000000000309473dc99a0851a29174d84e522da8ccb1a56ac23f7b0ba79f80acce34cf576900000000000f4241000000010000001200000001000000000000000000000000000000000000000000000000000000000000000000000000000000011c4c57e1bcb3c567f9f03caa75563502d1a21393173c06d9d79ea247b20e24800000000021e67317cbc4be2aeb00677ad6462778a8f52274b9d605df2591b23027a87dff000000050000000338e0465f0000000100000000000000000427d4b22a2a78bcddd456742caf91b56badbff985ee19aef14573e7343fd6520000000121e67317cbc4be2aeb00677ad6462778a8f52274b9d605df2591b23027a87dff000000070000000338d1041f0000000000000000000000010000000195a4467dd8f939554ea4e6501c08294386938cbf000000010000000900000001c79711c4b48dcde205b63603efef7c61773a0eb47efb503fcebe40d21962b7c25ebd734057400a12cce9cf99aceec8462923d5d91fffe1cb908372281ed738580119286dde",\n    "encoding": "hex"\n  },\n  "id": 1\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"json-example-1",children:"JSON Example"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Call:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc": "2.0",\n    "method": "platform.getBlockByHeight",\n    "params": {\n        "height": 1000001,\n        "encoding": "json"\n    },\n    "id": 1\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/P\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "block": {\n      "parentID": "5615di9ytxujackzaXNrVuWQy5y8Yrt8chPCscMr5Ku9YxJ1S",\n      "height": 1000001,\n      "txs": [\n        {\n          "unsignedTx": {\n            "inputs": {\n              "networkID": 1,\n              "blockchainID": "11111111111111111111111111111111LpoYY",\n              "outputs": [],\n              "inputs": [\n                {\n                  "txID": "DTqiagiMFdqbNQ62V2Gt1GddTVLkKUk2caGr4pyza9hTtsfta",\n                  "outputIndex": 0,\n                  "assetID": "FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z",\n                  "fxID": "spdxUxVJQbX85MGxMHbKw1sHxMnSqJ3QBzDyDYEP3h6TLuxqQ",\n                  "input": {\n                    "amount": 13839124063,\n                    "signatureIndices": [0]\n                  }\n                }\n              ],\n              "memo": "0x"\n            },\n            "destinationChain": "2q9e4r6Mu3U68nU1fYjgbR6JvwrRx36CohpAX5UQxse55x1Q5",\n            "exportedOutputs": [\n              {\n                "assetID": "FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z",\n                "fxID": "spdxUxVJQbX85MGxMHbKw1sHxMnSqJ3QBzDyDYEP3h6TLuxqQ",\n                "output": {\n                  "addresses": [\n                    "P-lux1jkjyvlwclyu42n4yuegpczpfgwrf8r9lyj0d3c"\n                  ],\n                  "amount": 13838124063,\n                  "locktime": 0,\n                  "threshold": 1\n                }\n              }\n            ]\n          },\n          "credentials": [\n            {\n              "signatures": [\n                "0xc79711c4b48dcde205b63603efef7c61773a0eb47efb503fcebe40d21962b7c25ebd734057400a12cce9cf99aceec8462923d5d91fffe1cb908372281ed7385801"\n              ]\n            }\n          ]\n        }\n      ]\n    },\n    "encoding": "json"\n  },\n  "id": 1\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"platformgetblockchains",children:(0,t.jsx)(n.code,{children:"platform.getBlockchains"})}),"\n",(0,t.jsx)(n.admonition,{type:"caution",children:(0,t.jsxs)(n.p,{children:["Deprecated as of ",(0,t.jsx)(n.a,{href:"https://github.com/luxfi/luxd/releases/tag/v1.9.12",children:(0,t.jsx)(n.strong,{children:"v1.9.12"})}),"."]})}),"\n",(0,t.jsx)(n.p,{children:"Get all the blockchains that exist (excluding the P-Chain)."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"platform.getBlockchains() ->\n{\n    blockchains: []{\n        id: string,\n        name:string,\n        subnetID: string,\n        vmID: string\n    }\n}\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"blockchains"})," is all of the blockchains that exists on the Lux network."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"name"})," is the human-readable name of this blockchain."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"id"})," is the blockchain\u2019s ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"subnetID"})," is the ID of the Subnet that validates this blockchain."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"vmID"})," is the ID of the Virtual Machine the blockchain runs."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Call:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc": "2.0",\n    "method": "platform.getBlockchains",\n    "params": {},\n    "id": 1\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/P\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "blockchains": [\n      {\n        "id": "2oYMBNV4eNHyqk2fjjV5nVQLDbtmNJzq5s3qs3Lo6ftnC6FByM",\n        "name": "X-Chain",\n        "subnetID": "11111111111111111111111111111111LpoYY",\n        "vmID": "jvYyfQTxGMJLuGWa55kdP2p2zSUYsQ5Raupu4TW34ZAUBAbtq"\n      },\n      {\n        "id": "2q9e4r6Mu3U68nU1fYjgbR6JvwrRx36CohpAX5UQxse55x1Q5",\n        "name": "C-Chain",\n        "subnetID": "11111111111111111111111111111111LpoYY",\n        "vmID": "mgj786NP7uDwBCcq6YwThhaN8FLyybkCa4zBWTQbNgmK6k9A6"\n      },\n      {\n        "id": "CqhF97NNugqYLiGaQJ2xckfmkEr8uNeGG5TQbyGcgnZ5ahQwa",\n        "name": "Simple DAG Payments",\n        "subnetID": "11111111111111111111111111111111LpoYY",\n        "vmID": "sqjdyTKUSrQs1YmKDTUbdUhdstSdtRTGRbUn8sqK8B6pkZkz1"\n      },\n      {\n        "id": "VcqKNBJsYanhVFxGyQE5CyNVYxL3ZFD7cnKptKWeVikJKQkjv",\n        "name": "Simple Chain Payments",\n        "subnetID": "11111111111111111111111111111111LpoYY",\n        "vmID": "sqjchUjzDqDfBPGjfQq2tXW1UCwZTyvzAWHsNzF2cb1eVHt6w"\n      },\n      {\n        "id": "2SMYrx4Dj6QqCEA3WjnUTYEFSnpqVTwyV3GPNgQqQZbBbFgoJX",\n        "name": "Simple Timestamp Server",\n        "subnetID": "11111111111111111111111111111111LpoYY",\n        "vmID": "tGas3T58KzdjLHhBDMnH2TvrddhqTji5iZAMZ3RXs2NLpSnhH"\n      },\n      {\n        "id": "KDYHHKjM4yTJTT8H8qPs5KXzE6gQH5TZrmP1qVr1P6qECj3XN",\n        "name": "My new timestamp",\n        "subnetID": "2bRCr6B4MiEfSjidDwxDpdCyviwnfUVqB2HGwhm947w9YYqb7r",\n        "vmID": "tGas3T58KzdjLHhBDMnH2TvrddhqTji5iZAMZ3RXs2NLpSnhH"\n      },\n      {\n        "id": "2TtHFqEAAJ6b33dromYMqfgavGPF3iCpdG3hwNMiart2aB5QHi",\n        "name": "My new AVM",\n        "subnetID": "2bRCr6B4MiEfSjidDwxDpdCyviwnfUVqB2HGwhm947w9YYqb7r",\n        "vmID": "jvYyfQTxGMJLuGWa55kdP2p2zSUYsQ5Raupu4TW34ZAUBAbtq"\n      }\n    ]\n  },\n  "id": 1\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"platformgetblockchainstatus",children:(0,t.jsx)(n.code,{children:"platform.getBlockchainStatus"})}),"\n",(0,t.jsx)(n.p,{children:"Get the status of a blockchain."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"platform.getBlockchainStatus(\n    {\n        blockchainID: string\n    }\n) -> {status: string}\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"status"})," is one of:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Validating"}),": The blockchain is being validated by this node."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Created"}),": The blockchain exists but isn\u2019t being validated by this node."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Preferred"}),": The blockchain was proposed to be created and is likely to be created but the\ntransaction isn\u2019t yet accepted."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Syncing"}),": This node is participating in this blockchain as a non-validating node."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Unknown"}),": The blockchain either wasn\u2019t proposed or the proposal to create it isn\u2019t preferred. The\nproposal may be resubmitted."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Call:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc": "2.0",\n    "method": "platform.getBlockchainStatus",\n    "params":{\n        "blockchainID":"2NbS4dwGaf2p1MaXb65PrkZdXRwmSX4ZzGnUu7jm3aykgThuZE"\n    },\n    "id": 1\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/P\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "status": "Created"\n  },\n  "id": 1\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"platformgetcurrentsupply",children:(0,t.jsx)(n.code,{children:"platform.getCurrentSupply"})}),"\n",(0,t.jsx)(n.p,{children:"Returns an upper bound on amount of tokens that exist that can stake the requested Subnet. This is\nan upper bound because it does not account for burnt tokens, including transaction fees."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"platform.getCurrentSupply({\n    subnetID: string // optional\n}) -> {supply: int}\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"supply"})," is an upper bound on the number of tokens that exist."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Call:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc": "2.0",\n    "method": "platform.getCurrentSupply",\n    "params": {\n        "subnetID": "11111111111111111111111111111111LpoYY"\n    },\n    "id": 1\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/P\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "supply": "365865167637779183"\n  },\n  "id": 1\n}\n'})}),"\n",(0,t.jsx)(n.p,{children:"The response in this example indicates that LUX\u2019s supply is at most 365.865 million."}),"\n",(0,t.jsx)(n.h3,{id:"platformgetcurrentvalidators",children:(0,t.jsx)(n.code,{children:"platform.getCurrentValidators"})}),"\n",(0,t.jsx)(n.p,{children:"List the current validators of the given Subnet."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"platform.getCurrentValidators({\n    subnetID: string, // optional\n    nodeIDs: string[], // optional\n}) -> {\n    validators: []{\n        txID: string,\n        startTime: string,\n        endTime: string,\n        stakeAmount: string,\n        nodeID: string,\n        weight: string,\n        validationRewardOwner: {\n            locktime: string,\n            threshold: string,\n            addresses: string[]\n        },\n        delegationRewardOwner: {\n            locktime: string,\n            threshold: string,\n            addresses: string[]\n        },\n        potentialReward: string,\n        delegationFee: string,\n        uptime: string,\n        connected: bool,\n        signer: {\n            publicKey: string,\n            proofOfPosession: string\n        },\n        delegatorCount: string,\n        delegatorWeight: string,\n        delegators: []{\n            txID: string,\n            startTime: string,\n            endTime: string,\n            stakeAmount: string,\n            nodeID: string,\n            rewardOwner: {\n                locktime: string,\n                threshold: string,\n                addresses: string[]\n            },\n            potentialReward: string,\n        }\n    }\n}\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"subnetID"})," is the Subnet whose current validators are returned. If omitted, returns the current\nvalidators of the Primary Network."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"nodeIDs"})," is a list of the NodeIDs of current validators to request. If omitted, all current\nvalidators are returned. If a specified NodeID is not in the set of current validators, it will\nnot be included in the response."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"validators"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"txID"})," is the validator transaction."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"startTime"})," is the Unix time when the validator starts validating the Subnet."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"endTime"})," is the Unix time when the validator stops validating the Subnet."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"stakeAmount"})," is the amount of tokens this validator staked. Omitted if ",(0,t.jsx)(n.code,{children:"subnetID"})," is not a PoS\nSubnet."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"nodeID"})," is the validator\u2019s node ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"weight"})," is the validator\u2019s weight when sampling validators. Omitted if ",(0,t.jsx)(n.code,{children:"subnetID"})," is a PoS\nSubnet."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"validationRewardOwner"})," is an ",(0,t.jsx)(n.code,{children:"OutputOwners"})," output which includes ",(0,t.jsx)(n.code,{children:"locktime"}),", ",(0,t.jsx)(n.code,{children:"threshold"})," and\narray of ",(0,t.jsx)(n.code,{children:"addresses"}),". Specifies the owner of the potential reward earned from staking. Omitted\nif ",(0,t.jsx)(n.code,{children:"subnetID"})," is not a PoS Subnet."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"delegationRewardOwner"})," is an ",(0,t.jsx)(n.code,{children:"OutputOwners"})," output which includes ",(0,t.jsx)(n.code,{children:"locktime"}),", ",(0,t.jsx)(n.code,{children:"threshold"})," and\narray of ",(0,t.jsx)(n.code,{children:"addresses"}),". Specifies the owner of the potential reward earned from delegations.\nOmitted if ",(0,t.jsx)(n.code,{children:"subnetID"})," is not a PoS Subnet."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"potentialReward"})," is the potential reward earned from staking. Omitted if ",(0,t.jsx)(n.code,{children:"subnetID"})," is not a\nPoS Subnet."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"delegationFeeRate"})," is the percent fee this validator charges when others delegate stake to\nthem. Omitted if ",(0,t.jsx)(n.code,{children:"subnetID"})," is not a PoS Subnet."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"uptime"})," is the % of time the queried node has reported the peer as online and validating the\nSubnet. Omitted if ",(0,t.jsx)(n.code,{children:"subnetID"})," is not a PoS Subnet."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"connected"})," is if the node is connected and tracks the Subnet."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"signer"})," is the node's BLS public key and proof of possession. Omitted if the validator doesn't\nhave a BLS public key."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"delegatorCount"})," is the number of delegators on this validator.\nOmitted if ",(0,t.jsx)(n.code,{children:"subnetID"})," is not a PoS Subnet."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"delegatorWeight"})," is total weight of delegators on this validator.\nOmitted if ",(0,t.jsx)(n.code,{children:"subnetID"})," is not a PoS Subnet."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"delegators"})," is the list of delegators to this validator.\nOmitted if ",(0,t.jsx)(n.code,{children:"subnetID"})," is not a PoS Subnet.\nOmitted unless ",(0,t.jsx)(n.code,{children:"nodeIDs"})," specifies a single NodeID.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"txID"})," is the delegator transaction."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"startTime"})," is the Unix time when the delegator started."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"endTime"})," is the Unix time when the delegator stops."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"stakeAmount"})," is the amount of nLUX this delegator staked."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"nodeID"})," is the validating node\u2019s node ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"rewardOwner"})," is an ",(0,t.jsx)(n.code,{children:"OutputOwners"})," output which includes ",(0,t.jsx)(n.code,{children:"locktime"}),", ",(0,t.jsx)(n.code,{children:"threshold"})," and array of\n",(0,t.jsx)(n.code,{children:"addresses"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"potentialReward"})," is the potential reward earned from staking"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Call:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc": "2.0",\n    "method": "platform.getCurrentValidators",\n    "params": {\n      "nodeIDs": ["NodeID-5mb46qkSBj81k9g9e4VFjGGSbaaSLFRzD"]\n    },\n    "id": 1\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/P\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "validators": [\n      {\n        "txID": "2NNkpYTGfTFLSGXJcHtVv6drwVU2cczhmjK2uhvwDyxwsjzZMm",\n        "startTime": "1600368632",\n        "endTime": "1602960455",\n        "stakeAmount": "2000000000000",\n        "nodeID": "NodeID-5mb46qkSBj81k9g9e4VFjGGSbaaSLFRzD",\n        "validationRewardOwner": {\n          "locktime": "0",\n          "threshold": "1",\n          "addresses": ["P-lux18jma8ppw3nhx5r4ap8clazz0dps7rv5ukulre5"]\n        },\n        "delegationRewardOwner": {\n          "locktime": "0",\n          "threshold": "1",\n          "addresses": ["P-lux18jma8ppw3nhx5r4ap8clazz0dps7rv5ukulre5"]\n        },\n        "potentialReward": "117431493426",\n        "delegationFee": "10.0000",\n        "uptime": "0.0000",\n        "connected": false,\n        "delegatorCount": "1",\n        "delegatorWeight": "25000000000",\n        "delegators": [\n          {\n            "txID": "Bbai8nzGVcyn2VmeYcbS74zfjJLjDacGNVuzuvAQkHn1uWfoV",\n            "startTime": "1600368523",\n            "endTime": "1602960342",\n            "stakeAmount": "25000000000",\n            "nodeID": "NodeID-5mb46qkSBj81k9g9e4VFjGGSbaaSLFRzD",\n            "rewardOwner": {\n              "locktime": "0",\n              "threshold": "1",\n              "addresses": ["P-lux18jma8ppw3nhx5r4ap8clazz0dps7rv5ukulre5"]\n            },\n            "potentialReward": "11743144774"\n          }\n        ]\n      }\n    ]\n  },\n  "id": 1\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"platformgetheight",children:(0,t.jsx)(n.code,{children:"platform.getHeight"})}),"\n",(0,t.jsx)(n.p,{children:"Returns the height of the last accepted block."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"platform.getHeight() ->\n{\n    height: int,\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Call:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc": "2.0",\n    "method": "platform.getHeight",\n    "params": {},\n    "id": 1\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/P\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "height": "56"\n  },\n  "id": 1\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"platformgetmaxstakeamount",children:(0,t.jsx)(n.code,{children:"platform.getMaxStakeAmount"})}),"\n",(0,t.jsx)(n.admonition,{type:"caution",children:(0,t.jsxs)(n.p,{children:["Deprecated as of ",(0,t.jsx)(n.a,{href:"https://github.com/luxfi/luxd/releases/tag/v1.9.12",children:(0,t.jsx)(n.strong,{children:"v1.9.12"})}),"."]})}),"\n",(0,t.jsx)(n.p,{children:"Returns the maximum amount of nLUX staking to the named node during a particular time period."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"platform.getMaxStakeAmount(\n    {\n        subnetID: string,\n        nodeID: string,\n        startTime: int,\n        endTime: int\n    }\n) ->\n{\n    amount: uint64\n}\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"subnetID"})," is a Buffer or cb58 string representing Subnet"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"nodeID"})," is a string representing ID of the node whose stake amount is required during the given\nduration"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"startTime"})," is a big number denoting start time of the duration during which stake amount of the\nnode is required."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"endTime"})," is a big number denoting end time of the duration during which stake amount of the node\nis required."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Call:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc": "2.0",\n    "method": "platform.getMaxStakeAmount",\n    "params": {\n        "subnetID":"11111111111111111111111111111111LpoYY",\n        "nodeID":"NodeID-7Xhw2mDxuDS44j42TCB6U5579esbSt3Lg",\n        "startTime": 1644240334,\n        "endTime": 1644240634\n    },\n    "id": 1\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/P\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "amount": "2000000000000000"\n  },\n  "id": 1\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"platformgetminstake",children:(0,t.jsx)(n.code,{children:"platform.getMinStake"})}),"\n",(0,t.jsx)(n.p,{children:"Get the minimum amount of tokens required to validate the requested Subnet and the minimum amount of\ntokens that can be delegated."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"platform.getMinStake({\n    subnetID: string // optional\n}) ->\n{\n    minValidatorStake : uint64,\n    minDelegatorStake : uint64\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Call:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc":"2.0",\n    "id"     :1,\n    "method" :"platform.getMinStake",\n    "params": {\n        "subnetID":"11111111111111111111111111111111LpoYY"\n    },\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/P\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "minValidatorStake": "2000000000000",\n    "minDelegatorStake": "25000000000"\n  },\n  "id": 1\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"platformgetpendingvalidators",children:(0,t.jsx)(n.code,{children:"platform.getPendingValidators"})}),"\n",(0,t.jsx)(n.p,{children:"List the validators in the pending validator set of the specified Subnet. Each validator is not\ncurrently validating the Subnet but will in the future."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"platform.getPendingValidators({\n    subnetID: string, // optional\n    nodeIDs: string[], // optional\n}) -> {\n    validators: []{\n        txID: string,\n        startTime: string,\n        endTime: string,\n        stakeAmount: string,\n        nodeID: string,\n        delegationFee: string,\n        connected: bool,\n        signer: {\n            publicKey: string,\n            proofOfPosession: string\n        },\n        weight: string,\n    },\n    delegators: []{\n        txID: string,\n        startTime: string,\n        endTime: string,\n        stakeAmount: string,\n        nodeID: string\n    }\n}\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"subnetID"})," is the Subnet whose current validators are returned. If omitted, returns the current\nvalidators of the Primary Network."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"nodeIDs"})," is a list of the NodeIDs of pending validators to request. If omitted, all pending\nvalidators are returned. If a specified NodeID is not in the set of pending validators, it will\nnot be included in the response."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"validators"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"txID"})," is the validator transaction."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"startTime"})," is the Unix time when the validator starts validating the Subnet."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"endTime"})," is the Unix time when the validator stops validating the Subnet."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"stakeAmount"})," is the amount of tokens this validator staked. Omitted if ",(0,t.jsx)(n.code,{children:"subnetID"})," is not a PoS\nSubnet."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"nodeID"})," is the validator\u2019s node ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"connected"})," if the node is connected and tracks the Subnet."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"signer"})," is the node's BLS public key and proof of possession. Omitted if the validator doesn't\nhave a BLS public key."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"weight"})," is the validator\u2019s weight when sampling validators. Omitted if ",(0,t.jsx)(n.code,{children:"subnetID"})," is a PoS\nSubnet."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"delegators"}),":","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"txID"})," is the delegator transaction."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"startTime"})," is the Unix time when the delegator starts."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"endTime"})," is the Unix time when the delegator stops."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"stakeAmount"})," is the amount of tokens this delegator staked."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"nodeID"})," is the validating node\u2019s node ID."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Call:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc": "2.0",\n    "method": "platform.getPendingValidators",\n    "params": {},\n    "id": 1\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/P\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "validators": [\n      {\n        "txID": "2NNkpYTGfTFLSGXJcHtVv6drwVU2cczhmjK2uhvwDyxwsjzZMm",\n        "startTime": "1600368632",\n        "endTime": "1602960455",\n        "stakeAmount": "200000000000",\n        "nodeID": "NodeID-5mb46qkSBj81k9g9e4VFjGGSbaaSLFRzD",\n        "delegationFee": "10.0000",\n        "connected": false\n      }\n    ],\n    "delegators": [\n      {\n        "txID": "Bbai8nzGVcyn2VmeYcbS74zfjJLjDacGNVuzuvAQkHn1uWfoV",\n        "startTime": "1600368523",\n        "endTime": "1602960342",\n        "stakeAmount": "20000000000",\n        "nodeID": "NodeID-7Xhw2mDxuDS44j42TCB6U5579esbSt3Lg"\n      }\n    ]\n  },\n  "id": 1\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"platformgetrewardutxos",children:(0,t.jsx)(n.code,{children:"platform.getRewardUTXOs"})}),"\n",(0,t.jsx)(n.admonition,{type:"caution",children:(0,t.jsxs)(n.p,{children:["Deprecated as of ",(0,t.jsx)(n.a,{href:"https://github.com/luxfi/luxd/releases/tag/v1.9.12",children:(0,t.jsx)(n.strong,{children:"v1.9.12"})}),"."]})}),"\n",(0,t.jsx)(n.p,{children:"Returns the UTXOs that were rewarded after the provided transaction's staking or delegation period\nended."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"platform.getRewardUTXOs({\n    txID: string,\n    encoding: string // optional\n}) -> {\n    numFetched: integer,\n    utxos: []string,\n    encoding: string\n}\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"txID"})," is the ID of the staking or delegating transaction"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"numFetched"})," is the number of returned UTXOs"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"utxos"})," is an array of encoded reward UTXOs"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"encoding"})," specifies the format for the returned UTXOs. Can only be ",(0,t.jsx)(n.code,{children:"hex"})," when a value is\nprovided."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Call:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc": "2.0",\n    "method": "platform.getRewardUTXOs",\n    "params": {\n        "txID": "2nmH8LithVbdjaXsxVQCQfXtzN9hBbmebrsaEYnLM9T32Uy2Y5"\n    },\n    "id": 1\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/P\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "numFetched": "2",\n    "utxos": [\n      "0x0000a195046108a85e60f7a864bb567745a37f50c6af282103e47cc62f036cee404700000000345aa98e8a990f4101e2268fab4c4e1f731c8dfbcffa3a77978686e6390d624f000000070000000000000001000000000000000000000001000000018ba98dabaebcd83056799841cfbc567d8b10f216c1f01765",\n      "0x0000ae8b1b94444eed8de9a81b1222f00f1b4133330add23d8ac288bffa98b85271100000000345aa98e8a990f4101e2268fab4c4e1f731c8dfbcffa3a77978686e6390d624f000000070000000000000001000000000000000000000001000000018ba98dabaebcd83056799841cfbc567d8b10f216473d042a"\n    ],\n    "encoding": "hex"\n  },\n  "id": 1\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"platformgetstake",children:(0,t.jsx)(n.code,{children:"platform.getStake"})}),"\n",(0,t.jsx)(n.admonition,{type:"caution",children:(0,t.jsxs)(n.p,{children:["Deprecated as of ",(0,t.jsx)(n.a,{href:"https://github.com/luxfi/luxd/releases/tag/v1.9.12",children:(0,t.jsx)(n.strong,{children:"v1.9.12"})}),"."]})}),"\n",(0,t.jsx)(n.p,{children:"Get the amount of nLUX staked by a set of addresses. The amount returned does not include staking\nrewards."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"platform.getStake({\n    addresses: []string,\n    validatorsOnly: true or false\n}) ->\n{\n    stakeds: string -> int,\n    stakedOutputs:  []string,\n    encoding: string\n}\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"addresses"})," are the addresses to get information about."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"validatorsOnly"}),"  can be either ",(0,t.jsx)(n.code,{children:"true"})," or ",(0,t.jsx)(n.code,{children:"false"}),". If ",(0,t.jsx)(n.code,{children:"true"}),", will skip checking delegators for stake."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"stakeds"})," is a map from assetID to the amount staked by addresses provided."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"stakedOutputs"})," are the string representation of staked outputs."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"encoding"})," specifies the format for the returned outputs."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Call:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc": "2.0",\n    "method": "platform.getStake",\n    "params": {\n        "addresses": [\n            "P-lux1pmgmagjcljjzuz2ve339dx82khm7q8getlegte"\n          ],\n        "validatorsOnly": true\n    },\n    "id": 1\n}\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/P\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "staked": "6500000000000",\n    "stakeds": {\n      "FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z": "6500000000000"\n    },\n    "stakedOutputs": [\n      "0x000021e67317cbc4be2aeb00677ad6462778a8f52274b9d605df2591b23027a87dff00000007000005e96630e800000000000000000000000001000000011f1c933f38da6ba0ba46f8c1b0a7040a9a991a80dd338ed1"\n    ],\n    "encoding": "hex"\n  },\n  "id": 1\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"platformgetstakingassetid",children:(0,t.jsx)(n.code,{children:"platform.getStakingAssetID"})}),"\n",(0,t.jsx)(n.p,{children:"Retrieve an assetID for a Subnet\u2019s staking asset."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"platform.getStakingAssetID({\n    subnetID: string // optional\n}) -> {\n    assetID: string\n}\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"subnetID"})," is the Subnet whose assetID is requested."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"assetID"})," is the assetID for a Subnet\u2019s staking asset."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Call:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc": "2.0",\n    "method": "platform.getStakingAssetID",\n    "params": {\n        "subnetID": "11111111111111111111111111111111LpoYY"\n    },\n    "id": 1\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/P\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "assetID": "2fombhL7aGPwj3KH4bfrmJwW6PVnMobf9Y2fn9GwxiAAJyFDbe"\n  },\n  "id": 1\n}\n'})}),"\n",(0,t.jsxs)(n.admonition,{type:"note",children:[(0,t.jsx)(n.p,{children:"The AssetID for LUX differs depending on the network you are on."}),(0,t.jsx)(n.p,{children:"Mainnet: FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z"}),(0,t.jsx)(n.p,{children:"Testnet: U8iRqJoiJm8xZHAacmvYyZVwqQx6uDNtQeP3CQ6fcgQk3JqnK"})]}),"\n",(0,t.jsx)(n.h3,{id:"platformgetsubnets",children:(0,t.jsx)(n.code,{children:"platform.getSubnets"})}),"\n",(0,t.jsx)(n.admonition,{type:"caution",children:(0,t.jsxs)(n.p,{children:["Deprecated as of ",(0,t.jsx)(n.a,{href:"https://github.com/luxfi/luxd/releases/tag/v1.9.12",children:(0,t.jsx)(n.strong,{children:"v1.9.12"})}),"."]})}),"\n",(0,t.jsx)(n.p,{children:"Get info about the Subnets."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"platform.getSubnets({\n    ids: []string\n}) ->\n{\n    subnets: []{\n        id: string,\n        controlKeys: []string,\n        threshold: string\n    }\n}\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"ids"})," are the IDs of the Subnets to get information about. If omitted, gets information about all\nSubnets."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"id"})," is the Subnet\u2019s ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"threshold"})," signatures from addresses in ",(0,t.jsx)(n.code,{children:"controlKeys"})," are needed to add a validator to the\nSubnet. If the Subnet is a PoS Subnet, then ",(0,t.jsx)(n.code,{children:"threshold"})," will be ",(0,t.jsx)(n.code,{children:"0"})," and ",(0,t.jsx)(n.code,{children:"controlKeys"})," will be\nempty."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["See ",(0,t.jsx)(n.a,{href:"/docs/nodes/validate/add-a-validator",children:"here"})," for information on adding a validator to a\nSubnet."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Call:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc": "2.0",\n    "method": "platform.getSubnets",\n    "params": {"ids":["hW8Ma7dLMA7o4xmJf3AXBbo17bXzE7xnThUd3ypM4VAWo1sNJ"]},\n    "id": 1\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/P\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "subnets": [\n      {\n        "id": "hW8Ma7dLMA7o4xmJf3AXBbo17bXzE7xnThUd3ypM4VAWo1sNJ",\n        "controlKeys": [\n          "KNjXsaA1sZsaKCD1cd85YXauDuxshTes2",\n          "Aiz4eEt5xv9t4NCnAWaQJFNz5ABqLtJkR"\n        ],\n        "threshold": "2"\n      }\n    ]\n  },\n  "id": 1\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"platformgettimestamp",children:(0,t.jsx)(n.code,{children:"platform.getTimestamp"})}),"\n",(0,t.jsx)(n.p,{children:"Get the current P-Chain timestamp."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"platform.getTimestamp() -> {time: string}\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Call:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc": "2.0",\n    "method": "platform.getTimestamp",\n    "params": {},\n    "id": 1\n}\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/P\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "timestamp": "2021-09-07T00:00:00-04:00"\n  },\n  "id": 1\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"platformgettotalstake",children:(0,t.jsx)(n.code,{children:"platform.getTotalStake"})}),"\n",(0,t.jsx)(n.p,{children:"Get the total amount of tokens staked on the requested Subnet."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"platform.getTotalStake({\n    subnetID: string\n}) -> {\n    stake: int\n    weight: int\n}\n"})}),"\n",(0,t.jsx)(n.h4,{id:"primary-network-example",children:"Primary Network Example"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Call:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc": "2.0",\n    "method": "platform.getTotalStake",\n    "params": {\n      "subnetID": "11111111111111111111111111111111LpoYY"\n    },\n    "id": 1\n}\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/P\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "stake": "279825917679866811",\n    "weight": "279825917679866811"\n  },\n  "id": 1\n}\n'})}),"\n",(0,t.jsx)(n.h4,{id:"subnet-example",children:"Subnet Example"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Call:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc": "2.0",\n    "method": "platform.getTotalStake",\n    "params": {\n        "subnetID": "2bRCr6B4MiEfSjidDwxDpdCyviwnfUVqB2HGwhm947w9YYqb7r",\n    },\n    "id": 1\n}\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/P\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "weight": "100000"\n  },\n  "id": 1\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"platformgettx",children:(0,t.jsx)(n.code,{children:"platform.getTx"})}),"\n",(0,t.jsx)(n.p,{children:"Gets a transaction by its ID."}),"\n",(0,t.jsxs)(n.p,{children:["Optional ",(0,t.jsx)(n.code,{children:"encoding"})," parameter to specify the format for the returned transaction. Can be either\n",(0,t.jsx)(n.code,{children:"hex"})," or ",(0,t.jsx)(n.code,{children:"json"}),". Defaults to ",(0,t.jsx)(n.code,{children:"hex"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"platform.getTx({\n    txID: string,\n    encoding: string // optional\n}) -> {\n    tx: string,\n    encoding: string,\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Call:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc": "2.0",\n    "method": "platform.getTx",\n    "params": {\n        "txID":"28KVjSw5h3XKGuNpJXWY74EdnGq4TUWvCgEtJPymgQTvudiugb",\n        "encoding": "json"\n    },\n    "id": 1\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/P\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "tx": {\n      "unsignedTx": {\n        "networkID": 1,\n        "blockchainID": "11111111111111111111111111111111LpoYY",\n        "outputs": [],\n        "inputs": [\n          {\n            "txID": "NXNJHKeaJyjjWVSq341t6LGQP5UNz796o1crpHPByv1TKp9ZP",\n            "outputIndex": 0,\n            "assetID": "FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z",\n            "fxID": "spdxUxVJQbX85MGxMHbKw1sHxMnSqJ3QBzDyDYEP3h6TLuxqQ",\n            "input": {\n              "amount": 20824279595,\n              "signatureIndices": [\n                0\n              ]\n            }\n          },\n          {\n            "txID": "2ahK5SzD8iqi5KBqpKfxrnWtrEoVwQCqJsMoB9kvChCaHgAQC9",\n            "outputIndex": 1,\n            "assetID": "FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z",\n            "fxID": "spdxUxVJQbX85MGxMHbKw1sHxMnSqJ3QBzDyDYEP3h6TLuxqQ",\n            "input": {\n              "amount": 28119890783,\n              "signatureIndices": [\n                0\n              ]\n            }\n          }\n        ],\n        "memo": "0x",\n        "validator": {\n          "nodeID": "NodeID-VT3YhgFaWEzy4Ap937qMeNEDscCammzG",\n          "start": 1682945406,\n          "end": 1684155006,\n          "weight": 48944170378\n        },\n        "stake": [\n          {\n            "assetID": "FvwEAhmxKfeiG8SnEvq42hc6whRyY3EFYAvebMqDNDGCgxN5Z",\n            "fxID": "spdxUxVJQbX85MGxMHbKw1sHxMnSqJ3QBzDyDYEP3h6TLuxqQ",\n            "output": {\n              "addresses": [\n                "P-lux1tnuesf6cqwnjw7fxjyk7lhch0vhf0v95wj5jvy"\n              ],\n              "amount": 48944170378,\n              "locktime": 0,\n              "threshold": 1\n            }\n          }\n        ],\n        "rewardsOwner": {\n          "addresses": [\n            "P-lux19zfygxaf59stehzedhxjesads0p5jdvfeedal0"\n          ],\n          "locktime": 0,\n          "threshold": 1\n        }\n      },\n      "credentials": [\n        {\n          "signatures": [\n            "0x6954e90b98437646fde0c1d54c12190fc23ae5e319c4d95dda56b53b4a23e43825251289cdc3728f1f1e0d48eac20e5c8f097baa9b49ea8a3cb6a41bb272d16601"\n          ]\n        },\n        {\n          "signatures": [\n            "0x6954e90b98437646fde0c1d54c12190fc23ae5e319c4d95dda56b53b4a23e43825251289cdc3728f1f1e0d48eac20e5c8f097baa9b49ea8a3cb6a41bb272d16601"\n          ]\n        }\n      ],\n      "id": "28KVjSw5h3XKGuNpJXWY74EdnGq4TUWvCgEtJPymgQTvudiugb"\n    },\n    "encoding": "json"\n  },\n  "id": 1\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"platformgettxstatus",children:(0,t.jsx)(n.code,{children:"platform.getTxStatus"})}),"\n",(0,t.jsxs)(n.p,{children:["Gets a transaction\u2019s status by its ID. If the transaction was dropped, response will include a\n",(0,t.jsx)(n.code,{children:"reason"})," field with more information why the transaction was dropped."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"platform.getTxStatus({\n    txID: string\n}) -> {status: string}\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"status"})," is one of:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Committed"}),": The transaction is (or will be) accepted by every node"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Processing"}),": The transaction is being voted on by this node"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Dropped"}),": The transaction will never be accepted by any node in the network, check ",(0,t.jsx)(n.code,{children:"reason"})," field\nfor more information"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"Unknown"}),": The transaction hasn\u2019t been seen by this node"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Call:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc": "2.0",\n    "method": "platform.getTxStatus",\n    "params": {\n        "txID":"TAG9Ns1sa723mZy1GSoGqWipK6Mvpaj7CAswVJGM6MkVJDF9Q"\n   },\n    "id": 1\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/P\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "status": "Committed"\n  },\n  "id": 1\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"platformgetutxos",children:(0,t.jsx)(n.code,{children:"platform.getUTXOs"})}),"\n",(0,t.jsx)(n.p,{children:"Gets the UTXOs that reference a given set of addresses."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"platform.getUTXOs(\n    {\n        addresses: []string,\n        limit: int, // optional\n        startIndex: { // optional\n            address: string,\n            utxo: string\n        },\n        sourceChain: string, // optional\n        encoding: string, // optional\n    },\n) ->\n{\n    numFetched: int,\n    utxos: []string,\n    endIndex: {\n        address: string,\n        utxo: string\n    },\n    encoding: string,\n}\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"utxos"})," is a list of UTXOs such that each UTXO references at least one address in ",(0,t.jsx)(n.code,{children:"addresses"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["At most ",(0,t.jsx)(n.code,{children:"limit"})," UTXOs are returned. If ",(0,t.jsx)(n.code,{children:"limit"})," is omitted or greater than 1024, it is set to 1024."]}),"\n",(0,t.jsxs)(n.li,{children:["This method supports pagination. ",(0,t.jsx)(n.code,{children:"endIndex"})," denotes the last UTXO returned. To get the next set of\nUTXOs, use the value of ",(0,t.jsx)(n.code,{children:"endIndex"})," as ",(0,t.jsx)(n.code,{children:"startIndex"})," in the next call."]}),"\n",(0,t.jsxs)(n.li,{children:["If ",(0,t.jsx)(n.code,{children:"startIndex"})," is omitted, will fetch all UTXOs up to ",(0,t.jsx)(n.code,{children:"limit"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["When using pagination (that is when ",(0,t.jsx)(n.code,{children:"startIndex"})," is provided), UTXOs are not guaranteed to be unique\nacross multiple calls. That is, a UTXO may appear in the result of the first call, and then again\nin the second call."]}),"\n",(0,t.jsx)(n.li,{children:"When using pagination, consistency is not guaranteed across multiple calls. That is, the UTXO set\nof the addresses may have changed between calls."}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"encoding"})," specifies the format for the returned UTXOs. Can only be ",(0,t.jsx)(n.code,{children:"hex"})," when a value is\nprovided."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"example",children:(0,t.jsx)(n.strong,{children:"Example"})}),"\n",(0,t.jsxs)(n.p,{children:["Suppose we want all UTXOs that reference at least one of\n",(0,t.jsx)(n.code,{children:"P-lux18jma8ppw3nhx5r4ap8clazz0dps7rv5ukulre5"})," and ",(0,t.jsx)(n.code,{children:"P-lux1d09qn852zcy03sfc9hay2llmn9hsgnw4tp3dv6"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc":"2.0",\n    "id"     :1,\n    "method" :"platform.getUTXOs",\n    "params" :{\n        "addresses":["P-lux18jma8ppw3nhx5r4ap8clazz0dps7rv5ukulre5", "P-lux1d09qn852zcy03sfc9hay2llmn9hsgnw4tp3dv6"],\n        "limit":5,\n        "encoding": "hex"\n    }\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/P\n'})}),"\n",(0,t.jsx)(n.p,{children:"This gives response:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "numFetched": "5",\n    "utxos": [\n      "0x0000a195046108a85e60f7a864bb567745a37f50c6af282103e47cc62f036cee404700000000345aa98e8a990f4101e2268fab4c4e1f731c8dfbcffa3a77978686e6390d624f000000070000000000000001000000000000000000000001000000018ba98dabaebcd83056799841cfbc567d8b10f216c1f01765",\n      "0x0000ae8b1b94444eed8de9a81b1222f00f1b4133330add23d8ac288bffa98b85271100000000345aa98e8a990f4101e2268fab4c4e1f731c8dfbcffa3a77978686e6390d624f000000070000000000000001000000000000000000000001000000018ba98dabaebcd83056799841cfbc567d8b10f216473d042a",\n      "0x0000731ce04b1feefa9f4291d869adc30a33463f315491e164d89be7d6d2d7890cfc00000000345aa98e8a990f4101e2268fab4c4e1f731c8dfbcffa3a77978686e6390d624f000000070000000000000001000000000000000000000001000000018ba98dabaebcd83056799841cfbc567d8b10f21600dd3047",\n      "0x0000b462030cc4734f24c0bc224cf0d16ee452ea6b67615517caffead123ab4fbf1500000000345aa98e8a990f4101e2268fab4c4e1f731c8dfbcffa3a77978686e6390d624f000000070000000000000001000000000000000000000001000000018ba98dabaebcd83056799841cfbc567d8b10f216c71b387e",\n      "0x000054f6826c39bc957c0c6d44b70f961a994898999179cc32d21eb09c1908d7167b00000000345aa98e8a990f4101e2268fab4c4e1f731c8dfbcffa3a77978686e6390d624f000000070000000000000001000000000000000000000001000000018ba98dabaebcd83056799841cfbc567d8b10f2166290e79d"\n    ],\n    "endIndex": {\n      "address": "P-lux18jma8ppw3nhx5r4ap8clazz0dps7rv5ukulre5",\n      "utxo": "kbUThAUfmBXUmRgTpgD6r3nLj7rJUGho6xyht5nouNNypH45j"\n    },\n    "encoding": "hex"\n  },\n  "id": 1\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Since ",(0,t.jsx)(n.code,{children:"numFetched"})," is the same as ",(0,t.jsx)(n.code,{children:"limit"}),", we can tell that there may be more UTXOs that were not\nfetched. We call the method again, this time with ",(0,t.jsx)(n.code,{children:"startIndex"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc":"2.0",\n    "id"     :1,\n    "method" :"platform.getUTXOs",\n    "params" :{\n        "addresses":["P-lux18jma8ppw3nhx5r4ap8clazz0dps7rv5ukulre5"],\n        "limit":5,\n        "startIndex": {\n            "address": "P-lux18jma8ppw3nhx5r4ap8clazz0dps7rv5ukulre5",\n            "utxo": "0x62fc816bb209857923770c286192ab1f9e3f11e4a7d4ba0943111c3bbfeb9e4a5ea72fae"\n        },\n        "encoding": "hex"\n    }\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/P\n'})}),"\n",(0,t.jsx)(n.p,{children:"This gives response:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "numFetched": "4",\n    "utxos": [\n      "0x000020e182dd51ee4dcd31909fddd75bb3438d9431f8e4efce86a88a684f5c7fa09300000000345aa98e8a990f4101e2268fab4c4e1f731c8dfbcffa3a77978686e6390d624f000000070000000000000001000000000000000000000001000000018ba98dabaebcd83056799841cfbc567d8b10f21662861d59",\n      "0x0000a71ba36c475c18eb65dc90f6e85c4fd4a462d51c5de3ac2cbddf47db4d99284e00000000345aa98e8a990f4101e2268fab4c4e1f731c8dfbcffa3a77978686e6390d624f000000070000000000000001000000000000000000000001000000018ba98dabaebcd83056799841cfbc567d8b10f21665f6f83f",\n      "0x0000925424f61cb13e0fbdecc66e1270de68de9667b85baa3fdc84741d048daa69fa00000000345aa98e8a990f4101e2268fab4c4e1f731c8dfbcffa3a77978686e6390d624f000000070000000000000001000000000000000000000001000000018ba98dabaebcd83056799841cfbc567d8b10f216afecf76a",\n      "0x000082f30327514f819da6009fad92b5dba24d27db01e29ad7541aa8e6b6b554615c00000000345aa98e8a990f4101e2268fab4c4e1f731c8dfbcffa3a77978686e6390d624f000000070000000000000001000000000000000000000001000000018ba98dabaebcd83056799841cfbc567d8b10f216779c2d59"\n    ],\n    "endIndex": {\n      "address": "P-lux18jma8ppw3nhx5r4ap8clazz0dps7rv5ukulre5",\n      "utxo": "21jG2RfqyHUUgkTLe2tUp6ETGLriSDTW3th8JXFbPRNiSZ11jK"\n    },\n    "encoding": "hex"\n  },\n  "id": 1\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["Since ",(0,t.jsx)(n.code,{children:"numFetched"})," is less than ",(0,t.jsx)(n.code,{children:"limit"}),", we know that we are done fetching UTXOs and don\u2019t need to\ncall this method again."]}),"\n",(0,t.jsxs)(n.p,{children:["Suppose we want to fetch the UTXOs exported from the X Chain to the P Chain in order to build an\nImportTx. Then we need to call GetUTXOs with the ",(0,t.jsx)(n.code,{children:"sourceChain"})," argument in order to retrieve the\natomic UTXOs:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc":"2.0",\n    "id"     :1,\n    "method" :"platform.getUTXOs",\n    "params" :{\n        "addresses":["P-lux18jma8ppw3nhx5r4ap8clazz0dps7rv5ukulre5"],\n        "sourceChain": "X",\n        "encoding": "hex"\n    }\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/P\n'})}),"\n",(0,t.jsx)(n.p,{children:"This gives response:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "numFetched": "1",\n    "utxos": [\n      "0x00001f989ffaf18a18a59bdfbf209342aa61c6a62a67e8639d02bb3c8ddab315c6fa0000000139c33a499ce4c33a3b09cdd2cfa01ae70dbf2d18b2d7d168524440e55d55008800000007000000746a528800000000000000000000000001000000013cb7d3842e8cee6a0ebd09f1fe884f6861e1b29cd704fe76"\n    ],\n    "endIndex": {\n      "address": "P-lux18jma8ppw3nhx5r4ap8clazz0dps7rv5ukulre5",\n      "utxo": "S5UKgWoVpoGFyxfisebmmRf8WqC7ZwcmYwS7XaDVZqoaFcCwK"\n    },\n    "encoding": "hex"\n  },\n  "id": 1\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"platformgetvalidatorsat",children:(0,t.jsx)(n.code,{children:"platform.getValidatorsAt"})}),"\n",(0,t.jsx)(n.p,{children:"Get the validators and their weights of a Subnet or the Primary Network at a given P-Chain height."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"platform.getValidatorsAt(\n    {\n        height: int,\n        subnetID: string, // optional\n    }\n)\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"height"})," is the P-Chain height to get the validator set at."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"subnetID"})," is the Subnet ID to get the validator set of. If not given, gets validator set of the\nPrimary Network."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Call:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'curl -X POST --data \'{\n    "jsonrpc": "2.0",\n    "method": "platform.getValidatorsAt",\n    "params": {\n        "height":1\n    },\n    "id": 1\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/P\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "validators": {\n      "NodeID-7Xhw2mDxuDS44j42TCB6U5579esbSt3Lg": 2000000000000000,\n      "NodeID-GWPcbFJZFfZreETSoWjPimr846mXEKCtu": 2000000000000000,\n      "NodeID-MFrZFVCXPv5iCn6M9K6XduxGTYp891xXZ": 2000000000000000,\n      "NodeID-NFBbbJ4qCmNaCzeW7sxErhvWqvEQMnYcN": 2000000000000000,\n      "NodeID-P7oB2McjBGgW2NXXWVYjV8JEDFoW9xDE5": 2000000000000000\n    }\n  },\n  "id": 1\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"platformimportlux",children:(0,t.jsx)(n.code,{children:"platform.importLUX"})}),"\n",(0,t.jsx)(n.admonition,{type:"caution",children:(0,t.jsxs)(n.p,{children:["Deprecated as of ",(0,t.jsx)(n.a,{href:"https://github.com/luxfi/luxd/releases/tag/v1.9.12",children:(0,t.jsx)(n.strong,{children:"v1.9.12"})}),"."]})}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["Not recommended for use on Mainnet. See warning notice in ",(0,t.jsx)(n.a,{href:"/docs/reference/luxd/keystore-api",children:"Keystore API"}),"."]})}),"\n",(0,t.jsx)(n.p,{children:"Complete a transfer of LUX from the X-Chain, or C-Chain to the P-Chain."}),"\n",(0,t.jsxs)(n.p,{children:["Before this method is called, you must call the X-Chain\u2019s ",(0,t.jsx)(n.a,{href:"/docs/reference/luxd/x-chain/api#avmexport",children:(0,t.jsx)(n.code,{children:"avm.export"})}),"\nor C-Chain\u2019s ",(0,t.jsx)(n.a,{href:"/docs/reference/luxd/c-chain/api#luxexport",children:(0,t.jsx)(n.code,{children:"lux.export"})})," method with assetID ",(0,t.jsx)(n.code,{children:"LUX"}),"\nto initiate the transfer."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"platform.importLUX(\n    {\n        to: string,\n        sourceChain: string,\n        from: []string, // optional\n        changeAddr: string, // optional\n        username: string,\n        password: string\n    }\n) ->\n{\n    tx: string,\n    changeAddr: string\n}\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"to"})," is the ID of the address the LUX is imported to. This must be the same as the ",(0,t.jsx)(n.code,{children:"to"})," argument\nin the corresponding call to the X-Chain\u2019s or C-Chain's ",(0,t.jsx)(n.code,{children:"export"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"sourceChain"})," is the chain the funds are coming from. Must be either ",(0,t.jsx)(n.code,{children:'"X"'})," or ",(0,t.jsx)(n.code,{children:'"C"'}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"from"})," are the addresses that you want to use for this operation. If omitted, uses any of your\naddresses as needed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"changeAddr"})," is the address any change will be sent to. If omitted, change is sent to one of the\naddresses controlled by the user."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"username"})," is the user that controls from and change addresses."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"password"})," is ",(0,t.jsx)(n.code,{children:"username"}),"\u2018s password."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Call:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc": "2.0",\n    "method": "platform.importLUX",\n    "params": {\n        "to": "P-lux18jma8ppw3nhx5r4ap8clazz0dps7rv5ukulre5",\n        "from": ["P-lux18jma8ppw3nhx5r4ap8clazz0dps7rv5ukulre5"],\n        "changeAddr": "P-lux103y30cxeulkjfe3kwfnpt432ylmnxux8r73r8u",\n        "username": "myUsername",\n        "password": "myPassword"\n    },\n    "id": 1\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/P\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "txID": "P63NjowXaQJXt5cmspqdoD3VcuQdXUPM5eoZE2Vcg63aVEx8R",\n    "changeAddr": "P-lux103y30cxeulkjfe3kwfnpt432ylmnxux8r73r8u"\n  },\n  "id": 1\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"platformimportkey",children:(0,t.jsx)(n.code,{children:"platform.importKey"})}),"\n",(0,t.jsx)(n.admonition,{type:"caution",children:(0,t.jsxs)(n.p,{children:["Deprecated as of ",(0,t.jsx)(n.a,{href:"https://github.com/luxfi/luxd/releases/tag/v1.9.12",children:(0,t.jsx)(n.strong,{children:"v1.9.12"})}),"."]})}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["Not recommended for use on Mainnet. See warning notice in ",(0,t.jsx)(n.a,{href:"/docs/reference/luxd/keystore-api",children:"Keystore API"}),"."]})}),"\n",(0,t.jsx)(n.p,{children:"Give a user control over an address by providing the private key that controls the address."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"platform.importKey({\n    username: string,\n    password: string,\n    privateKey:string\n}) -> {address: string}\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Add ",(0,t.jsx)(n.code,{children:"privateKey"})," to ",(0,t.jsx)(n.code,{children:"username"}),"\u2018s set of private keys. ",(0,t.jsx)(n.code,{children:"address"})," is the address ",(0,t.jsx)(n.code,{children:"username"})," now\ncontrols with the private key."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Call:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc":"2.0",\n    "id"     :1,\n    "method" :"platform.importKey",\n    "params" :{\n        "username": "myUsername",\n        "password": "myPassword",\n        "privateKey": "PrivateKey-2w4XiXxPfQK4TypYqnohRL8DRNTz9cGiGmwQ1zmgEqD9c9KWLq"\n    }\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/P\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "id": 1,\n  "result": {\n    "address": "P-lux18jma8ppw3nhx5r4ap8clazz0dps7rv5ukulre5"\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"platformissuetx",children:(0,t.jsx)(n.code,{children:"platform.issueTx"})}),"\n",(0,t.jsx)(n.p,{children:"Issue a transaction to the Platform Chain."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"platform.issueTx({\n    tx: string,\n    encoding: string, // optional\n}) -> {txID: string}\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"tx"})," is the byte representation of a transaction."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"encoding"})," specifies the encoding format for the transaction bytes. Can only be ",(0,t.jsx)(n.code,{children:"hex"})," when a value\nis provided."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"txID"})," is the transaction\u2019s ID."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Call:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc": "2.0",\n    "method": "platform.issueTx",\n    "params": {\n        "tx":"0x00000009de31b4d8b22991d51aa6aa1fc733f23a851a8c9400000000000186a0000000005f041280000000005f9ca900000030390000000000000001fceda8f90fcb5d30614b99d79fc4baa29307762668f16eb0259a57c2d3b78c875c86ec2045792d4df2d926c40f829196e0bb97ee697af71f5b0a966dabff749634c8b729855e937715b0e44303fd1014daedc752006011b730",\n        "encoding": "hex"\n    },\n    "id": 1\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/P\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "txID": "G3BuH6ytQ2averrLxJJugjWZHTRubzCrUZEXoheG5JMqL5ccY"\n  },\n  "id": 1\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"platformlistaddresses",children:(0,t.jsx)(n.code,{children:"platform.listAddresses"})}),"\n",(0,t.jsx)(n.admonition,{type:"caution",children:(0,t.jsxs)(n.p,{children:["Deprecated as of ",(0,t.jsx)(n.a,{href:"https://github.com/luxfi/luxd/releases/tag/v1.9.12",children:(0,t.jsx)(n.strong,{children:"v1.9.12"})}),"."]})}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsxs)(n.p,{children:["Not recommended for use on Mainnet. See warning notice in ",(0,t.jsx)(n.a,{href:"/docs/reference/luxd/keystore-api",children:"Keystore API"}),"."]})}),"\n",(0,t.jsx)(n.p,{children:"List addresses controlled by the given user."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"platform.listAddresses({\n    username: string,\n    password: string\n}) -> {addresses: []string}\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Call:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc": "2.0",\n    "method": "platform.listAddresses",\n    "params": {\n        "username":"myUsername",\n        "password":"myPassword"\n    },\n    "id": 1\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/P\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "addresses": ["P-lux18jma8ppw3nhx5r4ap8clazz0dps7rv5ukulre5"]\n  },\n  "id": 1\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"platformsamplevalidators",children:(0,t.jsx)(n.code,{children:"platform.sampleValidators"})}),"\n",(0,t.jsx)(n.p,{children:"Sample validators from the specified Subnet."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"platform.sampleValidators(\n    {\n        size: int,\n        subnetID: string, // optional\n    }\n) ->\n{\n    validators: []string\n}\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"size"})," is the number of validators to sample."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"subnetID"})," is the Subnet to sampled from. If omitted, defaults to the Primary Network."]}),"\n",(0,t.jsxs)(n.li,{children:["Each element of ",(0,t.jsx)(n.code,{children:"validators"})," is the ID of a validator."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Call:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc":"2.0",\n    "id"     :1,\n    "method" :"platform.sampleValidators",\n    "params" :{\n        "size":2\n    }\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/P\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "id": 1,\n  "result": {\n    "validators": [\n      "NodeID-MFrZFVCXPv5iCn6M9K6XduxGTYp891xXZ",\n      "NodeID-NFBbbJ4qCmNaCzeW7sxErhvWqvEQMnYcN"\n    ]\n  }\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"platformvalidatedby",children:(0,t.jsx)(n.code,{children:"platform.validatedBy"})}),"\n",(0,t.jsx)(n.p,{children:"Get the Subnet that validates a given blockchain."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"platform.validatedBy(\n    {\n        blockchainID: string\n    }\n) -> {subnetID: string}\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"blockchainID"})," is the blockchain\u2019s ID."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"subnetID"})," is the ID of the Subnet that validates the blockchain."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Call:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc": "2.0",\n    "method": "platform.validatedBy",\n    "params": {\n        "blockchainID": "KDYHHKjM4yTJTT8H8qPs5KXzE6gQH5TZrmP1qVr1P6qECj3XN"\n    },\n    "id": 1\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/P\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "subnetID": "2bRCr6B4MiEfSjidDwxDpdCyviwnfUVqB2HGwhm947w9YYqb7r"\n  },\n  "id": 1\n}\n'})}),"\n",(0,t.jsx)(n.h3,{id:"platformvalidates",children:(0,t.jsx)(n.code,{children:"platform.validates"})}),"\n",(0,t.jsx)(n.p,{children:"Get the IDs of the blockchains a Subnet validates."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Signature:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"platform.validates(\n    {\n        subnetID: string\n    }\n) -> {blockchainIDs: []string}\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"subnetID"})," is the Subnet\u2019s ID."]}),"\n",(0,t.jsxs)(n.li,{children:["Each element of ",(0,t.jsx)(n.code,{children:"blockchainIDs"})," is the ID of a blockchain the Subnet validates."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Call:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'curl -X POST --data \'{\n    "jsonrpc": "2.0",\n    "method": "platform.validates",\n    "params": {\n        "subnetID":"2bRCr6B4MiEfSjidDwxDpdCyviwnfUVqB2HGwhm947w9YYqb7r"\n    },\n    "id": 1\n}\' -H \'content-type:application/json;\' 127.0.0.1:9650/ext/bc/P\n'})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example Response:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "jsonrpc": "2.0",\n  "result": {\n    "blockchainIDs": [\n      "KDYHHKjM4yTJTT8H8qPs5KXzE6gQH5TZrmP1qVr1P6qECj3XN",\n      "2TtHFqEAAJ6b33dromYMqfgavGPF3iCpdG3hwNMiart2aB5QHi"\n    ]\n  },\n  "id": 1\n}\n'})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},43540:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>i});var t=s(48318);const a={},r=t.createContext(a);function d(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:d(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);