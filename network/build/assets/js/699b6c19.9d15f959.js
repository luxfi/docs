"use strict";(self.webpackChunk_luxdocs_network=self.webpackChunk_luxdocs_network||[]).push([[7406],{13380:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>g,frontMatter:()=>s,metadata:()=>r,toc:()=>u});var t=i(49214),o=i(43540);const s={tags:["Tooling"],description:"Lux Plugin Manager is a command-line tool to manage virtual machines binaries on existing Luxd instances. It enables to add/remove nodes to Subnets, upgrade the VM plugin binaries as new versions get released to the plugin repository.",pagination_label:"Lux Plugin Manager"},a="Lux Plugin Manager",r={id:"tooling/lux-plugin-manager",title:"Lux Plugin Manager",description:"Lux Plugin Manager is a command-line tool to manage virtual machines binaries on existing Luxd instances. It enables to add/remove nodes to Subnets, upgrade the VM plugin binaries as new versions get released to the plugin repository.",source:"@site/docs/tooling/lux-plugin-manager.md",sourceDirName:"tooling",slug:"/tooling/lux-plugin-manager",permalink:"/docs/tooling/lux-plugin-manager",draft:!1,unlisted:!1,editUrl:"https://github.com/luxfi/docs/edit/main/docs/tooling/lux-plugin-manager.md",tags:[{label:"Tooling",permalink:"/docs/tags/tooling"}],version:"current",frontMatter:{tags:["Tooling"],description:"Lux Plugin Manager is a command-line tool to manage virtual machines binaries on existing Luxd instances. It enables to add/remove nodes to Subnets, upgrade the VM plugin binaries as new versions get released to the plugin repository.",pagination_label:"Lux Plugin Manager"}},l={},u=[{value:"<code>plugins-core</code>",id:"plugins-core",level:2}];function c(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",strong:"strong",...(0,o.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"lux-plugin-manager",children:"Lux Plugin Manager"}),"\n",(0,t.jsxs)(e.p,{children:["Lux Plugin Manager (",(0,t.jsx)(e.strong,{children:"APM"}),") is a command-line tool to manage virtual\nmachines binaries on existing Luxd instances. It enables to add/remove\nnodes to Subnets, upgrade the VM plugin binaries as new versions get released to\nthe plugin repository."]}),"\n",(0,t.jsxs)(e.p,{children:["GitHub: ",(0,t.jsx)(e.a,{href:"https://github.com/luxfi/apm",children:"https://github.com/luxfi/apm"})]}),"\n",(0,t.jsx)(e.h2,{id:"plugins-core",children:(0,t.jsx)(e.code,{children:"plugins-core"})}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"plugins-core"})," is plugin repository that ships with the ",(0,t.jsx)(e.code,{children:"apm"}),". A\nplugin repository consists of a set of virtual machine and Subnet definitions\nthat the ",(0,t.jsx)(e.code,{children:"apm"})," consumes to allow users to quickly and easily download and manage\nVM binaries."]}),"\n",(0,t.jsxs)(e.p,{children:["GitHub: ",(0,t.jsx)(e.a,{href:"https://github.com/luxfi/plugins-core",children:"https://github.com/luxfi/plugins-core"})]})]})}function g(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(c,{...n})}):c(n)}},43540:(n,e,i)=>{i.d(e,{R:()=>a,x:()=>r});var t=i(48318);const o={},s=t.createContext(o);function a(n){const e=t.useContext(s);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:a(n.components),t.createElement(s.Provider,{value:e},n.children)}}}]);