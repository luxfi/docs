"use strict";(self.webpackChunk_luxdocs_network=self.webpackChunk_luxdocs_network||[]).push([[8694],{12585:(o,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var e=t(49214),s=t(43540);const i={tags:["Tooling"],description:"Lux Ops is a suite of commands that enables you to launch and configure network infrastructure (virtual machines or cloud instances) and installs Lux nodes from scratch allowing for various configuration requirements. It provisions all resources required to run a node or network with recommended setups (configurable). This tool is intended for quickly creating, testing and iterating over various Lux network infrastructure configurations for testing and simulation purposes. Use this to play with various setups and reproduce potential problems and issues with possible configurations.",pagination_label:"Lux Ops"},r="Lux Ops",a={id:"tooling/ops",title:"Lux Ops",description:"Lux Ops is a suite of commands that enables you to launch and configure network infrastructure (virtual machines or cloud instances) and installs Lux nodes from scratch allowing for various configuration requirements. It provisions all resources required to run a node or network with recommended setups (configurable). This tool is intended for quickly creating, testing and iterating over various Lux network infrastructure configurations for testing and simulation purposes. Use this to play with various setups and reproduce potential problems and issues with possible configurations.",source:"@site/docs/tooling/ops.md",sourceDirName:"tooling",slug:"/tooling/ops",permalink:"/docs/tooling/ops",draft:!1,unlisted:!1,editUrl:"https://github.com/luxfi/docs/edit/main/docs/tooling/ops.md",tags:[{label:"Tooling",permalink:"/docs/tags/tooling"}],version:"current",frontMatter:{tags:["Tooling"],description:"Lux Ops is a suite of commands that enables you to launch and configure network infrastructure (virtual machines or cloud instances) and installs Lux nodes from scratch allowing for various configuration requirements. It provisions all resources required to run a node or network with recommended setups (configurable). This tool is intended for quickly creating, testing and iterating over various Lux network infrastructure configurations for testing and simulation purposes. Use this to play with various setups and reproduce potential problems and issues with possible configurations.",pagination_label:"Lux Ops"},sidebar:"tooling",previous:{title:"Lux Plugin Manager",permalink:"/docs/tooling/plugin-manager"},next:{title:"Luxd Install Script",permalink:"/docs/tooling/luxd-postman-collection/setup"}},u={},c=[];function l(o){const n={a:"a",h1:"h1",p:"p",...(0,s.R)(),...o.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(n.h1,{id:"lux-ops",children:"Lux Ops"}),"\n",(0,e.jsx)(n.p,{children:"Lux Ops is a suite of commands that enables you to launch and configure network infrastructure\n(virtual machines or cloud instances) and installs Lux nodes from scratch allowing\nfor various configuration requirements. It provisions all resources required to run\na node or network with recommended setups (configurable). This tool is intended\nfor quickly creating, testing and iterating over various Lux network\ninfrastructure configurations for testing and simulation purposes. Use this to\nplay with various setups and reproduce potential problems and issues with\npossible configurations."}),"\n",(0,e.jsxs)(n.p,{children:["GitHub: ",(0,e.jsx)(n.a,{href:"https://github.com/luxfi/ops",children:"https://github.com/luxfi/ops"})]})]})}function d(o={}){const{wrapper:n}={...(0,s.R)(),...o.components};return n?(0,e.jsx)(n,{...o,children:(0,e.jsx)(l,{...o})}):l(o)}},43540:(o,n,t)=>{t.d(n,{R:()=>r,x:()=>a});var e=t(48318);const s={},i=e.createContext(s);function r(o){const n=e.useContext(i);return e.useMemo((function(){return"function"==typeof o?o(n):{...n,...o}}),[n,o])}function a(o){let n;return n=o.disableParentContext?"function"==typeof o.components?o.components(s):o.components||s:r(o.components),e.createElement(i.Provider,{value:n},o.children)}}}]);