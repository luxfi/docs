"use strict";(self.webpackChunk_luxdocs_network=self.webpackChunk_luxdocs_network||[]).push([[1195],{59131:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>t,metadata:()=>c,toc:()=>a});var s=i(49214),l=i(43540);const t={tags:["Build","Virtual Machines"],description:"This is a language-agnostic high-level documentation explaining the basics of how to get started at implementing your own virtual machine from scratch.",sidebar_label:"Simple VM in Any Language",pagination_label:"Build a Simple VM From Scratch",sidebar_position:0},r="How to Build a Simple VM From Scratch",c={id:"build/vm/create/any-lang-vm",title:"How to Build a Simple VM From Scratch",description:"This is a language-agnostic high-level documentation explaining the basics of how to get started at implementing your own virtual machine from scratch.",source:"@site/docs/build/vm/create/any-lang-vm.md",sourceDirName:"build/vm/create",slug:"/build/vm/create/any-lang-vm",permalink:"/docs/build/vm/create/any-lang-vm",draft:!1,unlisted:!1,editUrl:"https://github.com/luxfi/docs/edit/main/docs/build/vm/create/any-lang-vm.md",tags:[{label:"Build",permalink:"/docs/tags/build"},{label:"Virtual Machines",permalink:"/docs/tags/virtual-machines"}],version:"current",sidebarPosition:0,frontMatter:{tags:["Build","Virtual Machines"],description:"This is a language-agnostic high-level documentation explaining the basics of how to get started at implementing your own virtual machine from scratch.",sidebar_label:"Simple VM in Any Language",pagination_label:"Build a Simple VM From Scratch",sidebar_position:0},sidebar:"build-vm",previous:{title:"Introduction to Virtual Machines",permalink:"/docs/build/vm/intro"},next:{title:"Build a Simple Golang VM",permalink:"/docs/build/vm/create/golang-vm-simple"}},d={},a=[{value:"Minimal Implementation",id:"minimal-implementation",level:2},{value:"Starting Process",id:"starting-process",level:2},{value:"VM Initialization",id:"vm-initialization",level:2},{value:"Pre-Initialization Sequence",id:"pre-initialization-sequence",level:3},{value:"Initialization Sequence",id:"initialization-sequence",level:3},{value:"Building Blocks",id:"building-blocks",level:3},{value:"Transaction Gossiping Sequence",id:"transaction-gossiping-sequence",level:4},{value:"Block Building Sequence",id:"block-building-sequence",level:4},{value:"Managing Conflicts",id:"managing-conflicts",level:4},{value:"json-RPC",id:"json-rpc",level:3}];function o(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"how-to-build-a-simple-vm-from-scratch",children:"How to Build a Simple VM From Scratch"}),"\n",(0,s.jsx)(n.p,{children:"This is a language-agnostic high-level documentation explaining the basics of how to get started\nat implementing your own virtual machine from scratch."}),"\n",(0,s.jsxs)(n.p,{children:["Lux virtual machines are grpc servers implementing Lux's\n",(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux",children:"Proto interfaces"}),". This means that it can be done in\n",(0,s.jsx)(n.a,{href:"https://grpc.io/docs/languages/",children:"any language that has a grpc implementation"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"minimal-implementation",children:"Minimal Implementation"}),"\n",(0,s.jsx)(n.p,{children:"To get the process started, at the minimum, you will to implement the following interfaces :"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm.runtime",children:(0,s.jsx)(n.code,{children:"vm.Runtime"})})," (Client)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm",children:(0,s.jsx)(n.code,{children:"vm.VM"})})," (Server)"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"To build a blockchain taking advantage of Luxd's consensus to build blocks, you will need\nto implement :"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:appsender",children:"AppSender"})," (Client)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:messenger",children:"Messenger"})," (Client)"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["To have a json-RPC endpoint, ",(0,s.jsx)(n.code,{children:"/ext/bc/subnetId/rpc"})," exposed by Luxd, you will need\nto implement :"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:http",children:(0,s.jsx)(n.code,{children:"Http"})})," (Server)"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["You can and should use a tool like ",(0,s.jsx)(n.code,{children:"buf"})," to generate the (Client/Server) code from the interfaces\nas stated in the ",(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux",children:"Lux module"}),"'s page."]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["There are ",(0,s.jsx)(n.em,{children:"server"})," and ",(0,s.jsx)(n.em,{children:"client"})," interfaces to implement.\nLuxd calls the ",(0,s.jsx)(n.em,{children:"server"})," interfaces exposed by your VM and your VM calls\nthe ",(0,s.jsx)(n.em,{children:"client"})," interfaces exposed by Luxd."]})}),"\n",(0,s.jsx)(n.h2,{id:"starting-process",children:"Starting Process"}),"\n",(0,s.jsxs)(n.p,{children:["Your VM is started by Luxd launching your binary. Your binary is started as a sub-process\nof Luxd. While launching your binary, Luxd passes an environment variable\n",(0,s.jsx)(n.code,{children:"LUX_VM_RUNTIME_ENGINE_ADDR"})," containing an url. We must use this url to initialize a\n",(0,s.jsx)(n.code,{children:"vm.Runtime"})," client."]}),"\n",(0,s.jsxs)(n.p,{children:["Your VM, after having started a grpc server implementing the VM interface must call the\n",(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm.runtime#vm.runtime.InitializeRequest",children:(0,s.jsx)(n.code,{children:"vm.Runtime.InitializeRequest"})}),"\nwith the following parameters."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"protocolVersion"})," : It must match the ",(0,s.jsx)(n.code,{children:"supported plugin version"})," of the\n",(0,s.jsx)(n.a,{href:"https://github.com/luxfi/Luxd/releases",children:"Luxd release"})," you are using.\nIt is always part of the release notes."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"addr"})," : It is your grpc server's address. It must be in the following format\n",(0,s.jsx)(n.code,{children:"host:port"})," (example ",(0,s.jsx)(n.code,{children:"localhost:12345"}),")"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"vm-initialization",children:"VM Initialization"}),"\n",(0,s.jsx)(n.p,{children:"The service methods are described in the same order as they are called.\nYou will need to implement these methods in your server."}),"\n",(0,s.jsx)(n.h3,{id:"pre-initialization-sequence",children:"Pre-Initialization Sequence"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"Luxd starts/stops your process multiple times before launching the real initialization"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.VM.Version",children:"VM.Version"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Return : your VM's version."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.VM.CreateStaticHandlers",children:"VM.CreateStaticHandler"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Return : an empty array - (Not absolutely required)."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.VM.Shutdown",children:"VM.Shutdown"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"You should gracefully stop your process."}),"\n",(0,s.jsx)(n.li,{children:"Return : Empty"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"initialization-sequence",children:"Initialization Sequence"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.VM.CreateStaticHandlers",children:"VM.CreateStaticHandlers"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Return an empty array - (Not absolutely required)."}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.VM.Initialize",children:"VM.Initialize"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Param : an\n",(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.InitializeRequest",children:"InitializeRequest"}),"."]}),"\n",(0,s.jsx)(n.li,{children:"You must use this data to initialize your VM."}),"\n",(0,s.jsx)(n.li,{children:"You should add the genesis block to your blockchain and set it as the last accepted block."}),"\n",(0,s.jsxs)(n.li,{children:["Return : an\n",(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.InitializeResponse",children:"InitializeResponse"}),"\ncontaining data about the genesis extracted from the ",(0,s.jsx)(n.code,{children:"genesis_bytes"})," that was sent in the\nrequest."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.VM.VerifyHeightIndex",children:"VM.VerifyHeightIndex"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Return : a\n",(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.VerifyHeightIndexResponse",children:"VerifyHeightIndexResponse"}),"\nwith the code ",(0,s.jsx)(n.code,{children:"ERROR_UNSPECIFIED"})," to indicate that no error has occurred."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.VM.CreateHandlers",children:"VM.CreateHandlers"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["To serve json-RPC endpoint, ",(0,s.jsx)(n.code,{children:"/ext/bc/subnetId/rpc"})," exposed by Luxd"]}),"\n",(0,s.jsxs)(n.li,{children:["See ",(0,s.jsx)(n.a,{href:"#json-rpc",children:"json-RPC"})," for more detail"]}),"\n",(0,s.jsxs)(n.li,{children:["Create a ",(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:http",children:(0,s.jsx)(n.code,{children:"Http"})})," server and get its url."]}),"\n",(0,s.jsxs)(n.li,{children:["Return : a ",(0,s.jsx)(n.code,{children:"CreateHandlersResponse"})," containing a single item with the server's url. (or an empty\narray if not implementing the json-RPC endpoint)"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.VM.StateSyncEnabled",children:"VM.StateSyncEnabled"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Return : ",(0,s.jsx)(n.code,{children:"true"})," if you want to enable StateSync, ",(0,s.jsx)(n.code,{children:"false"})," otherwise."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.VM.SetState",children:"VM.SetState"}),"\n",(0,s.jsxs)(n.em,{children:["If you had specified ",(0,s.jsx)(n.code,{children:"true"})," in the ",(0,s.jsx)(n.code,{children:"StateSyncEnabled"})," result"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Param : a\n",(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.SetStateRequest",children:"SetStateRequest"}),"\nwith the ",(0,s.jsx)(n.code,{children:"StateSyncing"})," value"]}),"\n",(0,s.jsxs)(n.li,{children:["Set your blockchain's state to ",(0,s.jsx)(n.code,{children:"StateSyncing"})]}),"\n",(0,s.jsxs)(n.li,{children:["Return : a\n",(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.SetStateResponse",children:"SetStateResponse"}),"\nbuilt from the genesis block."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.VM.GetOngoingSyncStateSummary",children:"VM.GetOngoingSyncStateSummary"}),"\n",(0,s.jsxs)(n.em,{children:["If you had specified ",(0,s.jsx)(n.code,{children:"true"})," in the ",(0,s.jsx)(n.code,{children:"StateSyncEnabled"})," result"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Return : a\n",(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.GetOngoingSyncStateSummaryResponse",children:"GetOngoingSyncStateSummaryResponse"}),"\nbuilt from the genesis block."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.VM.SetState",children:"VM.SetState"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Param : a\n",(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.SetStateRequest",children:"SetStateRequest"}),"\nwith the ",(0,s.jsx)(n.code,{children:"Bootstrapping"})," value"]}),"\n",(0,s.jsxs)(n.li,{children:["Set your blockchain's state to ",(0,s.jsx)(n.code,{children:"Bootstrapping"})]}),"\n",(0,s.jsxs)(n.li,{children:["Return : a\n",(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.SetStateResponse",children:"SetStateResponse"}),"\nbuilt from the genesis block."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.VM.SetPreference",children:"VM.SetPreference"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Param : ",(0,s.jsx)(n.code,{children:"SetPreferenceRequest"})," containing the preferred block ID"]}),"\n",(0,s.jsx)(n.li,{children:"Return : Empty"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.VM.SetState",children:"VM.SetState"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Param : a\n",(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.SetStateRequest",children:"SetStateRequest"}),"\nwith the ",(0,s.jsx)(n.code,{children:"NormalOp"})," value"]}),"\n",(0,s.jsxs)(n.li,{children:["Set your blockchain's state to ",(0,s.jsx)(n.code,{children:"NormalOp"})]}),"\n",(0,s.jsxs)(n.li,{children:["Return : a\n",(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.SetStateResponse",children:"SetStateResponse"}),"\nbuilt from the genesis block."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.VM.Connected",children:"VM.Connected"}),"\n(for every other node validating this Subnet in the network)","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Param : a\n",(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.ConnectedRequest",children:"ConnectedRequest"}),"\nwith the NodeID and the version of Luxd."]}),"\n",(0,s.jsx)(n.li,{children:"Return : Empty"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.VM.Health",children:"VM.Health"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Param : Empty"}),"\n",(0,s.jsxs)(n.li,{children:["Return : a\n",(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.HealthResponse",children:"HealthResponse"}),"\nwith an empty ",(0,s.jsx)(n.code,{children:"details"})," property."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.VM.ParseBlock",children:"VM.ParseBlock"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Param : A byte array containing a Block (the genesis block in this case)"}),"\n",(0,s.jsxs)(n.li,{children:["Return : a\n",(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.ParseBlockResponse",children:"ParseBlockResponse"}),"\nbuilt from the last accepted block."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"At this point, your VM is fully started and initialized."}),"\n",(0,s.jsx)(n.h3,{id:"building-blocks",children:"Building Blocks"}),"\n",(0,s.jsx)(n.h4,{id:"transaction-gossiping-sequence",children:"Transaction Gossiping Sequence"}),"\n",(0,s.jsxs)(n.p,{children:["When your VM receives transactions (for example using the ",(0,s.jsx)(n.a,{href:"#json-rpc",children:"json-RPC"})," endpoints),\nit can gossip them to the other nodes by using the\n",(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:appsender",children:"AppSender"})," service."]}),"\n",(0,s.jsx)(n.p,{children:"Supposing we have a 3 nodes network with nodeX, nodeY, nodeZ"}),"\n",(0,s.jsxs)(n.p,{children:["NodeX has received a new transaction on it's json-RPC endpoint :\n",(0,s.jsx)(n.em,{children:"on nodeX"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:appsender#appsender.AppSender.SendAppGossip",children:(0,s.jsx)(n.code,{children:"AppSender.SendAppGossip"})}),"\n(",(0,s.jsx)(n.em,{children:"client"}),")","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["You must serialize your transaction data into a byte array and call the\n",(0,s.jsx)(n.code,{children:"SendAppGossip"})," to propagate the transaction."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Luxd then propagates this to the other nodes."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"on nodeY and nodeZ"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.VM.AppGossip",children:"VM.AppGossip"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Param : A byte array containing your transaction data, and the NodeID of the node which sent\nthe gossip message."}),"\n",(0,s.jsx)(n.li,{children:"You must deserialize the transaction and store it for the next block."}),"\n",(0,s.jsx)(n.li,{children:"Return : Empty"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"block-building-sequence",children:"Block Building Sequence"}),"\n",(0,s.jsxs)(n.p,{children:["Whenever your VM is ready to build a new block, it will initiate the block building process by\nusing the ",(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:messenger",children:"Messenger"})," service.\nSupposing that nodeY wants to build the block. ",(0,s.jsx)(n.em,{children:"you probably will implement some kind of background\nworker checking every second if there are any pending transactions"})," :"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"on nodeY"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.em,{children:"client"}),"\n",(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:messenger#messenger.Messenger.Notify",children:(0,s.jsx)(n.code,{children:"Messenger.Notify"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["You must issue a notify request to Luxd by calling the method with the\n",(0,s.jsx)(n.code,{children:"MESSAGE_BUILD_BLOCK"})," value."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"on nodeY"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.VM.BuildBlock",children:"VM.BuildBlock"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Param : Empty"}),"\n",(0,s.jsx)(n.li,{children:"You must build a block with your pending transactions. Serialize it to a byte array."}),"\n",(0,s.jsx)(n.li,{children:'Store this block in memory as a "pending blocks"'}),"\n",(0,s.jsxs)(n.li,{children:["Return : a\n",(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.BuildBlockResponse",children:"BuildBlockResponse"}),"\nfrom the newly built block and it's associated data (",(0,s.jsx)(n.code,{children:"id"}),", ",(0,s.jsx)(n.code,{children:"parent_id"}),", ",(0,s.jsx)(n.code,{children:"height"}),", ",(0,s.jsx)(n.code,{children:"timestamp"}),")."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.VM.BlockVerify",children:"VM.BlockVerify"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Param : The byte array containing the block data"}),"\n",(0,s.jsx)(n.li,{children:"Return : the block's timestamp"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.VM.SetPreference",children:"VM.SetPreference"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Param : The block's ID"}),"\n",(0,s.jsx)(n.li,{children:"You must mark this block as the next preferred block."}),"\n",(0,s.jsx)(n.li,{children:"Return : Empty"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"on nodeX and nodeZ"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.VM.ParseBlock",children:"VM.ParseBlock"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Param : A byte array containing a the newly built block's data"}),"\n",(0,s.jsx)(n.li,{children:'Store this block in memory as a "pending blocks"'}),"\n",(0,s.jsxs)(n.li,{children:["Return : a\n",(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.ParseBlockResponse",children:"ParseBlockResponse"}),"\nbuilt from the last accepted block."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.VM.BlockVerify",children:"VM.BlockVerify"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Param : The byte array containing the block data"}),"\n",(0,s.jsx)(n.li,{children:"Return : the block's timestamp"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.VM.SetPreference",children:"VM.SetPreference"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Param : The block's ID"}),"\n",(0,s.jsx)(n.li,{children:"You must mark this block as the next preferred block."}),"\n",(0,s.jsx)(n.li,{children:"Return : Empty"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.em,{children:"on all nodes"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.VM.BlockAccept",children:"VM.BlockAccept"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Param : The block's ID"}),"\n",(0,s.jsx)(n.li,{children:"You must accept this block as your last final block."}),"\n",(0,s.jsx)(n.li,{children:"Return : Empty"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"managing-conflicts",children:"Managing Conflicts"}),"\n",(0,s.jsxs)(n.p,{children:["Conflicts happen when two or more nodes propose the next block at the same time.\nLuxd takes care of this and decides which block should be considered\nfinal, and which blocks should be rejected using Snowman consensus.\nOn the VM side, all there is to do is implement the ",(0,s.jsx)(n.code,{children:"VM.BlockAccept"})," and\n",(0,s.jsx)(n.code,{children:"VM.BlockReject"})," methods."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.em,{children:["nodeX proposes block ",(0,s.jsx)(n.code,{children:"0x123..."}),", nodeY proposes block ",(0,s.jsx)(n.code,{children:"0x321..."})," and nodeZ\nproposes block ",(0,s.jsx)(n.code,{children:"0x456"})]})}),"\n",(0,s.jsx)(n.p,{children:"There are three conflicting blocks (different hashes), and if we look at our VM's\nlog files, we can see that Luxd uses Snowman to decide which block must\nbe accepted."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-log",children:"...\n... snowman/voter.go:58 filtering poll results ...\n... snowman/voter.go:65 finishing poll ...\n... snowman/voter.go:87 Snowman engine can't quiesce\n... \n... snowman/voter.go:58 filtering poll results ...\n... snowman/voter.go:65 finishing poll ...\n... snowman/topological.go:600 accepting block\n...\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Supposing that Luxd accepts block ",(0,s.jsx)(n.code,{children:"0x123..."}),". The following RPC methods\nare called on all nodes :"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.VM.BlockAccept",children:"VM.BlockAccept"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Param : The block's ID (",(0,s.jsx)(n.code,{children:"0x123..."}),")"]}),"\n",(0,s.jsx)(n.li,{children:"You must accept this block as your last final block."}),"\n",(0,s.jsx)(n.li,{children:"Return : Empty"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.VM.BlockReject",children:"VM.BlockReject"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Param : The block's ID (",(0,s.jsx)(n.code,{children:"0x321..."}),")"]}),"\n",(0,s.jsx)(n.li,{children:"You must mark this block as rejected."}),"\n",(0,s.jsx)(n.li,{children:"Return : Empty"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:vm#vm.VM.BlockReject",children:"VM.BlockReject"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Param : The block's ID (",(0,s.jsx)(n.code,{children:"0x456..."}),")"]}),"\n",(0,s.jsx)(n.li,{children:"You must mark this block as rejected."}),"\n",(0,s.jsx)(n.li,{children:"Return : Empty"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"json-rpc",children:"json-RPC"}),"\n",(0,s.jsxs)(n.p,{children:["To enable your json-RPC endpoint, you must implement the HandleSimple method of the\n",(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:http",children:(0,s.jsx)(n.code,{children:"Http"})})," interface."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:http#http.HTTP.HandleSimple",children:(0,s.jsx)(n.code,{children:"Http.HandleSimple"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Param : a\n",(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:http#http.HandleSimpleHTTPRequest",children:"HandleSimpleHTTPRequest"}),"\ncontaining the original request's method, url, headers, and body."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Analyze, deserialize and handle the request"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.em,{children:["for example, if the request represents a transaction, we must deserialize it, check the\nsignature, store it and gossip it to the other nodes using the\n",(0,s.jsx)(n.a,{href:"#block-building-sequence",children:"messenger client"}),")"]})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Return the\n",(0,s.jsx)(n.a,{href:"https://buf.build/luxfi/lux/docs/main:http#http.HandleSimpleHTTPResponse",children:"HandleSimpleHTTPResponse"}),"\nresponse that will be sent back to the original sender."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["This server is registered with Luxd during the\n",(0,s.jsx)(n.a,{href:"#initialization-sequence",children:"initialization process"})," when the ",(0,s.jsx)(n.code,{children:"VM.CreateHandlers"})," method is called.\nYou must simply respond with the server's url in the ",(0,s.jsx)(n.code,{children:"CreateHandlersResponse"}),"\nresult."]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},43540:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>c});var s=i(48318);const l={},t=s.createContext(l);function r(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);